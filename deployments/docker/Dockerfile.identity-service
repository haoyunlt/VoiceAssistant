# Multi-stage build for Identity Service
# Stage 1: Builder
FROM golang:1.21-alpine AS builder

# 安装依赖
RUN apk add --no-cache git make

# 设置工作目录
WORKDIR /app

# 复制 go.mod 和 go.sum
COPY go.mod go.sum ./
RUN go mod download

# 复制源代码
COPY . .

# 编译二进制文件
RUN CGO_ENABLED=0 GOOS=linux go build -a -installsuffix cgo \
    -ldflags="-w -s -X main.Version=${VERSION:-v2.0.0}" \
    -o /app/bin/identity-service \
    ./cmd/identity-service

# Stage 2: Final
FROM alpine:latest

# 安装 ca-certificates（用于 HTTPS 请求）
RUN apk --no-cache add ca-certificates tzdata

# 设置时区
ENV TZ=Asia/Shanghai

# 创建非 root 用户
RUN addgroup -g 1000 app && \
    adduser -D -u 1000 -G app app

# 设置工作目录
WORKDIR /app

# 从 builder 复制二进制文件
COPY --from=builder /app/bin/identity-service /app/identity-service

# 复制配置文件
COPY --from=builder /app/configs/identity-service.yaml /app/configs/identity-service.yaml

# 切换到非 root 用户
USER app

# 暴露端口
EXPOSE 8000 9000

# 健康检查
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
    CMD wget --no-verbose --tries=1 --spider http://localhost:8000/health || exit 1

# 启动服务
ENTRYPOINT ["/app/identity-service"]
CMD ["-conf", "/app/configs/identity-service.yaml"]

