# Docker Compose - Nacos 配置中心集成
# 用于演示本地配置和配置中心两种启动模式

version: "3.8"

services:
  # Nacos 配置中心
  nacos:
    image: nacos/nacos-server:v2.3.0
    container_name: nacos
    environment:
      - MODE=standalone
      - SPRING_DATASOURCE_PLATFORM=embedded
    ports:
      - "8848:8848"
      - "9848:9848"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8848/nacos/"]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - nacos-data:/home/nacos/data
    networks:
      - voice-assistant

  # ============================================
  # Go 服务示例 - Conversation Service
  # ============================================
  conversation-service-local:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile.go-service
      args:
        SERVICE_NAME: conversation-service
    container_name: conversation-service-local
    environment:
      # 本地配置模式
      - CONFIG_MODE=local
      - CONFIG_PATH=/app/configs/conversation-service.yaml
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=voiceassistant
      - DB_PASSWORD=password
      - DB_NAME=voiceassistant
    ports:
      - "8080:8080"
    volumes:
      - ../../configs:/app/configs
    depends_on:
      - postgres
      - redis
    networks:
      - voice-assistant
    profiles:
      - local

  conversation-service-nacos:
    build:
      context: ../../
      dockerfile: deployments/docker/Dockerfile.go-service
      args:
        SERVICE_NAME: conversation-service
    container_name: conversation-service-nacos
    environment:
      # Nacos 配置中心模式
      - CONFIG_MODE=nacos
      - CONFIG_PATH=/app/configs/conversation-service.yaml
      - NACOS_SERVER_ADDR=nacos
      - NACOS_SERVER_PORT=8848
      - NACOS_NAMESPACE=
      - NACOS_GROUP=VoiceAssistant
      - NACOS_DATA_ID=conversation-service.yaml
      - NACOS_USERNAME=
      - NACOS_PASSWORD=
      # 环境变量仍可覆盖
      - PORT=8080
      - DB_HOST=postgres
      - DB_PORT=5432
    ports:
      - "8081:8080"
    volumes:
      - ../../configs:/app/configs
    depends_on:
      nacos:
        condition: service_healthy
      postgres:
        condition: service_started
      redis:
        condition: service_started
    networks:
      - voice-assistant
    profiles:
      - nacos

  # ============================================
  # Python 服务示例 - Agent Engine
  # ============================================
  agent-engine-local:
    build:
      context: ../../algo/agent-engine
      dockerfile: ../../deployments/docker/Dockerfile.python-service
    container_name: agent-engine-local
    environment:
      # 本地配置模式
      - CONFIG_MODE=local
      - CONFIG_PATH=/app/configs/agent-engine.yaml
      - HOST=0.0.0.0
      - PORT=8003
      - MILVUS_HOST=milvus
      - MILVUS_PORT=19530
      - EMBEDDING_SERVICE_URL=http://model-adapter:8002
    ports:
      - "8003:8003"
    volumes:
      - ../../configs:/app/configs
    depends_on:
      - milvus
    networks:
      - voice-assistant
    profiles:
      - local

  agent-engine-nacos:
    build:
      context: ../../algo/agent-engine
      dockerfile: ../../deployments/docker/Dockerfile.python-service
    container_name: agent-engine-nacos
    environment:
      # Nacos 配置中心模式
      - CONFIG_MODE=nacos
      - CONFIG_PATH=/app/configs/agent-engine.yaml
      - NACOS_SERVER_ADDR=nacos
      - NACOS_SERVER_PORT=8848
      - NACOS_NAMESPACE=
      - NACOS_GROUP=VoiceAssistant
      - NACOS_DATA_ID=agent-engine.yaml
      - NACOS_USERNAME=
      - NACOS_PASSWORD=
      # 环境变量仍可覆盖
      - HOST=0.0.0.0
      - PORT=8003
    ports:
      - "8004:8003"
    volumes:
      - ../../configs:/app/configs
    depends_on:
      nacos:
        condition: service_healthy
      milvus:
        condition: service_started
    networks:
      - voice-assistant
    profiles:
      - nacos

  # ============================================
  # 基础设施服务
  # ============================================
  postgres:
    image: postgres:15-alpine
    container_name: postgres
    environment:
      - POSTGRES_USER=voiceassistant
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=voiceassistant
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - voice-assistant

  redis:
    image: redis:7-alpine
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - voice-assistant

  milvus:
    image: milvusdb/milvus:latest
    container_name: milvus
    environment:
      - ETCD_USE_EMBED=true
      - COMMON_STORAGETYPE=local
    ports:
      - "19530:19530"
      - "9091:9091"
    volumes:
      - milvus-data:/var/lib/milvus
    networks:
      - voice-assistant

volumes:
  nacos-data:
  postgres-data:
  redis-data:
  milvus-data:

networks:
  voice-assistant:
    driver: bridge
# ============================================
# 使用说明
# ============================================
#
# 启动本地配置模式：
#   docker-compose -f docker-compose.nacos.yml --profile local up -d
#
# 启动 Nacos 配置中心模式：
#   docker-compose -f docker-compose.nacos.yml --profile nacos up -d
#
# 同时启动两种模式（用于对比测试）：
#   docker-compose -f docker-compose.nacos.yml --profile local --profile nacos up -d
#
# 访问 Nacos 控制台：
#   http://localhost:8848/nacos （账号/密码：nacos/nacos）
#
# 在 Nacos 中配置服务：
#   1. 登录 Nacos 控制台
#   2. 进入"配置管理" -> "配置列表"
#   3. 创建配置：
#      - Data ID: conversation-service.yaml 或 agent-engine.yaml
#      - Group: VoiceAssistant
#      - 配置格式: YAML
#      - 配置内容: 复制对应的 configs/*.yaml 内容
