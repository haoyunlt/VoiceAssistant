---
# Redis配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-config
  namespace: voiceassistant-infra
  labels:
    app: redis
data:
  redis.conf: |
    # Redis配置
    bind 0.0.0.0
    protected-mode yes
    port 6379
    tcp-backlog 511
    timeout 0
    tcp-keepalive 300
    daemonize no
    supervised no
    loglevel notice
    databases 16
    
    # 持久化
    save 900 1
    save 300 10
    save 60 10000
    stop-writes-on-bgsave-error yes
    rdbcompression yes
    rdbchecksum yes
    dbfilename dump.rdb
    dir /data
    
    # AOF
    appendonly yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    no-appendfsync-on-rewrite no
    auto-aof-rewrite-percentage 100
    auto-aof-rewrite-min-size 64mb
    
    # 内存管理
    maxmemory 2gb
    maxmemory-policy allkeys-lru
    
    # 慢日志
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    
    # 客户端输出缓冲
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit replica 256mb 64mb 60
    client-output-buffer-limit pubsub 32mb 8mb 60

---
apiVersion: v1
kind: Secret
metadata:
  name: redis-secret
  namespace: voiceassistant-infra
type: Opaque
stringData:
  # 生产环境应该设置强密码
  redis-password: ""

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: voiceassistant-infra
  labels:
    app: redis
spec:
  type: ClusterIP
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  selector:
    app: redis

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis
  namespace: voiceassistant-infra
  labels:
    app: redis
spec:
  serviceName: redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9121"
    spec:
      containers:
      - name: redis
        image: redis:7.2-alpine
        imagePullPolicy: IfNotPresent
        command:
        - redis-server
        - /usr/local/etc/redis/redis.conf
        ports:
        - containerPort: 6379
          name: redis
        resources:
          requests:
            cpu: 250m
            memory: 512Mi
          limits:
            cpu: 500m
            memory: 1Gi
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
        readinessProbe:
          exec:
            command:
            - redis-cli
            - ping
          initialDelaySeconds: 5
          periodSeconds: 3
          timeoutSeconds: 1
        volumeMounts:
        - name: redis-data
          mountPath: /data
        - name: redis-config
          mountPath: /usr/local/etc/redis
      
      # Redis Exporter for Prometheus
      - name: redis-exporter
        image: oliver006/redis_exporter:v1.55.0-alpine
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 9121
          name: metrics
        env:
        - name: REDIS_ADDR
          value: "localhost:6379"
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 100m
            memory: 128Mi
      
      volumes:
      - name: redis-config
        configMap:
          name: redis-config
          items:
          - key: redis.conf
            path: redis.conf
  
  volumeClaimTemplates:
  - metadata:
      name: redis-data
    spec:
      accessModes: ["ReadWriteOnce"]
      resources:
        requests:
          storage: 10Gi

---
# Redis Sentinel (可选，用于高可用)
# 如果需要Redis主从和自动故障转移，请启用此配置
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-sentinel-config
  namespace: voiceassistant-infra
data:
  sentinel.conf: |
    port 26379
    dir /tmp
    sentinel monitor mymaster redis-0.redis.voiceassistant-infra.svc.cluster.local 6379 2
    sentinel down-after-milliseconds mymaster 5000
    sentinel parallel-syncs mymaster 1
    sentinel failover-timeout mymaster 10000

