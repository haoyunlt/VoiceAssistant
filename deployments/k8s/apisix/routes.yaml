---
# APISIX Routes配置
# 从Istio VirtualService迁移到APISIX
# 基于 configs/gateway/apisix-routes.yaml 整合Istio功能

apiVersion: v1
kind: ConfigMap
metadata:
  name: apisix-routes
  namespace: apisix
data:
  routes.yaml: |
    routes:
      #
      # ========== HTTP/REST APIs ==========
      #

      # 1. Identity Service - 认证与授权
      - id: identity-auth
        name: "Identity Service - Authentication"
        uri: /api/v1/auth/*
        host: api.voiceassistant.com
        methods:
          - GET
          - POST
        priority: 10

        upstream_id: identity-service

        timeout:
          connect: 3
          send: 10
          read: 10

        plugins:
          # gRPC转码 (HTTP -> gRPC)
          grpc-transcode:
            proto_id: identity-v1
            service: identity.v1.Identity
            method: "*"

          # 限流 - 按租户
          limit-req:
            rate: 100
            burst: 50
            key: "$http_x_tenant_id"
            key_type: var
            rejected_code: 429
            rejected_msg: "Too many requests from tenant"

          # CORS
          cors:
            allow_origins: "https://*.voiceassistant.com"
            allow_methods: "GET,POST,OPTIONS"
            allow_headers: "*"
            allow_credential: true

          # Prometheus指标
          prometheus:
            prefer_name: true

          # OpenTelemetry追踪
          opentelemetry:
            sampler:
              name: always_on
            additional_attributes:
              - service.type
              - ai.processing

          # 重试策略 (对应Istio retries)
          proxy-rewrite:
            headers:
              set:
                X-Request-ID: "$request_id"
                X-Forwarded-Proto: "$scheme"

      # 2. Identity Service - 用户管理
      - id: identity-users
        name: "Identity Service - Users"
        uri: /api/v1/users/*
        host: api.voiceassistant.com
        methods:
          - GET
          - POST
          - PUT
          - DELETE
        priority: 10

        upstream_id: identity-service

        timeout:
          connect: 3
          send: 10
          read: 10

        plugins:
          jwt-auth: {}
          grpc-transcode:
            proto_id: identity-v1
            service: identity.v1.Identity
            method: "*"
          limit-req:
            rate: 100
            burst: 50
            key: "$http_x_user_id"
            key_type: var
          cors: {}
          prometheus: {}
          opentelemetry: {}

      # 3. Conversation Service
      - id: conversation-service
        name: "Conversation Service"
        uris:
          - /api/v1/conversations/*
          - /api/v1/messages/*
        host: api.voiceassistant.com
        methods:
          - GET
          - POST
          - PUT
          - DELETE
        priority: 10

        upstream_id: conversation-service

        timeout:
          connect: 3
          send: 30
          read: 30

        plugins:
          jwt-auth: {}
          grpc-transcode:
            proto_id: conversation-v1
            service: conversation.v1.Conversation
            method: "*"

          # 限流 - 按用户
          limit-req:
            rate: 200
            burst: 100
            key: "$http_x_user_id"
            key_type: var

          # 幂等性 (使用Redis)
          request-id:
            header_name: X-Request-ID
            include_in_response: true

          prometheus: {}
          opentelemetry: {}

      # 4. Knowledge Service
      - id: knowledge-service
        name: "Knowledge Service"
        uris:
          - /api/v1/knowledge/*
          - /api/v1/documents/*
        host: api.voiceassistant.com
        methods:
          - GET
          - POST
          - PUT
          - DELETE
        priority: 10

        upstream_id: knowledge-service

        timeout:
          connect: 3
          send: 60
          read: 60

        plugins:
          jwt-auth: {}
          grpc-transcode:
            proto_id: knowledge-v1
            service: knowledge.v1.Knowledge
            method: "*"
          limit-req:
            rate: 50
            burst: 20
            key: "$http_x_tenant_id"
            key_type: var
          prometheus: {}
          opentelemetry: {}

      # 5. AI Orchestrator (主AI处理)
      - id: ai-orchestrator
        name: "AI Orchestrator Service"
        uri: /api/v1/ai/*
        host: api.voiceassistant.com
        methods:
          - GET
          - POST
        priority: 10

        upstream_id: ai-orchestrator

        timeout:
          connect: 3
          send: 120
          read: 120

        plugins:
          jwt-auth: {}

          # 限流 - AI服务更严格
          limit-req:
            rate: 30
            burst: 10
            key: "$http_x_user_id"
            key_type: var
            rejected_code: 429
            rejected_msg: "AI processing rate limit exceeded"

          # 请求体大小限制
          limit-count:
            count: 100
            time_window: 60
            key: "$http_x_user_id"
            key_type: var

          prometheus:
            prefer_name: true

          opentelemetry:
            sampler:
              name: parent_base
              options:
                fraction: 0.5  # 50%采样率（AI服务）

      # 6. Voice Engine (HTTP)
      - id: voice-engine-http
        name: "Voice Engine HTTP API"
        uri: /api/v1/voice/*
        host: api.voiceassistant.com
        methods:
          - GET
          - POST
        priority: 10

        upstream_id: voice-engine

        timeout:
          connect: 3
          send: 300
          read: 300

        plugins:
          jwt-auth: {}
          limit-req:
            rate: 50
            burst: 20
            key: "$http_x_session_id"
            key_type: var
          prometheus: {}
          opentelemetry: {}

        enable_websocket: false

      #
      # ========== WebSocket Routes ==========
      #

      # 7. Voice WebSocket (语音流式)
      - id: voice-websocket
        name: "Voice WebSocket Stream"
        uri: /ws/voice/*
        host: ws.voiceassistant.com
        methods:
          - GET
        priority: 10

        upstream_id: voice-engine

        timeout:
          connect: 3
          send: 3600
          read: 3600

        plugins:
          jwt-auth: {}

          # WebSocket特定限流
          limit-conn:
            conn: 10
            burst: 5
            default_conn_delay: 0.1
            key: "$http_x_user_id"
            key_type: var

          # 会话保持
          proxy-rewrite:
            headers:
              set:
                Upgrade: "$http_upgrade"
                Connection: "upgrade"
                X-Session-ID: "$http_x_session_id"

          prometheus:
            prefer_name: true

          opentelemetry: {}

        enable_websocket: true

      # 8. Conversation WebSocket
      - id: conversation-websocket
        name: "Conversation WebSocket"
        uri: /ws/conversation/*
        host: ws.voiceassistant.com
        methods:
          - GET
        priority: 10

        upstream_id: conversation-service

        timeout:
          connect: 3
          send: 3600
          read: 3600

        plugins:
          jwt-auth: {}
          limit-conn:
            conn: 20
            burst: 10
            key: "$http_x_user_id"
            key_type: var
          prometheus: {}
          opentelemetry: {}

        enable_websocket: true

      #
      # ========== gRPC Routes ==========
      #

      # 9. Identity gRPC Service
      - id: identity-grpc
        name: "Identity gRPC Service"
        uri: /identity.IdentityService/*
        host: grpc.voiceassistant.com
        methods:
          - POST
        priority: 10

        upstream_id: identity-service-grpc

        timeout:
          connect: 3
          send: 10
          read: 10

        plugins:
          grpc-web: {}
          prometheus: {}
          opentelemetry: {}

      # 10. Knowledge gRPC Service
      - id: knowledge-grpc
        name: "Knowledge gRPC Service"
        uri: /knowledge.KnowledgeService/*
        host: grpc.voiceassistant.com
        methods:
          - POST
        priority: 10

        upstream_id: knowledge-service-grpc

        timeout:
          connect: 3
          send: 60
          read: 60

        plugins:
          grpc-web: {}
          prometheus: {}
          opentelemetry: {}

      # 11. Model Router gRPC Service
      - id: model-router-grpc
        name: "Model Router gRPC Service"
        uri: /model.ModelRouter/*
        host: grpc.voiceassistant.com
        methods:
          - POST
        priority: 10

        upstream_id: model-router-grpc

        timeout:
          connect: 3
          send: 180
          read: 180

        plugins:
          grpc-web: {}
          prometheus: {}
          opentelemetry:
            sampler:
              name: parent_base
              options:
                fraction: 0.5

      #
      # ========== Health & Monitoring ==========
      #

      # 12. Health Check
      - id: health-check
        name: "Health Check"
        uri: /health
        host: api.voiceassistant.com
        methods:
          - GET
        priority: 1

        upstream_id: ai-orchestrator

        timeout:
          connect: 1
          send: 5
          read: 5

        plugins:
          prometheus: {}

      # 13. Metrics Endpoint (内部)
      - id: metrics
        name: "Internal Metrics"
        uri: /metrics
        host: api.voiceassistant.com
        methods:
          - GET
        priority: 1

        plugins:
          # IP白名单 - 仅允许内部网络
          ip-restriction:
            whitelist:
              - "10.0.0.0/8"
              - "172.16.0.0/12"
              - "192.168.0.0/16"

          prometheus: {}

        upstream:
          type: roundrobin
          nodes:
            "apisix-admin.apisix.svc.cluster.local:9091": 1

---
# APISIX Upstreams配置
# 对应Istio DestinationRule
apiVersion: v1
kind: ConfigMap
metadata:
  name: apisix-upstreams
  namespace: apisix
data:
  upstreams.yaml: |
    upstreams:
      # 1. Identity Service
      - id: identity-service
        name: "Identity Service Upstream"
        type: roundrobin
        scheme: grpc

        # 服务发现 - Kubernetes
        discovery_type: kubernetes
        service_name: identity-service
        namespace_selector:
          equal: voiceassistant-prod

        # 连接池 (对应Istio connectionPool)
        keepalive_pool:
          size: 1000
          idle_timeout: 60
          requests: 10

        # 超时配置
        timeout:
          connect: 3
          send: 10
          read: 10

        # 健康检查
        checks:
          active:
            type: http
            http_path: /health
            healthy:
              interval: 10
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 3
          passive:
            type: http
            healthy:
              http_statuses: [200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 300, 301, 302, 303, 304, 305, 306, 307, 308]
              successes: 3
            unhealthy:
              http_statuses: [429, 500, 502, 503, 504]
              http_failures: 3
              tcp_failures: 3
              timeouts: 3

        # 重试策略
        retries: 3
        retry_timeout: 0

        # 负载均衡 - 一致性哈希 (对应Istio consistentHash)
        hash_on: header
        key: x-user-id

        nodes:
          "identity-service.voiceassistant-prod.svc.cluster.local:9000": 1

      # gRPC专用
      - id: identity-service-grpc
        name: "Identity Service gRPC Upstream"
        type: roundrobin
        scheme: grpc
        discovery_type: kubernetes
        service_name: identity-service
        namespace_selector:
          equal: voiceassistant-prod
        keepalive_pool:
          size: 1000
          idle_timeout: 60
          requests: 10
        checks:
          active:
            type: http
            http_path: /health
            healthy:
              interval: 10
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 3
        nodes:
          "identity-service.voiceassistant-prod.svc.cluster.local:9000": 1

      # 2. Conversation Service
      - id: conversation-service
        name: "Conversation Service Upstream"
        type: roundrobin
        scheme: grpc
        discovery_type: kubernetes
        service_name: conversation-service
        namespace_selector:
          equal: voiceassistant-prod

        keepalive_pool:
          size: 2000
          idle_timeout: 60
          requests: 10

        timeout:
          connect: 3
          send: 30
          read: 30

        checks:
          active:
            type: http
            http_path: /health
            healthy:
              interval: 10
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 3
          passive:
            unhealthy:
              http_failures: 3
              tcp_failures: 3

        retries: 2

        # 一致性哈希 - conversation-id
        hash_on: header
        key: x-conversation-id

        nodes:
          "conversation-service.voiceassistant-prod.svc.cluster.local:9000": 1

      # 3. Knowledge Service
      - id: knowledge-service
        name: "Knowledge Service Upstream"
        type: roundrobin
        scheme: grpc
        discovery_type: kubernetes
        service_name: knowledge-service
        namespace_selector:
          equal: voiceassistant-prod

        keepalive_pool:
          size: 500
          idle_timeout: 60
          requests: 10

        timeout:
          connect: 3
          send: 60
          read: 60

        checks:
          active:
            type: http
            http_path: /health
            healthy:
              interval: 15
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 3

        nodes:
          "knowledge-service.voiceassistant-prod.svc.cluster.local:9000": 1

      # gRPC专用
      - id: knowledge-service-grpc
        name: "Knowledge Service gRPC Upstream"
        type: roundrobin
        scheme: grpc
        discovery_type: kubernetes
        service_name: knowledge-service
        namespace_selector:
          equal: voiceassistant-prod
        keepalive_pool:
          size: 500
          idle_timeout: 60
          requests: 10
        nodes:
          "knowledge-service.voiceassistant-prod.svc.cluster.local:9000": 1

      # 4. AI Orchestrator (LEAST_REQUEST 负载均衡)
      - id: ai-orchestrator
        name: "AI Orchestrator Upstream"
        type: least_conn  # 对应Istio LEAST_REQUEST
        scheme: http
        discovery_type: kubernetes
        service_name: ai-orchestrator
        namespace_selector:
          equal: voiceassistant-prod

        keepalive_pool:
          size: 500
          idle_timeout: 60
          requests: 5

        timeout:
          connect: 3
          send: 120
          read: 120

        checks:
          active:
            type: http
            http_path: /health
            healthy:
              interval: 10
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 2
          passive:
            unhealthy:
              http_failures: 2
              tcp_failures: 2
              timeouts: 2

        retries: 2

        nodes:
          "ai-orchestrator.voiceassistant-prod.svc.cluster.local:9003": 1

      # 5. Voice Engine (会话保持)
      - id: voice-engine
        name: "Voice Engine Upstream"
        type: roundrobin
        scheme: http
        discovery_type: kubernetes
        service_name: voice-engine
        namespace_selector:
          equal: voiceassistant-prod

        keepalive_pool:
          size: 1000
          idle_timeout: 3600  # WebSocket长连接
          requests: 1

        timeout:
          connect: 3
          send: 300
          read: 300

        checks:
          active:
            type: http
            http_path: /health
            healthy:
              interval: 10
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 3

        # 会话保持 - session-id
        hash_on: header
        key: x-session-id

        nodes:
          "voice-engine.voiceassistant-prod.svc.cluster.local:8002": 1

      # 6. Model Router
      - id: model-router-grpc
        name: "Model Router gRPC Upstream"
        type: least_conn
        scheme: grpc
        discovery_type: kubernetes
        service_name: model-router
        namespace_selector:
          equal: voiceassistant-prod

        keepalive_pool:
          size: 500
          idle_timeout: 60
          requests: 5

        timeout:
          connect: 3
          send: 180
          read: 180

        checks:
          active:
            type: http
            http_path: /health
            healthy:
              interval: 15
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 5
          passive:
            unhealthy:
              http_failures: 5
              tcp_failures: 5
              timeouts: 5

        retries: 0  # LLM调用不重试，避免重复计费

        nodes:
          "model-router.voiceassistant-prod.svc.cluster.local:9004": 1

      # 7. Agent Engine (内部服务)
      - id: agent-engine
        name: "Agent Engine Upstream"
        type: least_conn
        scheme: http
        discovery_type: kubernetes
        service_name: agent-engine
        namespace_selector:
          equal: voiceassistant-prod

        keepalive_pool:
          size: 300
          idle_timeout: 60
          requests: 3

        timeout:
          connect: 3
          send: 120
          read: 120

        checks:
          active:
            type: http
            http_path: /health
            healthy:
              interval: 10
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 3

        retries: 2

        nodes:
          "agent-engine.voiceassistant-prod.svc.cluster.local:8003": 1

      # 8. RAG Engine (内部服务)
      - id: rag-engine
        name: "RAG Engine Upstream"
        type: roundrobin
        scheme: http
        discovery_type: kubernetes
        service_name: rag-engine
        namespace_selector:
          equal: voiceassistant-prod

        keepalive_pool:
          size: 500
          idle_timeout: 60
          requests: 10

        timeout:
          connect: 3
          send: 60
          read: 60

        checks:
          active:
            type: http
            http_path: /health
            healthy:
              interval: 15
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 3

        nodes:
          "rag-engine.voiceassistant-prod.svc.cluster.local:8006": 1

      # 9. Model Adapter (内部服务)
      - id: model-adapter
        name: "Model Adapter Upstream"
        type: least_conn
        scheme: http
        discovery_type: kubernetes
        service_name: model-adapter
        namespace_selector:
          equal: voiceassistant-prod

        keepalive_pool:
          size: 400
          idle_timeout: 60
          requests: 5

        timeout:
          connect: 3
          send: 180
          read: 180

        checks:
          active:
            type: http
            http_path: /health
            healthy:
              interval: 15
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 5

        retries: 0  # LLM适配器不重试

        nodes:
          "model-adapter.voiceassistant-prod.svc.cluster.local:8005": 1

      # 10. Retrieval Service (内部服务)
      - id: retrieval-service
        name: "Retrieval Service Upstream"
        type: roundrobin
        scheme: http
        discovery_type: kubernetes
        service_name: retrieval-service
        namespace_selector:
          equal: voiceassistant-prod

        keepalive_pool:
          size: 600
          idle_timeout: 60
          requests: 10

        timeout:
          connect: 3
          send: 30
          read: 30

        checks:
          active:
            type: http
            http_path: /health
            healthy:
              interval: 15
              successes: 2
            unhealthy:
              interval: 5
              http_failures: 3

        nodes:
          "retrieval-service.voiceassistant-prod.svc.cluster.local:8000": 1
