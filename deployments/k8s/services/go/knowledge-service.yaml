---
apiVersion: v1
kind: ConfigMap
metadata:
  name: knowledge-service-config
  namespace: voiceassistant-prod
  labels:
    app: knowledge-service
data:
  APP_NAME: "knowledge-service"
  APP_ENV: "production"
  LOG_LEVEL: "info"
  HTTP_PORT: "8080"
  GRPC_PORT: "9000"
  METRICS_PORT: "9090"
  DB_HOST: "postgres.voiceassistant-infra.svc.cluster.local"
  DB_PORT: "5432"
  DB_NAME: "knowledge"
  DB_SSL_MODE: "disable"
  REDIS_ADDR: "redis.voiceassistant-infra.svc.cluster.local:6379"
  NACOS_ADDR: "nacos.voiceassistant-infra.svc.cluster.local:8848"
  # Vector Store
  MILVUS_ADDR: "milvus.voiceassistant-infra.svc.cluster.local:19530"
  # 关联服务
  INDEXING_SERVICE_URL: "indexing-service.voiceassistant-prod.svc.cluster.local:8004"
  RETRIEVAL_SERVICE_URL: "retrieval-service.voiceassistant-prod.svc.cluster.local:8012"

---
apiVersion: v1
kind: Secret
metadata:
  name: knowledge-service-secret
  namespace: voiceassistant-prod
  labels:
    app: knowledge-service
type: Opaque
stringData:
  DB_PASSWORD: "changeme"
  REDIS_PASSWORD: ""
  MILVUS_USER: "root"
  MILVUS_PASSWORD: "Milvus"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: knowledge-service
  namespace: voiceassistant-prod
  labels:
    app: knowledge-service
    version: v1
    component: knowledge
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: knowledge-service
      version: v1
  template:
    metadata:
      labels:
        app: knowledge-service
        version: v1
        component: knowledge
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "9090"
        sidecar.istio.io/inject: "true"
    spec:
      serviceAccountName: knowledge-service-sa
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        fsGroup: 1000
      initContainers:
      - name: wait-for-postgres
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z $DB_HOST $DB_PORT; do echo waiting for postgres; sleep 2; done']
        envFrom:
        - configMapRef:
            name: knowledge-service-config
      - name: wait-for-milvus
        image: busybox:1.35
        command: ['sh', '-c', 'until nc -z milvus.voiceassistant-infra.svc.cluster.local 19530; do echo waiting for milvus; sleep 2; done']
      containers:
      - name: knowledge-service
        image: ghcr.io/voiceassistant/knowledge-service:1.0.0
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 8080
          name: http
        - containerPort: 9000
          name: grpc
        - containerPort: 9090
          name: metrics
        envFrom:
        - configMapRef:
            name: knowledge-service-config
        env:
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: knowledge-service-secret
              key: DB_PASSWORD
        - name: REDIS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: knowledge-service-secret
              key: REDIS_PASSWORD
        - name: MILVUS_USER
          valueFrom:
            secretKeyRef:
              name: knowledge-service-secret
              key: MILVUS_USER
        - name: MILVUS_PASSWORD
          valueFrom:
            secretKeyRef:
              name: knowledge-service-secret
              key: MILVUS_PASSWORD
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        readinessProbe:
          httpGet:
            path: /ready
            port: 8080
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3
        resources:
          requests:
            cpu: 500m
            memory: 1Gi
          limits:
            cpu: 1000m
            memory: 2Gi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop:
            - ALL
      terminationGracePeriodSeconds: 30

---
apiVersion: v1
kind: Service
metadata:
  name: knowledge-service
  namespace: voiceassistant-prod
  labels:
    app: knowledge-service
spec:
  type: ClusterIP
  selector:
    app: knowledge-service
  ports:
  - port: 8080
    targetPort: 8080
    name: http
  - port: 9000
    targetPort: 9000
    name: grpc
  - port: 9090
    targetPort: 9090
    name: metrics

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: knowledge-service-sa
  namespace: voiceassistant-prod

---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: knowledge-service-hpa
  namespace: voiceassistant-prod
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: knowledge-service
  minReplicas: 2
  maxReplicas: 8
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 70

---
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: knowledge-service-pdb
  namespace: voiceassistant-prod
spec:
  minAvailable: 1
  selector:
    matchLabels:
      app: knowledge-service

