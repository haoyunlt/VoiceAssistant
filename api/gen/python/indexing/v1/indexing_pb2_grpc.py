# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from indexing.v1 import indexing_pb2 as indexing_dot_v1_dot_indexing__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in indexing/v1/indexing_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class IndexingServiceStub(object):
    """IndexingService 索引服务
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ProcessDocument = channel.unary_unary(
                '/indexing.v1.IndexingService/ProcessDocument',
                request_serializer=indexing_dot_v1_dot_indexing__pb2.ProcessDocumentRequest.SerializeToString,
                response_deserializer=indexing_dot_v1_dot_indexing__pb2.ProcessDocumentResponse.FromString,
                _registered_method=True)
        self.ProcessDocumentBatch = channel.unary_unary(
                '/indexing.v1.IndexingService/ProcessDocumentBatch',
                request_serializer=indexing_dot_v1_dot_indexing__pb2.ProcessDocumentBatchRequest.SerializeToString,
                response_deserializer=indexing_dot_v1_dot_indexing__pb2.ProcessDocumentBatchResponse.FromString,
                _registered_method=True)
        self.IndexIncremental = channel.unary_unary(
                '/indexing.v1.IndexingService/IndexIncremental',
                request_serializer=indexing_dot_v1_dot_indexing__pb2.IndexIncrementalRequest.SerializeToString,
                response_deserializer=indexing_dot_v1_dot_indexing__pb2.IndexIncrementalResponse.FromString,
                _registered_method=True)
        self.RebuildIndex = channel.unary_unary(
                '/indexing.v1.IndexingService/RebuildIndex',
                request_serializer=indexing_dot_v1_dot_indexing__pb2.RebuildIndexRequest.SerializeToString,
                response_deserializer=indexing_dot_v1_dot_indexing__pb2.RebuildIndexResponse.FromString,
                _registered_method=True)
        self.GetProcessingStatus = channel.unary_unary(
                '/indexing.v1.IndexingService/GetProcessingStatus',
                request_serializer=indexing_dot_v1_dot_indexing__pb2.GetProcessingStatusRequest.SerializeToString,
                response_deserializer=indexing_dot_v1_dot_indexing__pb2.ProcessingStatus.FromString,
                _registered_method=True)
        self.GetDocumentChunks = channel.unary_unary(
                '/indexing.v1.IndexingService/GetDocumentChunks',
                request_serializer=indexing_dot_v1_dot_indexing__pb2.GetDocumentChunksRequest.SerializeToString,
                response_deserializer=indexing_dot_v1_dot_indexing__pb2.GetDocumentChunksResponse.FromString,
                _registered_method=True)
        self.DeleteDocumentIndex = channel.unary_unary(
                '/indexing.v1.IndexingService/DeleteDocumentIndex',
                request_serializer=indexing_dot_v1_dot_indexing__pb2.DeleteDocumentIndexRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetStats = channel.unary_unary(
                '/indexing.v1.IndexingService/GetStats',
                request_serializer=indexing_dot_v1_dot_indexing__pb2.GetStatsRequest.SerializeToString,
                response_deserializer=indexing_dot_v1_dot_indexing__pb2.StatsResponse.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/indexing.v1.IndexingService/HealthCheck',
                request_serializer=indexing_dot_v1_dot_indexing__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=indexing_dot_v1_dot_indexing__pb2.HealthCheckResponse.FromString,
                _registered_method=True)
        self.ReadinessCheck = channel.unary_unary(
                '/indexing.v1.IndexingService/ReadinessCheck',
                request_serializer=indexing_dot_v1_dot_indexing__pb2.ReadinessCheckRequest.SerializeToString,
                response_deserializer=indexing_dot_v1_dot_indexing__pb2.ReadinessCheckResponse.FromString,
                _registered_method=True)


class IndexingServiceServicer(object):
    """IndexingService 索引服务
    """

    def ProcessDocument(self, request, context):
        """文档处理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcessDocumentBatch(self, request, context):
        """批量处理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def IndexIncremental(self, request, context):
        """增量索引
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RebuildIndex(self, request, context):
        """重建索引
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetProcessingStatus(self, request, context):
        """获取处理状态
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDocumentChunks(self, request, context):
        """获取文档chunks
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDocumentIndex(self, request, context):
        """删除文档索引
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetStats(self, request, context):
        """获取统计信息
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """健康检查
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReadinessCheck(self, request, context):
        """就绪检查
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_IndexingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ProcessDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessDocument,
                    request_deserializer=indexing_dot_v1_dot_indexing__pb2.ProcessDocumentRequest.FromString,
                    response_serializer=indexing_dot_v1_dot_indexing__pb2.ProcessDocumentResponse.SerializeToString,
            ),
            'ProcessDocumentBatch': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcessDocumentBatch,
                    request_deserializer=indexing_dot_v1_dot_indexing__pb2.ProcessDocumentBatchRequest.FromString,
                    response_serializer=indexing_dot_v1_dot_indexing__pb2.ProcessDocumentBatchResponse.SerializeToString,
            ),
            'IndexIncremental': grpc.unary_unary_rpc_method_handler(
                    servicer.IndexIncremental,
                    request_deserializer=indexing_dot_v1_dot_indexing__pb2.IndexIncrementalRequest.FromString,
                    response_serializer=indexing_dot_v1_dot_indexing__pb2.IndexIncrementalResponse.SerializeToString,
            ),
            'RebuildIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.RebuildIndex,
                    request_deserializer=indexing_dot_v1_dot_indexing__pb2.RebuildIndexRequest.FromString,
                    response_serializer=indexing_dot_v1_dot_indexing__pb2.RebuildIndexResponse.SerializeToString,
            ),
            'GetProcessingStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetProcessingStatus,
                    request_deserializer=indexing_dot_v1_dot_indexing__pb2.GetProcessingStatusRequest.FromString,
                    response_serializer=indexing_dot_v1_dot_indexing__pb2.ProcessingStatus.SerializeToString,
            ),
            'GetDocumentChunks': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDocumentChunks,
                    request_deserializer=indexing_dot_v1_dot_indexing__pb2.GetDocumentChunksRequest.FromString,
                    response_serializer=indexing_dot_v1_dot_indexing__pb2.GetDocumentChunksResponse.SerializeToString,
            ),
            'DeleteDocumentIndex': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDocumentIndex,
                    request_deserializer=indexing_dot_v1_dot_indexing__pb2.DeleteDocumentIndexRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetStats': grpc.unary_unary_rpc_method_handler(
                    servicer.GetStats,
                    request_deserializer=indexing_dot_v1_dot_indexing__pb2.GetStatsRequest.FromString,
                    response_serializer=indexing_dot_v1_dot_indexing__pb2.StatsResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=indexing_dot_v1_dot_indexing__pb2.HealthCheckRequest.FromString,
                    response_serializer=indexing_dot_v1_dot_indexing__pb2.HealthCheckResponse.SerializeToString,
            ),
            'ReadinessCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.ReadinessCheck,
                    request_deserializer=indexing_dot_v1_dot_indexing__pb2.ReadinessCheckRequest.FromString,
                    response_serializer=indexing_dot_v1_dot_indexing__pb2.ReadinessCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'indexing.v1.IndexingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('indexing.v1.IndexingService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class IndexingService(object):
    """IndexingService 索引服务
    """

    @staticmethod
    def ProcessDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/indexing.v1.IndexingService/ProcessDocument',
            indexing_dot_v1_dot_indexing__pb2.ProcessDocumentRequest.SerializeToString,
            indexing_dot_v1_dot_indexing__pb2.ProcessDocumentResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ProcessDocumentBatch(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/indexing.v1.IndexingService/ProcessDocumentBatch',
            indexing_dot_v1_dot_indexing__pb2.ProcessDocumentBatchRequest.SerializeToString,
            indexing_dot_v1_dot_indexing__pb2.ProcessDocumentBatchResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def IndexIncremental(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/indexing.v1.IndexingService/IndexIncremental',
            indexing_dot_v1_dot_indexing__pb2.IndexIncrementalRequest.SerializeToString,
            indexing_dot_v1_dot_indexing__pb2.IndexIncrementalResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RebuildIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/indexing.v1.IndexingService/RebuildIndex',
            indexing_dot_v1_dot_indexing__pb2.RebuildIndexRequest.SerializeToString,
            indexing_dot_v1_dot_indexing__pb2.RebuildIndexResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetProcessingStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/indexing.v1.IndexingService/GetProcessingStatus',
            indexing_dot_v1_dot_indexing__pb2.GetProcessingStatusRequest.SerializeToString,
            indexing_dot_v1_dot_indexing__pb2.ProcessingStatus.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDocumentChunks(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/indexing.v1.IndexingService/GetDocumentChunks',
            indexing_dot_v1_dot_indexing__pb2.GetDocumentChunksRequest.SerializeToString,
            indexing_dot_v1_dot_indexing__pb2.GetDocumentChunksResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteDocumentIndex(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/indexing.v1.IndexingService/DeleteDocumentIndex',
            indexing_dot_v1_dot_indexing__pb2.DeleteDocumentIndexRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetStats(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/indexing.v1.IndexingService/GetStats',
            indexing_dot_v1_dot_indexing__pb2.GetStatsRequest.SerializeToString,
            indexing_dot_v1_dot_indexing__pb2.StatsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/indexing.v1.IndexingService/HealthCheck',
            indexing_dot_v1_dot_indexing__pb2.HealthCheckRequest.SerializeToString,
            indexing_dot_v1_dot_indexing__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ReadinessCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/indexing.v1.IndexingService/ReadinessCheck',
            indexing_dot_v1_dot_indexing__pb2.ReadinessCheckRequest.SerializeToString,
            indexing_dot_v1_dot_indexing__pb2.ReadinessCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
