# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from multimodal.v1 import multimodal_pb2 as multimodal_dot_v1_dot_multimodal__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in multimodal/v1/multimodal_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class MultimodalServiceStub(object):
    """MultimodalService 多模态服务
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AnalyzeImage = channel.unary_unary(
                '/multimodal.v1.MultimodalService/AnalyzeImage',
                request_serializer=multimodal_dot_v1_dot_multimodal__pb2.AnalyzeImageRequest.SerializeToString,
                response_deserializer=multimodal_dot_v1_dot_multimodal__pb2.AnalyzeImageResponse.FromString,
                _registered_method=True)
        self.ExtractText = channel.unary_unary(
                '/multimodal.v1.MultimodalService/ExtractText',
                request_serializer=multimodal_dot_v1_dot_multimodal__pb2.ExtractTextRequest.SerializeToString,
                response_deserializer=multimodal_dot_v1_dot_multimodal__pb2.ExtractTextResponse.FromString,
                _registered_method=True)
        self.DetectObjects = channel.unary_unary(
                '/multimodal.v1.MultimodalService/DetectObjects',
                request_serializer=multimodal_dot_v1_dot_multimodal__pb2.DetectObjectsRequest.SerializeToString,
                response_deserializer=multimodal_dot_v1_dot_multimodal__pb2.DetectObjectsResponse.FromString,
                _registered_method=True)
        self.RecognizeScene = channel.unary_unary(
                '/multimodal.v1.MultimodalService/RecognizeScene',
                request_serializer=multimodal_dot_v1_dot_multimodal__pb2.RecognizeSceneRequest.SerializeToString,
                response_deserializer=multimodal_dot_v1_dot_multimodal__pb2.RecognizeSceneResponse.FromString,
                _registered_method=True)
        self.DescribeImage = channel.unary_unary(
                '/multimodal.v1.MultimodalService/DescribeImage',
                request_serializer=multimodal_dot_v1_dot_multimodal__pb2.DescribeImageRequest.SerializeToString,
                response_deserializer=multimodal_dot_v1_dot_multimodal__pb2.DescribeImageResponse.FromString,
                _registered_method=True)
        self.AnalyzeColors = channel.unary_unary(
                '/multimodal.v1.MultimodalService/AnalyzeColors',
                request_serializer=multimodal_dot_v1_dot_multimodal__pb2.AnalyzeColorsRequest.SerializeToString,
                response_deserializer=multimodal_dot_v1_dot_multimodal__pb2.AnalyzeColorsResponse.FromString,
                _registered_method=True)
        self.ComputeSimilarity = channel.unary_unary(
                '/multimodal.v1.MultimodalService/ComputeSimilarity',
                request_serializer=multimodal_dot_v1_dot_multimodal__pb2.ComputeSimilarityRequest.SerializeToString,
                response_deserializer=multimodal_dot_v1_dot_multimodal__pb2.ComputeSimilarityResponse.FromString,
                _registered_method=True)
        self.AnalyzeVideo = channel.unary_unary(
                '/multimodal.v1.MultimodalService/AnalyzeVideo',
                request_serializer=multimodal_dot_v1_dot_multimodal__pb2.AnalyzeVideoRequest.SerializeToString,
                response_deserializer=multimodal_dot_v1_dot_multimodal__pb2.AnalyzeVideoResponse.FromString,
                _registered_method=True)
        self.HealthCheck = channel.unary_unary(
                '/multimodal.v1.MultimodalService/HealthCheck',
                request_serializer=multimodal_dot_v1_dot_multimodal__pb2.HealthCheckRequest.SerializeToString,
                response_deserializer=multimodal_dot_v1_dot_multimodal__pb2.HealthCheckResponse.FromString,
                _registered_method=True)


class MultimodalServiceServicer(object):
    """MultimodalService 多模态服务
    """

    def AnalyzeImage(self, request, context):
        """图像分析
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ExtractText(self, request, context):
        """OCR文字识别
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DetectObjects(self, request, context):
        """目标检测
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def RecognizeScene(self, request, context):
        """场景识别
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DescribeImage(self, request, context):
        """图像描述
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnalyzeColors(self, request, context):
        """颜色分析
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ComputeSimilarity(self, request, context):
        """图像相似度
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AnalyzeVideo(self, request, context):
        """视频分析
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def HealthCheck(self, request, context):
        """健康检查
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_MultimodalServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AnalyzeImage': grpc.unary_unary_rpc_method_handler(
                    servicer.AnalyzeImage,
                    request_deserializer=multimodal_dot_v1_dot_multimodal__pb2.AnalyzeImageRequest.FromString,
                    response_serializer=multimodal_dot_v1_dot_multimodal__pb2.AnalyzeImageResponse.SerializeToString,
            ),
            'ExtractText': grpc.unary_unary_rpc_method_handler(
                    servicer.ExtractText,
                    request_deserializer=multimodal_dot_v1_dot_multimodal__pb2.ExtractTextRequest.FromString,
                    response_serializer=multimodal_dot_v1_dot_multimodal__pb2.ExtractTextResponse.SerializeToString,
            ),
            'DetectObjects': grpc.unary_unary_rpc_method_handler(
                    servicer.DetectObjects,
                    request_deserializer=multimodal_dot_v1_dot_multimodal__pb2.DetectObjectsRequest.FromString,
                    response_serializer=multimodal_dot_v1_dot_multimodal__pb2.DetectObjectsResponse.SerializeToString,
            ),
            'RecognizeScene': grpc.unary_unary_rpc_method_handler(
                    servicer.RecognizeScene,
                    request_deserializer=multimodal_dot_v1_dot_multimodal__pb2.RecognizeSceneRequest.FromString,
                    response_serializer=multimodal_dot_v1_dot_multimodal__pb2.RecognizeSceneResponse.SerializeToString,
            ),
            'DescribeImage': grpc.unary_unary_rpc_method_handler(
                    servicer.DescribeImage,
                    request_deserializer=multimodal_dot_v1_dot_multimodal__pb2.DescribeImageRequest.FromString,
                    response_serializer=multimodal_dot_v1_dot_multimodal__pb2.DescribeImageResponse.SerializeToString,
            ),
            'AnalyzeColors': grpc.unary_unary_rpc_method_handler(
                    servicer.AnalyzeColors,
                    request_deserializer=multimodal_dot_v1_dot_multimodal__pb2.AnalyzeColorsRequest.FromString,
                    response_serializer=multimodal_dot_v1_dot_multimodal__pb2.AnalyzeColorsResponse.SerializeToString,
            ),
            'ComputeSimilarity': grpc.unary_unary_rpc_method_handler(
                    servicer.ComputeSimilarity,
                    request_deserializer=multimodal_dot_v1_dot_multimodal__pb2.ComputeSimilarityRequest.FromString,
                    response_serializer=multimodal_dot_v1_dot_multimodal__pb2.ComputeSimilarityResponse.SerializeToString,
            ),
            'AnalyzeVideo': grpc.unary_unary_rpc_method_handler(
                    servicer.AnalyzeVideo,
                    request_deserializer=multimodal_dot_v1_dot_multimodal__pb2.AnalyzeVideoRequest.FromString,
                    response_serializer=multimodal_dot_v1_dot_multimodal__pb2.AnalyzeVideoResponse.SerializeToString,
            ),
            'HealthCheck': grpc.unary_unary_rpc_method_handler(
                    servicer.HealthCheck,
                    request_deserializer=multimodal_dot_v1_dot_multimodal__pb2.HealthCheckRequest.FromString,
                    response_serializer=multimodal_dot_v1_dot_multimodal__pb2.HealthCheckResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'multimodal.v1.MultimodalService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('multimodal.v1.MultimodalService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class MultimodalService(object):
    """MultimodalService 多模态服务
    """

    @staticmethod
    def AnalyzeImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/multimodal.v1.MultimodalService/AnalyzeImage',
            multimodal_dot_v1_dot_multimodal__pb2.AnalyzeImageRequest.SerializeToString,
            multimodal_dot_v1_dot_multimodal__pb2.AnalyzeImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ExtractText(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/multimodal.v1.MultimodalService/ExtractText',
            multimodal_dot_v1_dot_multimodal__pb2.ExtractTextRequest.SerializeToString,
            multimodal_dot_v1_dot_multimodal__pb2.ExtractTextResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DetectObjects(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/multimodal.v1.MultimodalService/DetectObjects',
            multimodal_dot_v1_dot_multimodal__pb2.DetectObjectsRequest.SerializeToString,
            multimodal_dot_v1_dot_multimodal__pb2.DetectObjectsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def RecognizeScene(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/multimodal.v1.MultimodalService/RecognizeScene',
            multimodal_dot_v1_dot_multimodal__pb2.RecognizeSceneRequest.SerializeToString,
            multimodal_dot_v1_dot_multimodal__pb2.RecognizeSceneResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DescribeImage(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/multimodal.v1.MultimodalService/DescribeImage',
            multimodal_dot_v1_dot_multimodal__pb2.DescribeImageRequest.SerializeToString,
            multimodal_dot_v1_dot_multimodal__pb2.DescribeImageResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AnalyzeColors(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/multimodal.v1.MultimodalService/AnalyzeColors',
            multimodal_dot_v1_dot_multimodal__pb2.AnalyzeColorsRequest.SerializeToString,
            multimodal_dot_v1_dot_multimodal__pb2.AnalyzeColorsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ComputeSimilarity(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/multimodal.v1.MultimodalService/ComputeSimilarity',
            multimodal_dot_v1_dot_multimodal__pb2.ComputeSimilarityRequest.SerializeToString,
            multimodal_dot_v1_dot_multimodal__pb2.ComputeSimilarityResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AnalyzeVideo(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/multimodal.v1.MultimodalService/AnalyzeVideo',
            multimodal_dot_v1_dot_multimodal__pb2.AnalyzeVideoRequest.SerializeToString,
            multimodal_dot_v1_dot_multimodal__pb2.AnalyzeVideoResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def HealthCheck(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/multimodal.v1.MultimodalService/HealthCheck',
            multimodal_dot_v1_dot_multimodal__pb2.HealthCheckRequest.SerializeToString,
            multimodal_dot_v1_dot_multimodal__pb2.HealthCheckResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
