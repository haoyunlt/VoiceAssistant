# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from knowledge.v1 import knowledge_pb2 as knowledge_dot_v1_dot_knowledge__pb2

GRPC_GENERATED_VERSION = '1.76.0'
GRPC_VERSION = grpc.__version__
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    raise RuntimeError(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + ' but the generated code in knowledge/v1/knowledge_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
    )


class KnowledgeServiceStub(object):
    """KnowledgeService 知识管理服务
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.CreateKnowledgeBase = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/CreateKnowledgeBase',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.CreateKnowledgeBaseRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.KnowledgeBase.FromString,
                _registered_method=True)
        self.GetKnowledgeBase = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/GetKnowledgeBase',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.GetKnowledgeBaseRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.KnowledgeBase.FromString,
                _registered_method=True)
        self.ListKnowledgeBases = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/ListKnowledgeBases',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.ListKnowledgeBasesRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.ListKnowledgeBasesResponse.FromString,
                _registered_method=True)
        self.UpdateKnowledgeBase = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/UpdateKnowledgeBase',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.UpdateKnowledgeBaseRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.KnowledgeBase.FromString,
                _registered_method=True)
        self.DeleteKnowledgeBase = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/DeleteKnowledgeBase',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.DeleteKnowledgeBaseRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.UploadDocument = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/UploadDocument',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.UploadDocumentRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.Document.FromString,
                _registered_method=True)
        self.GetDocument = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/GetDocument',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.GetDocumentRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.Document.FromString,
                _registered_method=True)
        self.ListDocuments = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/ListDocuments',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.ListDocumentsRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.ListDocumentsResponse.FromString,
                _registered_method=True)
        self.UpdateDocument = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/UpdateDocument',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.UpdateDocumentRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.Document.FromString,
                _registered_method=True)
        self.DeleteDocument = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/DeleteDocument',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.DeleteDocumentRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.DownloadDocument = channel.unary_stream(
                '/knowledge.v1.KnowledgeService/DownloadDocument',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.DownloadDocumentRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.DocumentChunk.FromString,
                _registered_method=True)
        self.CreateCollection = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/CreateCollection',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.CreateCollectionRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.Collection.FromString,
                _registered_method=True)
        self.GetCollection = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/GetCollection',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.GetCollectionRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.Collection.FromString,
                _registered_method=True)
        self.ListCollections = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/ListCollections',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.ListCollectionsRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.ListCollectionsResponse.FromString,
                _registered_method=True)
        self.UpdateCollection = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/UpdateCollection',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.UpdateCollectionRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.Collection.FromString,
                _registered_method=True)
        self.DeleteCollection = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/DeleteCollection',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.DeleteCollectionRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.GetDocumentVersion = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/GetDocumentVersion',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.GetDocumentVersionRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.DocumentVersion.FromString,
                _registered_method=True)
        self.ListDocumentVersions = channel.unary_unary(
                '/knowledge.v1.KnowledgeService/ListDocumentVersions',
                request_serializer=knowledge_dot_v1_dot_knowledge__pb2.ListDocumentVersionsRequest.SerializeToString,
                response_deserializer=knowledge_dot_v1_dot_knowledge__pb2.ListDocumentVersionsResponse.FromString,
                _registered_method=True)


class KnowledgeServiceServicer(object):
    """KnowledgeService 知识管理服务
    """

    def CreateKnowledgeBase(self, request, context):
        """知识库管理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListKnowledgeBases(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteKnowledgeBase(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UploadDocument(self, request, context):
        """文档管理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDocuments(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DownloadDocument(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def CreateCollection(self, request, context):
        """集合管理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListCollections(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DeleteCollection(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDocumentVersion(self, request, context):
        """版本管理
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDocumentVersions(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_KnowledgeServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'CreateKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateKnowledgeBase,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.CreateKnowledgeBaseRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.KnowledgeBase.SerializeToString,
            ),
            'GetKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.GetKnowledgeBase,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.GetKnowledgeBaseRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.KnowledgeBase.SerializeToString,
            ),
            'ListKnowledgeBases': grpc.unary_unary_rpc_method_handler(
                    servicer.ListKnowledgeBases,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.ListKnowledgeBasesRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.ListKnowledgeBasesResponse.SerializeToString,
            ),
            'UpdateKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateKnowledgeBase,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.UpdateKnowledgeBaseRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.KnowledgeBase.SerializeToString,
            ),
            'DeleteKnowledgeBase': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteKnowledgeBase,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.DeleteKnowledgeBaseRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'UploadDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.UploadDocument,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.UploadDocumentRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.Document.SerializeToString,
            ),
            'GetDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDocument,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.GetDocumentRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.Document.SerializeToString,
            ),
            'ListDocuments': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDocuments,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.ListDocumentsRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.ListDocumentsResponse.SerializeToString,
            ),
            'UpdateDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateDocument,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.UpdateDocumentRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.Document.SerializeToString,
            ),
            'DeleteDocument': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteDocument,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.DeleteDocumentRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'DownloadDocument': grpc.unary_stream_rpc_method_handler(
                    servicer.DownloadDocument,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.DownloadDocumentRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.DocumentChunk.SerializeToString,
            ),
            'CreateCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.CreateCollection,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.CreateCollectionRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.Collection.SerializeToString,
            ),
            'GetCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCollection,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.GetCollectionRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.Collection.SerializeToString,
            ),
            'ListCollections': grpc.unary_unary_rpc_method_handler(
                    servicer.ListCollections,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.ListCollectionsRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.ListCollectionsResponse.SerializeToString,
            ),
            'UpdateCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCollection,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.UpdateCollectionRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.Collection.SerializeToString,
            ),
            'DeleteCollection': grpc.unary_unary_rpc_method_handler(
                    servicer.DeleteCollection,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.DeleteCollectionRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'GetDocumentVersion': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDocumentVersion,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.GetDocumentVersionRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.DocumentVersion.SerializeToString,
            ),
            'ListDocumentVersions': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDocumentVersions,
                    request_deserializer=knowledge_dot_v1_dot_knowledge__pb2.ListDocumentVersionsRequest.FromString,
                    response_serializer=knowledge_dot_v1_dot_knowledge__pb2.ListDocumentVersionsResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'knowledge.v1.KnowledgeService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('knowledge.v1.KnowledgeService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class KnowledgeService(object):
    """KnowledgeService 知识管理服务
    """

    @staticmethod
    def CreateKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/CreateKnowledgeBase',
            knowledge_dot_v1_dot_knowledge__pb2.CreateKnowledgeBaseRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.KnowledgeBase.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/GetKnowledgeBase',
            knowledge_dot_v1_dot_knowledge__pb2.GetKnowledgeBaseRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.KnowledgeBase.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListKnowledgeBases(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/ListKnowledgeBases',
            knowledge_dot_v1_dot_knowledge__pb2.ListKnowledgeBasesRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.ListKnowledgeBasesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/UpdateKnowledgeBase',
            knowledge_dot_v1_dot_knowledge__pb2.UpdateKnowledgeBaseRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.KnowledgeBase.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteKnowledgeBase(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/DeleteKnowledgeBase',
            knowledge_dot_v1_dot_knowledge__pb2.DeleteKnowledgeBaseRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UploadDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/UploadDocument',
            knowledge_dot_v1_dot_knowledge__pb2.UploadDocumentRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.Document.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/GetDocument',
            knowledge_dot_v1_dot_knowledge__pb2.GetDocumentRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.Document.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDocuments(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/ListDocuments',
            knowledge_dot_v1_dot_knowledge__pb2.ListDocumentsRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.ListDocumentsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/UpdateDocument',
            knowledge_dot_v1_dot_knowledge__pb2.UpdateDocumentRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.Document.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/DeleteDocument',
            knowledge_dot_v1_dot_knowledge__pb2.DeleteDocumentRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DownloadDocument(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_stream(
            request,
            target,
            '/knowledge.v1.KnowledgeService/DownloadDocument',
            knowledge_dot_v1_dot_knowledge__pb2.DownloadDocumentRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.DocumentChunk.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def CreateCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/CreateCollection',
            knowledge_dot_v1_dot_knowledge__pb2.CreateCollectionRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.Collection.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/GetCollection',
            knowledge_dot_v1_dot_knowledge__pb2.GetCollectionRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.Collection.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListCollections(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/ListCollections',
            knowledge_dot_v1_dot_knowledge__pb2.ListCollectionsRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.ListCollectionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def UpdateCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/UpdateCollection',
            knowledge_dot_v1_dot_knowledge__pb2.UpdateCollectionRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.Collection.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DeleteCollection(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/DeleteCollection',
            knowledge_dot_v1_dot_knowledge__pb2.DeleteCollectionRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDocumentVersion(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/GetDocumentVersion',
            knowledge_dot_v1_dot_knowledge__pb2.GetDocumentVersionRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.DocumentVersion.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDocumentVersions(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/knowledge.v1.KnowledgeService/ListDocumentVersions',
            knowledge_dot_v1_dot_knowledge__pb2.ListDocumentVersionsRequest.SerializeToString,
            knowledge_dot_v1_dot_knowledge__pb2.ListDocumentVersionsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
