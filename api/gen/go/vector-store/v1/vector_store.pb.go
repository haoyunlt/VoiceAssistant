// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: vector-store/v1/vector_store.proto

package vectorstorev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type CreateCollectionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CollectionName string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Dimension      int32                  `protobuf:"varint,2,opt,name=dimension,proto3" json:"dimension,omitempty"`                    // 向量维度
	MetricType     string                 `protobuf:"bytes,3,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"` // L2, IP, COSINE
	Config         *CollectionConfig      `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateCollectionRequest) Reset() {
	*x = CreateCollectionRequest{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionRequest) ProtoMessage() {}

func (x *CreateCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionRequest.ProtoReflect.Descriptor instead.
func (*CreateCollectionRequest) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{0}
}

func (x *CreateCollectionRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *CreateCollectionRequest) GetDimension() int32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *CreateCollectionRequest) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *CreateCollectionRequest) GetConfig() *CollectionConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type CollectionConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IndexType     string                 `protobuf:"bytes,1,opt,name=index_type,json=indexType,proto3" json:"index_type,omitempty"`                                                                                 // FLAT, IVF_FLAT, HNSW
	IndexParams   map[string]string      `protobuf:"bytes,2,rep,name=index_params,json=indexParams,proto3" json:"index_params,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 索引参数
	ShardNum      int32                  `protobuf:"varint,3,opt,name=shard_num,json=shardNum,proto3" json:"shard_num,omitempty"`                                                                                   // 分片数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectionConfig) Reset() {
	*x = CollectionConfig{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionConfig) ProtoMessage() {}

func (x *CollectionConfig) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionConfig.ProtoReflect.Descriptor instead.
func (*CollectionConfig) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{1}
}

func (x *CollectionConfig) GetIndexType() string {
	if x != nil {
		return x.IndexType
	}
	return ""
}

func (x *CollectionConfig) GetIndexParams() map[string]string {
	if x != nil {
		return x.IndexParams
	}
	return nil
}

func (x *CollectionConfig) GetShardNum() int32 {
	if x != nil {
		return x.ShardNum
	}
	return 0
}

type CreateCollectionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CollectionName string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Status         string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // created, exists
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CreateCollectionResponse) Reset() {
	*x = CreateCollectionResponse{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCollectionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCollectionResponse) ProtoMessage() {}

func (x *CreateCollectionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCollectionResponse.ProtoReflect.Descriptor instead.
func (*CreateCollectionResponse) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCollectionResponse) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *CreateCollectionResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DeleteCollectionRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CollectionName string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteCollectionRequest) Reset() {
	*x = DeleteCollectionRequest{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCollectionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCollectionRequest) ProtoMessage() {}

func (x *DeleteCollectionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCollectionRequest.ProtoReflect.Descriptor instead.
func (*DeleteCollectionRequest) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCollectionRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

type ListCollectionsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Prefix        string                 `protobuf:"bytes,1,opt,name=prefix,proto3" json:"prefix,omitempty"` // 集合名前缀过滤
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListCollectionsRequest) Reset() {
	*x = ListCollectionsRequest{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsRequest) ProtoMessage() {}

func (x *ListCollectionsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsRequest.ProtoReflect.Descriptor instead.
func (*ListCollectionsRequest) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{4}
}

func (x *ListCollectionsRequest) GetPrefix() string {
	if x != nil {
		return x.Prefix
	}
	return ""
}

type ListCollectionsResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	CollectionNames []string               `protobuf:"bytes,1,rep,name=collection_names,json=collectionNames,proto3" json:"collection_names,omitempty"`
	Total           int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *ListCollectionsResponse) Reset() {
	*x = ListCollectionsResponse{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListCollectionsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListCollectionsResponse) ProtoMessage() {}

func (x *ListCollectionsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListCollectionsResponse.ProtoReflect.Descriptor instead.
func (*ListCollectionsResponse) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{5}
}

func (x *ListCollectionsResponse) GetCollectionNames() []string {
	if x != nil {
		return x.CollectionNames
	}
	return nil
}

func (x *ListCollectionsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetCollectionInfoRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CollectionName string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *GetCollectionInfoRequest) Reset() {
	*x = GetCollectionInfoRequest{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetCollectionInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetCollectionInfoRequest) ProtoMessage() {}

func (x *GetCollectionInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetCollectionInfoRequest.ProtoReflect.Descriptor instead.
func (*GetCollectionInfoRequest) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{6}
}

func (x *GetCollectionInfoRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

type CollectionInfo struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CollectionName string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Dimension      int32                  `protobuf:"varint,2,opt,name=dimension,proto3" json:"dimension,omitempty"`
	MetricType     string                 `protobuf:"bytes,3,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"`
	TotalVectors   int64                  `protobuf:"varint,4,opt,name=total_vectors,json=totalVectors,proto3" json:"total_vectors,omitempty"`
	IndexType      string                 `protobuf:"bytes,5,opt,name=index_type,json=indexType,proto3" json:"index_type,omitempty"`
	Stats          *CollectionStats       `protobuf:"bytes,6,opt,name=stats,proto3" json:"stats,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *CollectionInfo) Reset() {
	*x = CollectionInfo{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionInfo) ProtoMessage() {}

func (x *CollectionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionInfo.ProtoReflect.Descriptor instead.
func (*CollectionInfo) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{7}
}

func (x *CollectionInfo) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *CollectionInfo) GetDimension() int32 {
	if x != nil {
		return x.Dimension
	}
	return 0
}

func (x *CollectionInfo) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *CollectionInfo) GetTotalVectors() int64 {
	if x != nil {
		return x.TotalVectors
	}
	return 0
}

func (x *CollectionInfo) GetIndexType() string {
	if x != nil {
		return x.IndexType
	}
	return ""
}

func (x *CollectionInfo) GetStats() *CollectionStats {
	if x != nil {
		return x.Stats
	}
	return nil
}

type CollectionStats struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	RowCount      int64                  `protobuf:"varint,1,opt,name=row_count,json=rowCount,proto3" json:"row_count,omitempty"`
	DataSizeBytes int64                  `protobuf:"varint,2,opt,name=data_size_bytes,json=dataSizeBytes,proto3" json:"data_size_bytes,omitempty"`
	SegmentCount  int32                  `protobuf:"varint,3,opt,name=segment_count,json=segmentCount,proto3" json:"segment_count,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CollectionStats) Reset() {
	*x = CollectionStats{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CollectionStats) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CollectionStats) ProtoMessage() {}

func (x *CollectionStats) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CollectionStats.ProtoReflect.Descriptor instead.
func (*CollectionStats) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{8}
}

func (x *CollectionStats) GetRowCount() int64 {
	if x != nil {
		return x.RowCount
	}
	return 0
}

func (x *CollectionStats) GetDataSizeBytes() int64 {
	if x != nil {
		return x.DataSizeBytes
	}
	return 0
}

func (x *CollectionStats) GetSegmentCount() int32 {
	if x != nil {
		return x.SegmentCount
	}
	return 0
}

type InsertVectorsRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CollectionName string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Vectors        []*Vector              `protobuf:"bytes,2,rep,name=vectors,proto3" json:"vectors,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *InsertVectorsRequest) Reset() {
	*x = InsertVectorsRequest{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertVectorsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertVectorsRequest) ProtoMessage() {}

func (x *InsertVectorsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertVectorsRequest.ProtoReflect.Descriptor instead.
func (*InsertVectorsRequest) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{9}
}

func (x *InsertVectorsRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *InsertVectorsRequest) GetVectors() []*Vector {
	if x != nil {
		return x.Vectors
	}
	return nil
}

type Vector struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Embedding     []float32              `protobuf:"fixed32,2,rep,packed,name=embedding,proto3" json:"embedding,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Vector) Reset() {
	*x = Vector{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{10}
}

func (x *Vector) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Vector) GetEmbedding() []float32 {
	if x != nil {
		return x.Embedding
	}
	return nil
}

func (x *Vector) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type InsertVectorsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	InsertedCount int32                  `protobuf:"varint,1,opt,name=inserted_count,json=insertedCount,proto3" json:"inserted_count,omitempty"`
	Ids           []string               `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertVectorsResponse) Reset() {
	*x = InsertVectorsResponse{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertVectorsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertVectorsResponse) ProtoMessage() {}

func (x *InsertVectorsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertVectorsResponse.ProtoReflect.Descriptor instead.
func (*InsertVectorsResponse) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{11}
}

func (x *InsertVectorsResponse) GetInsertedCount() int32 {
	if x != nil {
		return x.InsertedCount
	}
	return 0
}

func (x *InsertVectorsResponse) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

func (x *InsertVectorsResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type InsertVectorsBatchRequest struct {
	state         protoimpl.MessageState  `protogen:"open.v1"`
	Batches       []*InsertVectorsRequest `protobuf:"bytes,1,rep,name=batches,proto3" json:"batches,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertVectorsBatchRequest) Reset() {
	*x = InsertVectorsBatchRequest{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertVectorsBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertVectorsBatchRequest) ProtoMessage() {}

func (x *InsertVectorsBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertVectorsBatchRequest.ProtoReflect.Descriptor instead.
func (*InsertVectorsBatchRequest) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{12}
}

func (x *InsertVectorsBatchRequest) GetBatches() []*InsertVectorsRequest {
	if x != nil {
		return x.Batches
	}
	return nil
}

type InsertVectorsBatchResponse struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	TotalInserted int32                    `protobuf:"varint,1,opt,name=total_inserted,json=totalInserted,proto3" json:"total_inserted,omitempty"`
	Results       []*InsertVectorsResponse `protobuf:"bytes,2,rep,name=results,proto3" json:"results,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *InsertVectorsBatchResponse) Reset() {
	*x = InsertVectorsBatchResponse{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *InsertVectorsBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*InsertVectorsBatchResponse) ProtoMessage() {}

func (x *InsertVectorsBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use InsertVectorsBatchResponse.ProtoReflect.Descriptor instead.
func (*InsertVectorsBatchResponse) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{13}
}

func (x *InsertVectorsBatchResponse) GetTotalInserted() int32 {
	if x != nil {
		return x.TotalInserted
	}
	return 0
}

func (x *InsertVectorsBatchResponse) GetResults() []*InsertVectorsResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

type UpdateVectorRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CollectionName string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Id             string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Embedding      []float32              `protobuf:"fixed32,3,rep,packed,name=embedding,proto3" json:"embedding,omitempty"`
	Metadata       map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *UpdateVectorRequest) Reset() {
	*x = UpdateVectorRequest{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateVectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateVectorRequest) ProtoMessage() {}

func (x *UpdateVectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateVectorRequest.ProtoReflect.Descriptor instead.
func (*UpdateVectorRequest) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{14}
}

func (x *UpdateVectorRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *UpdateVectorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *UpdateVectorRequest) GetEmbedding() []float32 {
	if x != nil {
		return x.Embedding
	}
	return nil
}

func (x *UpdateVectorRequest) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type DeleteVectorRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CollectionName string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Id             string                 `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteVectorRequest) Reset() {
	*x = DeleteVectorRequest{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVectorRequest) ProtoMessage() {}

func (x *DeleteVectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVectorRequest.ProtoReflect.Descriptor instead.
func (*DeleteVectorRequest) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{15}
}

func (x *DeleteVectorRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *DeleteVectorRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteVectorsBatchRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CollectionName string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	Ids            []string               `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *DeleteVectorsBatchRequest) Reset() {
	*x = DeleteVectorsBatchRequest{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteVectorsBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteVectorsBatchRequest) ProtoMessage() {}

func (x *DeleteVectorsBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteVectorsBatchRequest.ProtoReflect.Descriptor instead.
func (*DeleteVectorsBatchRequest) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteVectorsBatchRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *DeleteVectorsBatchRequest) GetIds() []string {
	if x != nil {
		return x.Ids
	}
	return nil
}

type SearchRequest struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	CollectionName string                 `protobuf:"bytes,1,opt,name=collection_name,json=collectionName,proto3" json:"collection_name,omitempty"`
	QueryVector    []float32              `protobuf:"fixed32,2,rep,packed,name=query_vector,json=queryVector,proto3" json:"query_vector,omitempty"`
	TopK           int32                  `protobuf:"varint,3,opt,name=top_k,json=topK,proto3" json:"top_k,omitempty"`
	MetricType     string                 `protobuf:"bytes,4,opt,name=metric_type,json=metricType,proto3" json:"metric_type,omitempty"` // L2, IP, COSINE
	Params         *SearchParams          `protobuf:"bytes,5,opt,name=params,proto3" json:"params,omitempty"`
	Filters        map[string]string      `protobuf:"bytes,6,rep,name=filters,proto3" json:"filters,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 元数据过滤
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *SearchRequest) Reset() {
	*x = SearchRequest{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchRequest) ProtoMessage() {}

func (x *SearchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchRequest.ProtoReflect.Descriptor instead.
func (*SearchRequest) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{17}
}

func (x *SearchRequest) GetCollectionName() string {
	if x != nil {
		return x.CollectionName
	}
	return ""
}

func (x *SearchRequest) GetQueryVector() []float32 {
	if x != nil {
		return x.QueryVector
	}
	return nil
}

func (x *SearchRequest) GetTopK() int32 {
	if x != nil {
		return x.TopK
	}
	return 0
}

func (x *SearchRequest) GetMetricType() string {
	if x != nil {
		return x.MetricType
	}
	return ""
}

func (x *SearchRequest) GetParams() *SearchParams {
	if x != nil {
		return x.Params
	}
	return nil
}

func (x *SearchRequest) GetFilters() map[string]string {
	if x != nil {
		return x.Filters
	}
	return nil
}

type SearchParams struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Nprobe        int32                  `protobuf:"varint,1,opt,name=nprobe,proto3" json:"nprobe,omitempty"`  // IVF参数
	Ef            int32                  `protobuf:"varint,2,opt,name=ef,proto3" json:"ef,omitempty"`          // HNSW参数
	Radius        float32                `protobuf:"fixed32,3,opt,name=radius,proto3" json:"radius,omitempty"` // 范围搜索半径
	Extra         map[string]string      `protobuf:"bytes,4,rep,name=extra,proto3" json:"extra,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchParams) Reset() {
	*x = SearchParams{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchParams) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchParams) ProtoMessage() {}

func (x *SearchParams) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchParams.ProtoReflect.Descriptor instead.
func (*SearchParams) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{18}
}

func (x *SearchParams) GetNprobe() int32 {
	if x != nil {
		return x.Nprobe
	}
	return 0
}

func (x *SearchParams) GetEf() int32 {
	if x != nil {
		return x.Ef
	}
	return 0
}

func (x *SearchParams) GetRadius() float32 {
	if x != nil {
		return x.Radius
	}
	return 0
}

func (x *SearchParams) GetExtra() map[string]string {
	if x != nil {
		return x.Extra
	}
	return nil
}

type SearchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Results       []*SearchResult        `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	LatencyMs     int64                  `protobuf:"varint,2,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResponse) Reset() {
	*x = SearchResponse{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResponse) ProtoMessage() {}

func (x *SearchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResponse.ProtoReflect.Descriptor instead.
func (*SearchResponse) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{19}
}

func (x *SearchResponse) GetResults() []*SearchResult {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *SearchResponse) GetLatencyMs() int64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

type SearchResult struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Score         float32                `protobuf:"fixed32,2,opt,name=score,proto3" json:"score,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,3,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Embedding     []float32              `protobuf:"fixed32,4,rep,packed,name=embedding,proto3" json:"embedding,omitempty"` // 可选返回
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchResult) Reset() {
	*x = SearchResult{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchResult) ProtoMessage() {}

func (x *SearchResult) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchResult.ProtoReflect.Descriptor instead.
func (*SearchResult) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{20}
}

func (x *SearchResult) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *SearchResult) GetScore() float32 {
	if x != nil {
		return x.Score
	}
	return 0
}

func (x *SearchResult) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *SearchResult) GetEmbedding() []float32 {
	if x != nil {
		return x.Embedding
	}
	return nil
}

type SearchBatchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Searches      []*SearchRequest       `protobuf:"bytes,1,rep,name=searches,proto3" json:"searches,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchBatchRequest) Reset() {
	*x = SearchBatchRequest{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBatchRequest) ProtoMessage() {}

func (x *SearchBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBatchRequest.ProtoReflect.Descriptor instead.
func (*SearchBatchRequest) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{21}
}

func (x *SearchBatchRequest) GetSearches() []*SearchRequest {
	if x != nil {
		return x.Searches
	}
	return nil
}

type SearchBatchResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Responses     []*SearchResponse      `protobuf:"bytes,1,rep,name=responses,proto3" json:"responses,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SearchBatchResponse) Reset() {
	*x = SearchBatchResponse{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SearchBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SearchBatchResponse) ProtoMessage() {}

func (x *SearchBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SearchBatchResponse.ProtoReflect.Descriptor instead.
func (*SearchBatchResponse) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{22}
}

func (x *SearchBatchResponse) GetResponses() []*SearchResponse {
	if x != nil {
		return x.Responses
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{23}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Provider      string                 `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"` // milvus, qdrant, weaviate, pinecone
	Connected     bool                   `protobuf:"varint,3,opt,name=connected,proto3" json:"connected,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_vector_store_v1_vector_store_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_vector_store_v1_vector_store_proto_rawDescGZIP(), []int{24}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *HealthCheckResponse) GetConnected() bool {
	if x != nil {
		return x.Connected
	}
	return false
}

var File_vector_store_v1_vector_store_proto protoreflect.FileDescriptor

const file_vector_store_v1_vector_store_proto_rawDesc = "" +
	"\n" +
	"\"vector-store/v1/vector_store.proto\x12\x0fvector_store.v1\x1a\x1bgoogle/protobuf/empty.proto\"\xbc\x01\n" +
	"\x17CreateCollectionRequest\x12'\n" +
	"\x0fcollection_name\x18\x01 \x01(\tR\x0ecollectionName\x12\x1c\n" +
	"\tdimension\x18\x02 \x01(\x05R\tdimension\x12\x1f\n" +
	"\vmetric_type\x18\x03 \x01(\tR\n" +
	"metricType\x129\n" +
	"\x06config\x18\x04 \x01(\v2!.vector_store.v1.CollectionConfigR\x06config\"\xe5\x01\n" +
	"\x10CollectionConfig\x12\x1d\n" +
	"\n" +
	"index_type\x18\x01 \x01(\tR\tindexType\x12U\n" +
	"\findex_params\x18\x02 \x03(\v22.vector_store.v1.CollectionConfig.IndexParamsEntryR\vindexParams\x12\x1b\n" +
	"\tshard_num\x18\x03 \x01(\x05R\bshardNum\x1a>\n" +
	"\x10IndexParamsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"[\n" +
	"\x18CreateCollectionResponse\x12'\n" +
	"\x0fcollection_name\x18\x01 \x01(\tR\x0ecollectionName\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\"B\n" +
	"\x17DeleteCollectionRequest\x12'\n" +
	"\x0fcollection_name\x18\x01 \x01(\tR\x0ecollectionName\"0\n" +
	"\x16ListCollectionsRequest\x12\x16\n" +
	"\x06prefix\x18\x01 \x01(\tR\x06prefix\"Z\n" +
	"\x17ListCollectionsResponse\x12)\n" +
	"\x10collection_names\x18\x01 \x03(\tR\x0fcollectionNames\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"C\n" +
	"\x18GetCollectionInfoRequest\x12'\n" +
	"\x0fcollection_name\x18\x01 \x01(\tR\x0ecollectionName\"\xf4\x01\n" +
	"\x0eCollectionInfo\x12'\n" +
	"\x0fcollection_name\x18\x01 \x01(\tR\x0ecollectionName\x12\x1c\n" +
	"\tdimension\x18\x02 \x01(\x05R\tdimension\x12\x1f\n" +
	"\vmetric_type\x18\x03 \x01(\tR\n" +
	"metricType\x12#\n" +
	"\rtotal_vectors\x18\x04 \x01(\x03R\ftotalVectors\x12\x1d\n" +
	"\n" +
	"index_type\x18\x05 \x01(\tR\tindexType\x126\n" +
	"\x05stats\x18\x06 \x01(\v2 .vector_store.v1.CollectionStatsR\x05stats\"{\n" +
	"\x0fCollectionStats\x12\x1b\n" +
	"\trow_count\x18\x01 \x01(\x03R\browCount\x12&\n" +
	"\x0fdata_size_bytes\x18\x02 \x01(\x03R\rdataSizeBytes\x12#\n" +
	"\rsegment_count\x18\x03 \x01(\x05R\fsegmentCount\"r\n" +
	"\x14InsertVectorsRequest\x12'\n" +
	"\x0fcollection_name\x18\x01 \x01(\tR\x0ecollectionName\x121\n" +
	"\avectors\x18\x02 \x03(\v2\x17.vector_store.v1.VectorR\avectors\"\xb6\x01\n" +
	"\x06Vector\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x1c\n" +
	"\tembedding\x18\x02 \x03(\x02R\tembedding\x12A\n" +
	"\bmetadata\x18\x03 \x03(\v2%.vector_store.v1.Vector.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"h\n" +
	"\x15InsertVectorsResponse\x12%\n" +
	"\x0einserted_count\x18\x01 \x01(\x05R\rinsertedCount\x12\x10\n" +
	"\x03ids\x18\x02 \x03(\tR\x03ids\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"\\\n" +
	"\x19InsertVectorsBatchRequest\x12?\n" +
	"\abatches\x18\x01 \x03(\v2%.vector_store.v1.InsertVectorsRequestR\abatches\"\x85\x01\n" +
	"\x1aInsertVectorsBatchResponse\x12%\n" +
	"\x0etotal_inserted\x18\x01 \x01(\x05R\rtotalInserted\x12@\n" +
	"\aresults\x18\x02 \x03(\v2&.vector_store.v1.InsertVectorsResponseR\aresults\"\xf9\x01\n" +
	"\x13UpdateVectorRequest\x12'\n" +
	"\x0fcollection_name\x18\x01 \x01(\tR\x0ecollectionName\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\x12\x1c\n" +
	"\tembedding\x18\x03 \x03(\x02R\tembedding\x12N\n" +
	"\bmetadata\x18\x04 \x03(\v22.vector_store.v1.UpdateVectorRequest.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"N\n" +
	"\x13DeleteVectorRequest\x12'\n" +
	"\x0fcollection_name\x18\x01 \x01(\tR\x0ecollectionName\x12\x0e\n" +
	"\x02id\x18\x02 \x01(\tR\x02id\"V\n" +
	"\x19DeleteVectorsBatchRequest\x12'\n" +
	"\x0fcollection_name\x18\x01 \x01(\tR\x0ecollectionName\x12\x10\n" +
	"\x03ids\x18\x02 \x03(\tR\x03ids\"\xcb\x02\n" +
	"\rSearchRequest\x12'\n" +
	"\x0fcollection_name\x18\x01 \x01(\tR\x0ecollectionName\x12!\n" +
	"\fquery_vector\x18\x02 \x03(\x02R\vqueryVector\x12\x13\n" +
	"\x05top_k\x18\x03 \x01(\x05R\x04topK\x12\x1f\n" +
	"\vmetric_type\x18\x04 \x01(\tR\n" +
	"metricType\x125\n" +
	"\x06params\x18\x05 \x01(\v2\x1d.vector_store.v1.SearchParamsR\x06params\x12E\n" +
	"\afilters\x18\x06 \x03(\v2+.vector_store.v1.SearchRequest.FiltersEntryR\afilters\x1a:\n" +
	"\fFiltersEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xc8\x01\n" +
	"\fSearchParams\x12\x16\n" +
	"\x06nprobe\x18\x01 \x01(\x05R\x06nprobe\x12\x0e\n" +
	"\x02ef\x18\x02 \x01(\x05R\x02ef\x12\x16\n" +
	"\x06radius\x18\x03 \x01(\x02R\x06radius\x12>\n" +
	"\x05extra\x18\x04 \x03(\v2(.vector_store.v1.SearchParams.ExtraEntryR\x05extra\x1a8\n" +
	"\n" +
	"ExtraEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"h\n" +
	"\x0eSearchResponse\x127\n" +
	"\aresults\x18\x01 \x03(\v2\x1d.vector_store.v1.SearchResultR\aresults\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x02 \x01(\x03R\tlatencyMs\"\xd8\x01\n" +
	"\fSearchResult\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05score\x18\x02 \x01(\x02R\x05score\x12G\n" +
	"\bmetadata\x18\x03 \x03(\v2+.vector_store.v1.SearchResult.MetadataEntryR\bmetadata\x12\x1c\n" +
	"\tembedding\x18\x04 \x03(\x02R\tembedding\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"P\n" +
	"\x12SearchBatchRequest\x12:\n" +
	"\bsearches\x18\x01 \x03(\v2\x1e.vector_store.v1.SearchRequestR\bsearches\"T\n" +
	"\x13SearchBatchResponse\x12=\n" +
	"\tresponses\x18\x01 \x03(\v2\x1f.vector_store.v1.SearchResponseR\tresponses\"\x14\n" +
	"\x12HealthCheckRequest\"g\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12\x1a\n" +
	"\bprovider\x18\x02 \x01(\tR\bprovider\x12\x1c\n" +
	"\tconnected\x18\x03 \x01(\bR\tconnected2\xde\b\n" +
	"\x12VectorStoreService\x12g\n" +
	"\x10CreateCollection\x12(.vector_store.v1.CreateCollectionRequest\x1a).vector_store.v1.CreateCollectionResponse\x12T\n" +
	"\x10DeleteCollection\x12(.vector_store.v1.DeleteCollectionRequest\x1a\x16.google.protobuf.Empty\x12d\n" +
	"\x0fListCollections\x12'.vector_store.v1.ListCollectionsRequest\x1a(.vector_store.v1.ListCollectionsResponse\x12_\n" +
	"\x11GetCollectionInfo\x12).vector_store.v1.GetCollectionInfoRequest\x1a\x1f.vector_store.v1.CollectionInfo\x12^\n" +
	"\rInsertVectors\x12%.vector_store.v1.InsertVectorsRequest\x1a&.vector_store.v1.InsertVectorsResponse\x12m\n" +
	"\x12InsertVectorsBatch\x12*.vector_store.v1.InsertVectorsBatchRequest\x1a+.vector_store.v1.InsertVectorsBatchResponse\x12L\n" +
	"\fUpdateVector\x12$.vector_store.v1.UpdateVectorRequest\x1a\x16.google.protobuf.Empty\x12L\n" +
	"\fDeleteVector\x12$.vector_store.v1.DeleteVectorRequest\x1a\x16.google.protobuf.Empty\x12X\n" +
	"\x12DeleteVectorsBatch\x12*.vector_store.v1.DeleteVectorsBatchRequest\x1a\x16.google.protobuf.Empty\x12I\n" +
	"\x06Search\x12\x1e.vector_store.v1.SearchRequest\x1a\x1f.vector_store.v1.SearchResponse\x12X\n" +
	"\vSearchBatch\x12#.vector_store.v1.SearchBatchRequest\x1a$.vector_store.v1.SearchBatchResponse\x12X\n" +
	"\vHealthCheck\x12#.vector_store.v1.HealthCheckRequest\x1a$.vector_store.v1.HealthCheckResponseB5Z3voicehelper/api/proto/vector-store/v1;vectorstorev1b\x06proto3"

var (
	file_vector_store_v1_vector_store_proto_rawDescOnce sync.Once
	file_vector_store_v1_vector_store_proto_rawDescData []byte
)

func file_vector_store_v1_vector_store_proto_rawDescGZIP() []byte {
	file_vector_store_v1_vector_store_proto_rawDescOnce.Do(func() {
		file_vector_store_v1_vector_store_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_vector_store_v1_vector_store_proto_rawDesc), len(file_vector_store_v1_vector_store_proto_rawDesc)))
	})
	return file_vector_store_v1_vector_store_proto_rawDescData
}

var file_vector_store_v1_vector_store_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_vector_store_v1_vector_store_proto_goTypes = []any{
	(*CreateCollectionRequest)(nil),    // 0: vector_store.v1.CreateCollectionRequest
	(*CollectionConfig)(nil),           // 1: vector_store.v1.CollectionConfig
	(*CreateCollectionResponse)(nil),   // 2: vector_store.v1.CreateCollectionResponse
	(*DeleteCollectionRequest)(nil),    // 3: vector_store.v1.DeleteCollectionRequest
	(*ListCollectionsRequest)(nil),     // 4: vector_store.v1.ListCollectionsRequest
	(*ListCollectionsResponse)(nil),    // 5: vector_store.v1.ListCollectionsResponse
	(*GetCollectionInfoRequest)(nil),   // 6: vector_store.v1.GetCollectionInfoRequest
	(*CollectionInfo)(nil),             // 7: vector_store.v1.CollectionInfo
	(*CollectionStats)(nil),            // 8: vector_store.v1.CollectionStats
	(*InsertVectorsRequest)(nil),       // 9: vector_store.v1.InsertVectorsRequest
	(*Vector)(nil),                     // 10: vector_store.v1.Vector
	(*InsertVectorsResponse)(nil),      // 11: vector_store.v1.InsertVectorsResponse
	(*InsertVectorsBatchRequest)(nil),  // 12: vector_store.v1.InsertVectorsBatchRequest
	(*InsertVectorsBatchResponse)(nil), // 13: vector_store.v1.InsertVectorsBatchResponse
	(*UpdateVectorRequest)(nil),        // 14: vector_store.v1.UpdateVectorRequest
	(*DeleteVectorRequest)(nil),        // 15: vector_store.v1.DeleteVectorRequest
	(*DeleteVectorsBatchRequest)(nil),  // 16: vector_store.v1.DeleteVectorsBatchRequest
	(*SearchRequest)(nil),              // 17: vector_store.v1.SearchRequest
	(*SearchParams)(nil),               // 18: vector_store.v1.SearchParams
	(*SearchResponse)(nil),             // 19: vector_store.v1.SearchResponse
	(*SearchResult)(nil),               // 20: vector_store.v1.SearchResult
	(*SearchBatchRequest)(nil),         // 21: vector_store.v1.SearchBatchRequest
	(*SearchBatchResponse)(nil),        // 22: vector_store.v1.SearchBatchResponse
	(*HealthCheckRequest)(nil),         // 23: vector_store.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),        // 24: vector_store.v1.HealthCheckResponse
	nil,                                // 25: vector_store.v1.CollectionConfig.IndexParamsEntry
	nil,                                // 26: vector_store.v1.Vector.MetadataEntry
	nil,                                // 27: vector_store.v1.UpdateVectorRequest.MetadataEntry
	nil,                                // 28: vector_store.v1.SearchRequest.FiltersEntry
	nil,                                // 29: vector_store.v1.SearchParams.ExtraEntry
	nil,                                // 30: vector_store.v1.SearchResult.MetadataEntry
	(*emptypb.Empty)(nil),              // 31: google.protobuf.Empty
}
var file_vector_store_v1_vector_store_proto_depIdxs = []int32{
	1,  // 0: vector_store.v1.CreateCollectionRequest.config:type_name -> vector_store.v1.CollectionConfig
	25, // 1: vector_store.v1.CollectionConfig.index_params:type_name -> vector_store.v1.CollectionConfig.IndexParamsEntry
	8,  // 2: vector_store.v1.CollectionInfo.stats:type_name -> vector_store.v1.CollectionStats
	10, // 3: vector_store.v1.InsertVectorsRequest.vectors:type_name -> vector_store.v1.Vector
	26, // 4: vector_store.v1.Vector.metadata:type_name -> vector_store.v1.Vector.MetadataEntry
	9,  // 5: vector_store.v1.InsertVectorsBatchRequest.batches:type_name -> vector_store.v1.InsertVectorsRequest
	11, // 6: vector_store.v1.InsertVectorsBatchResponse.results:type_name -> vector_store.v1.InsertVectorsResponse
	27, // 7: vector_store.v1.UpdateVectorRequest.metadata:type_name -> vector_store.v1.UpdateVectorRequest.MetadataEntry
	18, // 8: vector_store.v1.SearchRequest.params:type_name -> vector_store.v1.SearchParams
	28, // 9: vector_store.v1.SearchRequest.filters:type_name -> vector_store.v1.SearchRequest.FiltersEntry
	29, // 10: vector_store.v1.SearchParams.extra:type_name -> vector_store.v1.SearchParams.ExtraEntry
	20, // 11: vector_store.v1.SearchResponse.results:type_name -> vector_store.v1.SearchResult
	30, // 12: vector_store.v1.SearchResult.metadata:type_name -> vector_store.v1.SearchResult.MetadataEntry
	17, // 13: vector_store.v1.SearchBatchRequest.searches:type_name -> vector_store.v1.SearchRequest
	19, // 14: vector_store.v1.SearchBatchResponse.responses:type_name -> vector_store.v1.SearchResponse
	0,  // 15: vector_store.v1.VectorStoreService.CreateCollection:input_type -> vector_store.v1.CreateCollectionRequest
	3,  // 16: vector_store.v1.VectorStoreService.DeleteCollection:input_type -> vector_store.v1.DeleteCollectionRequest
	4,  // 17: vector_store.v1.VectorStoreService.ListCollections:input_type -> vector_store.v1.ListCollectionsRequest
	6,  // 18: vector_store.v1.VectorStoreService.GetCollectionInfo:input_type -> vector_store.v1.GetCollectionInfoRequest
	9,  // 19: vector_store.v1.VectorStoreService.InsertVectors:input_type -> vector_store.v1.InsertVectorsRequest
	12, // 20: vector_store.v1.VectorStoreService.InsertVectorsBatch:input_type -> vector_store.v1.InsertVectorsBatchRequest
	14, // 21: vector_store.v1.VectorStoreService.UpdateVector:input_type -> vector_store.v1.UpdateVectorRequest
	15, // 22: vector_store.v1.VectorStoreService.DeleteVector:input_type -> vector_store.v1.DeleteVectorRequest
	16, // 23: vector_store.v1.VectorStoreService.DeleteVectorsBatch:input_type -> vector_store.v1.DeleteVectorsBatchRequest
	17, // 24: vector_store.v1.VectorStoreService.Search:input_type -> vector_store.v1.SearchRequest
	21, // 25: vector_store.v1.VectorStoreService.SearchBatch:input_type -> vector_store.v1.SearchBatchRequest
	23, // 26: vector_store.v1.VectorStoreService.HealthCheck:input_type -> vector_store.v1.HealthCheckRequest
	2,  // 27: vector_store.v1.VectorStoreService.CreateCollection:output_type -> vector_store.v1.CreateCollectionResponse
	31, // 28: vector_store.v1.VectorStoreService.DeleteCollection:output_type -> google.protobuf.Empty
	5,  // 29: vector_store.v1.VectorStoreService.ListCollections:output_type -> vector_store.v1.ListCollectionsResponse
	7,  // 30: vector_store.v1.VectorStoreService.GetCollectionInfo:output_type -> vector_store.v1.CollectionInfo
	11, // 31: vector_store.v1.VectorStoreService.InsertVectors:output_type -> vector_store.v1.InsertVectorsResponse
	13, // 32: vector_store.v1.VectorStoreService.InsertVectorsBatch:output_type -> vector_store.v1.InsertVectorsBatchResponse
	31, // 33: vector_store.v1.VectorStoreService.UpdateVector:output_type -> google.protobuf.Empty
	31, // 34: vector_store.v1.VectorStoreService.DeleteVector:output_type -> google.protobuf.Empty
	31, // 35: vector_store.v1.VectorStoreService.DeleteVectorsBatch:output_type -> google.protobuf.Empty
	19, // 36: vector_store.v1.VectorStoreService.Search:output_type -> vector_store.v1.SearchResponse
	22, // 37: vector_store.v1.VectorStoreService.SearchBatch:output_type -> vector_store.v1.SearchBatchResponse
	24, // 38: vector_store.v1.VectorStoreService.HealthCheck:output_type -> vector_store.v1.HealthCheckResponse
	27, // [27:39] is the sub-list for method output_type
	15, // [15:27] is the sub-list for method input_type
	15, // [15:15] is the sub-list for extension type_name
	15, // [15:15] is the sub-list for extension extendee
	0,  // [0:15] is the sub-list for field type_name
}

func init() { file_vector_store_v1_vector_store_proto_init() }
func file_vector_store_v1_vector_store_proto_init() {
	if File_vector_store_v1_vector_store_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_vector_store_v1_vector_store_proto_rawDesc), len(file_vector_store_v1_vector_store_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_vector_store_v1_vector_store_proto_goTypes,
		DependencyIndexes: file_vector_store_v1_vector_store_proto_depIdxs,
		MessageInfos:      file_vector_store_v1_vector_store_proto_msgTypes,
	}.Build()
	File_vector_store_v1_vector_store_proto = out.File
	file_vector_store_v1_vector_store_proto_goTypes = nil
	file_vector_store_v1_vector_store_proto_depIdxs = nil
}
