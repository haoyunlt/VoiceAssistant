// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: voice/v1/voice.proto

package voicev1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type RecognizeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to AudioSource:
	//
	//	*RecognizeRequest_AudioUrl
	//	*RecognizeRequest_AudioData
	//	*RecognizeRequest_AudioBase64
	AudioSource   isRecognizeRequest_AudioSource `protobuf_oneof:"audio_source"`
	Language      string                         `protobuf:"bytes,4,opt,name=language,proto3" json:"language,omitempty"`                     // 语言代码，如 'zh', 'en'
	EnableVad     bool                           `protobuf:"varint,5,opt,name=enable_vad,json=enableVad,proto3" json:"enable_vad,omitempty"` // 是否启用VAD
	Task          string                         `protobuf:"bytes,6,opt,name=task,proto3" json:"task,omitempty"`                             // transcribe（转录）或 translate（翻译）
	Model         string                         `protobuf:"bytes,7,opt,name=model,proto3" json:"model,omitempty"`                           // 模型名称
	Config        *RecognizeConfig               `protobuf:"bytes,8,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecognizeRequest) Reset() {
	*x = RecognizeRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecognizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecognizeRequest) ProtoMessage() {}

func (x *RecognizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecognizeRequest.ProtoReflect.Descriptor instead.
func (*RecognizeRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{0}
}

func (x *RecognizeRequest) GetAudioSource() isRecognizeRequest_AudioSource {
	if x != nil {
		return x.AudioSource
	}
	return nil
}

func (x *RecognizeRequest) GetAudioUrl() string {
	if x != nil {
		if x, ok := x.AudioSource.(*RecognizeRequest_AudioUrl); ok {
			return x.AudioUrl
		}
	}
	return ""
}

func (x *RecognizeRequest) GetAudioData() []byte {
	if x != nil {
		if x, ok := x.AudioSource.(*RecognizeRequest_AudioData); ok {
			return x.AudioData
		}
	}
	return nil
}

func (x *RecognizeRequest) GetAudioBase64() string {
	if x != nil {
		if x, ok := x.AudioSource.(*RecognizeRequest_AudioBase64); ok {
			return x.AudioBase64
		}
	}
	return ""
}

func (x *RecognizeRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *RecognizeRequest) GetEnableVad() bool {
	if x != nil {
		return x.EnableVad
	}
	return false
}

func (x *RecognizeRequest) GetTask() string {
	if x != nil {
		return x.Task
	}
	return ""
}

func (x *RecognizeRequest) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *RecognizeRequest) GetConfig() *RecognizeConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type isRecognizeRequest_AudioSource interface {
	isRecognizeRequest_AudioSource()
}

type RecognizeRequest_AudioUrl struct {
	AudioUrl string `protobuf:"bytes,1,opt,name=audio_url,json=audioUrl,proto3,oneof"` // 音频文件URL
}

type RecognizeRequest_AudioData struct {
	AudioData []byte `protobuf:"bytes,2,opt,name=audio_data,json=audioData,proto3,oneof"` // 音频文件内容
}

type RecognizeRequest_AudioBase64 struct {
	AudioBase64 string `protobuf:"bytes,3,opt,name=audio_base64,json=audioBase64,proto3,oneof"` // Base64编码的音频
}

func (*RecognizeRequest_AudioUrl) isRecognizeRequest_AudioSource() {}

func (*RecognizeRequest_AudioData) isRecognizeRequest_AudioSource() {}

func (*RecognizeRequest_AudioBase64) isRecognizeRequest_AudioSource() {}

type RecognizeConfig struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	EnableWordTimestamps bool                   `protobuf:"varint,1,opt,name=enable_word_timestamps,json=enableWordTimestamps,proto3" json:"enable_word_timestamps,omitempty"` // 启用词级时间戳
	EnablePunctuation    bool                   `protobuf:"varint,2,opt,name=enable_punctuation,json=enablePunctuation,proto3" json:"enable_punctuation,omitempty"`            // 启用标点符号
	Temperature          float32                `protobuf:"fixed32,3,opt,name=temperature,proto3" json:"temperature,omitempty"`                                                // 采样温度
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *RecognizeConfig) Reset() {
	*x = RecognizeConfig{}
	mi := &file_voice_v1_voice_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecognizeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecognizeConfig) ProtoMessage() {}

func (x *RecognizeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecognizeConfig.ProtoReflect.Descriptor instead.
func (*RecognizeConfig) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{1}
}

func (x *RecognizeConfig) GetEnableWordTimestamps() bool {
	if x != nil {
		return x.EnableWordTimestamps
	}
	return false
}

func (x *RecognizeConfig) GetEnablePunctuation() bool {
	if x != nil {
		return x.EnablePunctuation
	}
	return false
}

func (x *RecognizeConfig) GetTemperature() float32 {
	if x != nil {
		return x.Temperature
	}
	return 0
}

type RecognizeResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Text           string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`               // 识别结果
	Language       string                 `protobuf:"bytes,2,opt,name=language,proto3" json:"language,omitempty"`       // 检测到的语言
	Confidence     float32                `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"` // 置信度
	WordTimestamps []*WordTimestamp       `protobuf:"bytes,4,rep,name=word_timestamps,json=wordTimestamps,proto3" json:"word_timestamps,omitempty"`
	DurationMs     int64                  `protobuf:"varint,5,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"` // 音频时长（毫秒）
	Metadata       *RecognizeMetadata     `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RecognizeResponse) Reset() {
	*x = RecognizeResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecognizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecognizeResponse) ProtoMessage() {}

func (x *RecognizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecognizeResponse.ProtoReflect.Descriptor instead.
func (*RecognizeResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{2}
}

func (x *RecognizeResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RecognizeResponse) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *RecognizeResponse) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *RecognizeResponse) GetWordTimestamps() []*WordTimestamp {
	if x != nil {
		return x.WordTimestamps
	}
	return nil
}

func (x *RecognizeResponse) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *RecognizeResponse) GetMetadata() *RecognizeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type WordTimestamp struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Word          string                 `protobuf:"bytes,1,opt,name=word,proto3" json:"word,omitempty"`
	Start         float32                `protobuf:"fixed32,2,opt,name=start,proto3" json:"start,omitempty"` // 开始时间（秒）
	End           float32                `protobuf:"fixed32,3,opt,name=end,proto3" json:"end,omitempty"`     // 结束时间（秒）
	Confidence    float32                `protobuf:"fixed32,4,opt,name=confidence,proto3" json:"confidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *WordTimestamp) Reset() {
	*x = WordTimestamp{}
	mi := &file_voice_v1_voice_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *WordTimestamp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WordTimestamp) ProtoMessage() {}

func (x *WordTimestamp) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WordTimestamp.ProtoReflect.Descriptor instead.
func (*WordTimestamp) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{3}
}

func (x *WordTimestamp) GetWord() string {
	if x != nil {
		return x.Word
	}
	return ""
}

func (x *WordTimestamp) GetStart() float32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *WordTimestamp) GetEnd() float32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *WordTimestamp) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type RecognizeMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Model         string                 `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	TokensUsed    int32                  `protobuf:"varint,2,opt,name=tokens_used,json=tokensUsed,proto3" json:"tokens_used,omitempty"`
	LatencyMs     int64                  `protobuf:"varint,3,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	Provider      string                 `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecognizeMetadata) Reset() {
	*x = RecognizeMetadata{}
	mi := &file_voice_v1_voice_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecognizeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecognizeMetadata) ProtoMessage() {}

func (x *RecognizeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecognizeMetadata.ProtoReflect.Descriptor instead.
func (*RecognizeMetadata) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{4}
}

func (x *RecognizeMetadata) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *RecognizeMetadata) GetTokensUsed() int32 {
	if x != nil {
		return x.TokensUsed
	}
	return 0
}

func (x *RecognizeMetadata) GetLatencyMs() int64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *RecognizeMetadata) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

// 流式识别
type RecognizeStreamRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*RecognizeStreamRequest_Config
	//	*RecognizeStreamRequest_AudioChunk
	Payload       isRecognizeStreamRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RecognizeStreamRequest) Reset() {
	*x = RecognizeStreamRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecognizeStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecognizeStreamRequest) ProtoMessage() {}

func (x *RecognizeStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecognizeStreamRequest.ProtoReflect.Descriptor instead.
func (*RecognizeStreamRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{5}
}

func (x *RecognizeStreamRequest) GetPayload() isRecognizeStreamRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *RecognizeStreamRequest) GetConfig() *RecognizeConfig {
	if x != nil {
		if x, ok := x.Payload.(*RecognizeStreamRequest_Config); ok {
			return x.Config
		}
	}
	return nil
}

func (x *RecognizeStreamRequest) GetAudioChunk() []byte {
	if x != nil {
		if x, ok := x.Payload.(*RecognizeStreamRequest_AudioChunk); ok {
			return x.AudioChunk
		}
	}
	return nil
}

type isRecognizeStreamRequest_Payload interface {
	isRecognizeStreamRequest_Payload()
}

type RecognizeStreamRequest_Config struct {
	Config *RecognizeConfig `protobuf:"bytes,1,opt,name=config,proto3,oneof"` // 第一个消息：配置
}

type RecognizeStreamRequest_AudioChunk struct {
	AudioChunk []byte `protobuf:"bytes,2,opt,name=audio_chunk,json=audioChunk,proto3,oneof"` // 后续消息：音频块
}

func (*RecognizeStreamRequest_Config) isRecognizeStreamRequest_Payload() {}

func (*RecognizeStreamRequest_AudioChunk) isRecognizeStreamRequest_Payload() {}

type RecognizeStreamResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	Text           string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`                       // 识别结果（增量或最终）
	IsFinal        bool                   `protobuf:"varint,2,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"` // 是否最终结果
	Confidence     float32                `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	WordTimestamps []*WordTimestamp       `protobuf:"bytes,4,rep,name=word_timestamps,json=wordTimestamps,proto3" json:"word_timestamps,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *RecognizeStreamResponse) Reset() {
	*x = RecognizeStreamResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RecognizeStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RecognizeStreamResponse) ProtoMessage() {}

func (x *RecognizeStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RecognizeStreamResponse.ProtoReflect.Descriptor instead.
func (*RecognizeStreamResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{6}
}

func (x *RecognizeStreamResponse) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *RecognizeStreamResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

func (x *RecognizeStreamResponse) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *RecognizeStreamResponse) GetWordTimestamps() []*WordTimestamp {
	if x != nil {
		return x.WordTimestamps
	}
	return nil
}

type SynthesizeRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Text          string                 `protobuf:"bytes,1,opt,name=text,proto3" json:"text,omitempty"`         // 待合成文本
	Voice         string                 `protobuf:"bytes,2,opt,name=voice,proto3" json:"voice,omitempty"`       // 音色ID
	Language      string                 `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"` // 语言
	Rate          string                 `protobuf:"bytes,4,opt,name=rate,proto3" json:"rate,omitempty"`         // 语速，如 "+10%"
	Pitch         string                 `protobuf:"bytes,5,opt,name=pitch,proto3" json:"pitch,omitempty"`       // 音调，如 "+5Hz"
	Format        string                 `protobuf:"bytes,6,opt,name=format,proto3" json:"format,omitempty"`     // 音频格式：mp3, wav, opus
	Config        *SynthesizeConfig      `protobuf:"bytes,7,opt,name=config,proto3" json:"config,omitempty"`
	CacheKey      string                 `protobuf:"bytes,8,opt,name=cache_key,json=cacheKey,proto3" json:"cache_key,omitempty"` // 缓存键
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SynthesizeRequest) Reset() {
	*x = SynthesizeRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SynthesizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynthesizeRequest) ProtoMessage() {}

func (x *SynthesizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynthesizeRequest.ProtoReflect.Descriptor instead.
func (*SynthesizeRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{7}
}

func (x *SynthesizeRequest) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *SynthesizeRequest) GetVoice() string {
	if x != nil {
		return x.Voice
	}
	return ""
}

func (x *SynthesizeRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *SynthesizeRequest) GetRate() string {
	if x != nil {
		return x.Rate
	}
	return ""
}

func (x *SynthesizeRequest) GetPitch() string {
	if x != nil {
		return x.Pitch
	}
	return ""
}

func (x *SynthesizeRequest) GetFormat() string {
	if x != nil {
		return x.Format
	}
	return ""
}

func (x *SynthesizeRequest) GetConfig() *SynthesizeConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

func (x *SynthesizeRequest) GetCacheKey() string {
	if x != nil {
		return x.CacheKey
	}
	return ""
}

type SynthesizeConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Volume        float32                `protobuf:"fixed32,1,opt,name=volume,proto3" json:"volume,omitempty"`                          // 音量 0.0-1.0
	Model         string                 `protobuf:"bytes,2,opt,name=model,proto3" json:"model,omitempty"`                              // 模型名称
	EnableSsml    bool                   `protobuf:"varint,3,opt,name=enable_ssml,json=enableSsml,proto3" json:"enable_ssml,omitempty"` // 启用SSML
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SynthesizeConfig) Reset() {
	*x = SynthesizeConfig{}
	mi := &file_voice_v1_voice_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SynthesizeConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynthesizeConfig) ProtoMessage() {}

func (x *SynthesizeConfig) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynthesizeConfig.ProtoReflect.Descriptor instead.
func (*SynthesizeConfig) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{8}
}

func (x *SynthesizeConfig) GetVolume() float32 {
	if x != nil {
		return x.Volume
	}
	return 0
}

func (x *SynthesizeConfig) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *SynthesizeConfig) GetEnableSsml() bool {
	if x != nil {
		return x.EnableSsml
	}
	return false
}

type SynthesizeResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to AudioOutput:
	//
	//	*SynthesizeResponse_AudioData
	//	*SynthesizeResponse_AudioUrl
	//	*SynthesizeResponse_AudioBase64
	AudioOutput   isSynthesizeResponse_AudioOutput `protobuf_oneof:"audio_output"`
	DurationMs    int64                            `protobuf:"varint,4,opt,name=duration_ms,json=durationMs,proto3" json:"duration_ms,omitempty"` // 音频时长
	Cached        bool                             `protobuf:"varint,5,opt,name=cached,proto3" json:"cached,omitempty"`                           // 是否来自缓存
	Metadata      *SynthesizeMetadata              `protobuf:"bytes,6,opt,name=metadata,proto3" json:"metadata,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SynthesizeResponse) Reset() {
	*x = SynthesizeResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SynthesizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynthesizeResponse) ProtoMessage() {}

func (x *SynthesizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynthesizeResponse.ProtoReflect.Descriptor instead.
func (*SynthesizeResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{9}
}

func (x *SynthesizeResponse) GetAudioOutput() isSynthesizeResponse_AudioOutput {
	if x != nil {
		return x.AudioOutput
	}
	return nil
}

func (x *SynthesizeResponse) GetAudioData() []byte {
	if x != nil {
		if x, ok := x.AudioOutput.(*SynthesizeResponse_AudioData); ok {
			return x.AudioData
		}
	}
	return nil
}

func (x *SynthesizeResponse) GetAudioUrl() string {
	if x != nil {
		if x, ok := x.AudioOutput.(*SynthesizeResponse_AudioUrl); ok {
			return x.AudioUrl
		}
	}
	return ""
}

func (x *SynthesizeResponse) GetAudioBase64() string {
	if x != nil {
		if x, ok := x.AudioOutput.(*SynthesizeResponse_AudioBase64); ok {
			return x.AudioBase64
		}
	}
	return ""
}

func (x *SynthesizeResponse) GetDurationMs() int64 {
	if x != nil {
		return x.DurationMs
	}
	return 0
}

func (x *SynthesizeResponse) GetCached() bool {
	if x != nil {
		return x.Cached
	}
	return false
}

func (x *SynthesizeResponse) GetMetadata() *SynthesizeMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type isSynthesizeResponse_AudioOutput interface {
	isSynthesizeResponse_AudioOutput()
}

type SynthesizeResponse_AudioData struct {
	AudioData []byte `protobuf:"bytes,1,opt,name=audio_data,json=audioData,proto3,oneof"` // 音频内容
}

type SynthesizeResponse_AudioUrl struct {
	AudioUrl string `protobuf:"bytes,2,opt,name=audio_url,json=audioUrl,proto3,oneof"` // 音频URL
}

type SynthesizeResponse_AudioBase64 struct {
	AudioBase64 string `protobuf:"bytes,3,opt,name=audio_base64,json=audioBase64,proto3,oneof"` // Base64编码
}

func (*SynthesizeResponse_AudioData) isSynthesizeResponse_AudioOutput() {}

func (*SynthesizeResponse_AudioUrl) isSynthesizeResponse_AudioOutput() {}

func (*SynthesizeResponse_AudioBase64) isSynthesizeResponse_AudioOutput() {}

type SynthesizeMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Model         string                 `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"`
	Characters    int32                  `protobuf:"varint,2,opt,name=characters,proto3" json:"characters,omitempty"`
	LatencyMs     int64                  `protobuf:"varint,3,opt,name=latency_ms,json=latencyMs,proto3" json:"latency_ms,omitempty"`
	Provider      string                 `protobuf:"bytes,4,opt,name=provider,proto3" json:"provider,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SynthesizeMetadata) Reset() {
	*x = SynthesizeMetadata{}
	mi := &file_voice_v1_voice_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SynthesizeMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynthesizeMetadata) ProtoMessage() {}

func (x *SynthesizeMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynthesizeMetadata.ProtoReflect.Descriptor instead.
func (*SynthesizeMetadata) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{10}
}

func (x *SynthesizeMetadata) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *SynthesizeMetadata) GetCharacters() int32 {
	if x != nil {
		return x.Characters
	}
	return 0
}

func (x *SynthesizeMetadata) GetLatencyMs() int64 {
	if x != nil {
		return x.LatencyMs
	}
	return 0
}

func (x *SynthesizeMetadata) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

// 流式合成
type SynthesizeStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AudioChunk    []byte                 `protobuf:"bytes,1,opt,name=audio_chunk,json=audioChunk,proto3" json:"audio_chunk,omitempty"`
	IsFinal       bool                   `protobuf:"varint,2,opt,name=is_final,json=isFinal,proto3" json:"is_final,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SynthesizeStreamResponse) Reset() {
	*x = SynthesizeStreamResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SynthesizeStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SynthesizeStreamResponse) ProtoMessage() {}

func (x *SynthesizeStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SynthesizeStreamResponse.ProtoReflect.Descriptor instead.
func (*SynthesizeStreamResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{11}
}

func (x *SynthesizeStreamResponse) GetAudioChunk() []byte {
	if x != nil {
		return x.AudioChunk
	}
	return nil
}

func (x *SynthesizeStreamResponse) GetIsFinal() bool {
	if x != nil {
		return x.IsFinal
	}
	return false
}

type VADRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to AudioSource:
	//
	//	*VADRequest_AudioUrl
	//	*VADRequest_AudioData
	//	*VADRequest_AudioBase64
	AudioSource   isVADRequest_AudioSource `protobuf_oneof:"audio_source"`
	Config        *VADConfig               `protobuf:"bytes,4,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VADRequest) Reset() {
	*x = VADRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VADRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VADRequest) ProtoMessage() {}

func (x *VADRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VADRequest.ProtoReflect.Descriptor instead.
func (*VADRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{12}
}

func (x *VADRequest) GetAudioSource() isVADRequest_AudioSource {
	if x != nil {
		return x.AudioSource
	}
	return nil
}

func (x *VADRequest) GetAudioUrl() string {
	if x != nil {
		if x, ok := x.AudioSource.(*VADRequest_AudioUrl); ok {
			return x.AudioUrl
		}
	}
	return ""
}

func (x *VADRequest) GetAudioData() []byte {
	if x != nil {
		if x, ok := x.AudioSource.(*VADRequest_AudioData); ok {
			return x.AudioData
		}
	}
	return nil
}

func (x *VADRequest) GetAudioBase64() string {
	if x != nil {
		if x, ok := x.AudioSource.(*VADRequest_AudioBase64); ok {
			return x.AudioBase64
		}
	}
	return ""
}

func (x *VADRequest) GetConfig() *VADConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type isVADRequest_AudioSource interface {
	isVADRequest_AudioSource()
}

type VADRequest_AudioUrl struct {
	AudioUrl string `protobuf:"bytes,1,opt,name=audio_url,json=audioUrl,proto3,oneof"`
}

type VADRequest_AudioData struct {
	AudioData []byte `protobuf:"bytes,2,opt,name=audio_data,json=audioData,proto3,oneof"`
}

type VADRequest_AudioBase64 struct {
	AudioBase64 string `protobuf:"bytes,3,opt,name=audio_base64,json=audioBase64,proto3,oneof"`
}

func (*VADRequest_AudioUrl) isVADRequest_AudioSource() {}

func (*VADRequest_AudioData) isVADRequest_AudioSource() {}

func (*VADRequest_AudioBase64) isVADRequest_AudioSource() {}

type VADConfig struct {
	state                protoimpl.MessageState `protogen:"open.v1"`
	Threshold            float32                `protobuf:"fixed32,1,opt,name=threshold,proto3" json:"threshold,omitempty"`                                                      // 阈值 0.0-1.0
	MinSpeechDurationMs  int32                  `protobuf:"varint,2,opt,name=min_speech_duration_ms,json=minSpeechDurationMs,proto3" json:"min_speech_duration_ms,omitempty"`    // 最小语音片段时长
	MinSilenceDurationMs int32                  `protobuf:"varint,3,opt,name=min_silence_duration_ms,json=minSilenceDurationMs,proto3" json:"min_silence_duration_ms,omitempty"` // 最小静音时长
	unknownFields        protoimpl.UnknownFields
	sizeCache            protoimpl.SizeCache
}

func (x *VADConfig) Reset() {
	*x = VADConfig{}
	mi := &file_voice_v1_voice_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VADConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VADConfig) ProtoMessage() {}

func (x *VADConfig) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VADConfig.ProtoReflect.Descriptor instead.
func (*VADConfig) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{13}
}

func (x *VADConfig) GetThreshold() float32 {
	if x != nil {
		return x.Threshold
	}
	return 0
}

func (x *VADConfig) GetMinSpeechDurationMs() int32 {
	if x != nil {
		return x.MinSpeechDurationMs
	}
	return 0
}

func (x *VADConfig) GetMinSilenceDurationMs() int32 {
	if x != nil {
		return x.MinSilenceDurationMs
	}
	return 0
}

type VADResponse struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Segments        []*VADSegment          `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`                            // 语音片段
	SpeechRatio     float32                `protobuf:"fixed32,2,opt,name=speech_ratio,json=speechRatio,proto3" json:"speech_ratio,omitempty"` // 语音占比
	TotalDurationMs int64                  `protobuf:"varint,3,opt,name=total_duration_ms,json=totalDurationMs,proto3" json:"total_duration_ms,omitempty"`
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *VADResponse) Reset() {
	*x = VADResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VADResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VADResponse) ProtoMessage() {}

func (x *VADResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VADResponse.ProtoReflect.Descriptor instead.
func (*VADResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{14}
}

func (x *VADResponse) GetSegments() []*VADSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *VADResponse) GetSpeechRatio() float32 {
	if x != nil {
		return x.SpeechRatio
	}
	return 0
}

func (x *VADResponse) GetTotalDurationMs() int64 {
	if x != nil {
		return x.TotalDurationMs
	}
	return 0
}

type VADSegment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Start         float32                `protobuf:"fixed32,1,opt,name=start,proto3" json:"start,omitempty"` // 开始时间（秒）
	End           float32                `protobuf:"fixed32,2,opt,name=end,proto3" json:"end,omitempty"`     // 结束时间（秒）
	Confidence    float32                `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VADSegment) Reset() {
	*x = VADSegment{}
	mi := &file_voice_v1_voice_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VADSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VADSegment) ProtoMessage() {}

func (x *VADSegment) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VADSegment.ProtoReflect.Descriptor instead.
func (*VADSegment) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{15}
}

func (x *VADSegment) GetStart() float32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *VADSegment) GetEnd() float32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *VADSegment) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

// 流式VAD
type VADStreamRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*VADStreamRequest_Config
	//	*VADStreamRequest_AudioChunk
	Payload       isVADStreamRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VADStreamRequest) Reset() {
	*x = VADStreamRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VADStreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VADStreamRequest) ProtoMessage() {}

func (x *VADStreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VADStreamRequest.ProtoReflect.Descriptor instead.
func (*VADStreamRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{16}
}

func (x *VADStreamRequest) GetPayload() isVADStreamRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *VADStreamRequest) GetConfig() *VADConfig {
	if x != nil {
		if x, ok := x.Payload.(*VADStreamRequest_Config); ok {
			return x.Config
		}
	}
	return nil
}

func (x *VADStreamRequest) GetAudioChunk() []byte {
	if x != nil {
		if x, ok := x.Payload.(*VADStreamRequest_AudioChunk); ok {
			return x.AudioChunk
		}
	}
	return nil
}

type isVADStreamRequest_Payload interface {
	isVADStreamRequest_Payload()
}

type VADStreamRequest_Config struct {
	Config *VADConfig `protobuf:"bytes,1,opt,name=config,proto3,oneof"`
}

type VADStreamRequest_AudioChunk struct {
	AudioChunk []byte `protobuf:"bytes,2,opt,name=audio_chunk,json=audioChunk,proto3,oneof"`
}

func (*VADStreamRequest_Config) isVADStreamRequest_Payload() {}

func (*VADStreamRequest_AudioChunk) isVADStreamRequest_Payload() {}

type VADStreamResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	IsSpeech      bool                   `protobuf:"varint,1,opt,name=is_speech,json=isSpeech,proto3" json:"is_speech,omitempty"`
	Confidence    float32                `protobuf:"fixed32,2,opt,name=confidence,proto3" json:"confidence,omitempty"`
	Segment       *VADSegment            `protobuf:"bytes,3,opt,name=segment,proto3" json:"segment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *VADStreamResponse) Reset() {
	*x = VADStreamResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *VADStreamResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VADStreamResponse) ProtoMessage() {}

func (x *VADStreamResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VADStreamResponse.ProtoReflect.Descriptor instead.
func (*VADStreamResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{17}
}

func (x *VADStreamResponse) GetIsSpeech() bool {
	if x != nil {
		return x.IsSpeech
	}
	return false
}

func (x *VADStreamResponse) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

func (x *VADStreamResponse) GetSegment() *VADSegment {
	if x != nil {
		return x.Segment
	}
	return nil
}

type FullDuplexRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*FullDuplexRequest_Config
	//	*FullDuplexRequest_AudioChunk
	Payload       isFullDuplexRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FullDuplexRequest) Reset() {
	*x = FullDuplexRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullDuplexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullDuplexRequest) ProtoMessage() {}

func (x *FullDuplexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullDuplexRequest.ProtoReflect.Descriptor instead.
func (*FullDuplexRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{18}
}

func (x *FullDuplexRequest) GetPayload() isFullDuplexRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *FullDuplexRequest) GetConfig() *FullDuplexConfig {
	if x != nil {
		if x, ok := x.Payload.(*FullDuplexRequest_Config); ok {
			return x.Config
		}
	}
	return nil
}

func (x *FullDuplexRequest) GetAudioChunk() []byte {
	if x != nil {
		if x, ok := x.Payload.(*FullDuplexRequest_AudioChunk); ok {
			return x.AudioChunk
		}
	}
	return nil
}

type isFullDuplexRequest_Payload interface {
	isFullDuplexRequest_Payload()
}

type FullDuplexRequest_Config struct {
	Config *FullDuplexConfig `protobuf:"bytes,1,opt,name=config,proto3,oneof"`
}

type FullDuplexRequest_AudioChunk struct {
	AudioChunk []byte `protobuf:"bytes,2,opt,name=audio_chunk,json=audioChunk,proto3,oneof"`
}

func (*FullDuplexRequest_Config) isFullDuplexRequest_Payload() {}

func (*FullDuplexRequest_AudioChunk) isFullDuplexRequest_Payload() {}

type FullDuplexConfig struct {
	state           protoimpl.MessageState `protogen:"open.v1"`
	Language        string                 `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"`
	Voice           string                 `protobuf:"bytes,2,opt,name=voice,proto3" json:"voice,omitempty"`
	EnableVad       bool                   `protobuf:"varint,3,opt,name=enable_vad,json=enableVad,proto3" json:"enable_vad,omitempty"`
	EnableInterrupt bool                   `protobuf:"varint,4,opt,name=enable_interrupt,json=enableInterrupt,proto3" json:"enable_interrupt,omitempty"` // 启用打断
	unknownFields   protoimpl.UnknownFields
	sizeCache       protoimpl.SizeCache
}

func (x *FullDuplexConfig) Reset() {
	*x = FullDuplexConfig{}
	mi := &file_voice_v1_voice_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullDuplexConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullDuplexConfig) ProtoMessage() {}

func (x *FullDuplexConfig) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullDuplexConfig.ProtoReflect.Descriptor instead.
func (*FullDuplexConfig) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{19}
}

func (x *FullDuplexConfig) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *FullDuplexConfig) GetVoice() string {
	if x != nil {
		return x.Voice
	}
	return ""
}

func (x *FullDuplexConfig) GetEnableVad() bool {
	if x != nil {
		return x.EnableVad
	}
	return false
}

func (x *FullDuplexConfig) GetEnableInterrupt() bool {
	if x != nil {
		return x.EnableInterrupt
	}
	return false
}

type FullDuplexResponse struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to Payload:
	//
	//	*FullDuplexResponse_AsrResult
	//	*FullDuplexResponse_TtsResult
	//	*FullDuplexResponse_VadResult
	Payload       isFullDuplexResponse_Payload `protobuf_oneof:"payload"`
	Sequence      int64                        `protobuf:"varint,4,opt,name=sequence,proto3" json:"sequence,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FullDuplexResponse) Reset() {
	*x = FullDuplexResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FullDuplexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FullDuplexResponse) ProtoMessage() {}

func (x *FullDuplexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FullDuplexResponse.ProtoReflect.Descriptor instead.
func (*FullDuplexResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{20}
}

func (x *FullDuplexResponse) GetPayload() isFullDuplexResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *FullDuplexResponse) GetAsrResult() *RecognizeStreamResponse {
	if x != nil {
		if x, ok := x.Payload.(*FullDuplexResponse_AsrResult); ok {
			return x.AsrResult
		}
	}
	return nil
}

func (x *FullDuplexResponse) GetTtsResult() *SynthesizeStreamResponse {
	if x != nil {
		if x, ok := x.Payload.(*FullDuplexResponse_TtsResult); ok {
			return x.TtsResult
		}
	}
	return nil
}

func (x *FullDuplexResponse) GetVadResult() *VADStreamResponse {
	if x != nil {
		if x, ok := x.Payload.(*FullDuplexResponse_VadResult); ok {
			return x.VadResult
		}
	}
	return nil
}

func (x *FullDuplexResponse) GetSequence() int64 {
	if x != nil {
		return x.Sequence
	}
	return 0
}

type isFullDuplexResponse_Payload interface {
	isFullDuplexResponse_Payload()
}

type FullDuplexResponse_AsrResult struct {
	AsrResult *RecognizeStreamResponse `protobuf:"bytes,1,opt,name=asr_result,json=asrResult,proto3,oneof"`
}

type FullDuplexResponse_TtsResult struct {
	TtsResult *SynthesizeStreamResponse `protobuf:"bytes,2,opt,name=tts_result,json=ttsResult,proto3,oneof"`
}

type FullDuplexResponse_VadResult struct {
	VadResult *VADStreamResponse `protobuf:"bytes,3,opt,name=vad_result,json=vadResult,proto3,oneof"`
}

func (*FullDuplexResponse_AsrResult) isFullDuplexResponse_Payload() {}

func (*FullDuplexResponse_TtsResult) isFullDuplexResponse_Payload() {}

func (*FullDuplexResponse_VadResult) isFullDuplexResponse_Payload() {}

type CloneVoiceRequest struct {
	state       protoimpl.MessageState `protogen:"open.v1"`
	Name        string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"` // 音色名称
	Description string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	// Types that are valid to be assigned to AudioSource:
	//
	//	*CloneVoiceRequest_AudioUrl
	//	*CloneVoiceRequest_AudioData
	AudioSource   isCloneVoiceRequest_AudioSource `protobuf_oneof:"audio_source"`
	UserId        string                          `protobuf:"bytes,5,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TenantId      string                          `protobuf:"bytes,6,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloneVoiceRequest) Reset() {
	*x = CloneVoiceRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneVoiceRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneVoiceRequest) ProtoMessage() {}

func (x *CloneVoiceRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneVoiceRequest.ProtoReflect.Descriptor instead.
func (*CloneVoiceRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{21}
}

func (x *CloneVoiceRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloneVoiceRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CloneVoiceRequest) GetAudioSource() isCloneVoiceRequest_AudioSource {
	if x != nil {
		return x.AudioSource
	}
	return nil
}

func (x *CloneVoiceRequest) GetAudioUrl() string {
	if x != nil {
		if x, ok := x.AudioSource.(*CloneVoiceRequest_AudioUrl); ok {
			return x.AudioUrl
		}
	}
	return ""
}

func (x *CloneVoiceRequest) GetAudioData() []byte {
	if x != nil {
		if x, ok := x.AudioSource.(*CloneVoiceRequest_AudioData); ok {
			return x.AudioData
		}
	}
	return nil
}

func (x *CloneVoiceRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CloneVoiceRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type isCloneVoiceRequest_AudioSource interface {
	isCloneVoiceRequest_AudioSource()
}

type CloneVoiceRequest_AudioUrl struct {
	AudioUrl string `protobuf:"bytes,3,opt,name=audio_url,json=audioUrl,proto3,oneof"`
}

type CloneVoiceRequest_AudioData struct {
	AudioData []byte `protobuf:"bytes,4,opt,name=audio_data,json=audioData,proto3,oneof"`
}

func (*CloneVoiceRequest_AudioUrl) isCloneVoiceRequest_AudioSource() {}

func (*CloneVoiceRequest_AudioData) isCloneVoiceRequest_AudioSource() {}

type CloneVoiceResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VoiceId       string                 `protobuf:"bytes,1,opt,name=voice_id,json=voiceId,proto3" json:"voice_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Status        string                 `protobuf:"bytes,3,opt,name=status,proto3" json:"status,omitempty"` // processing, ready, failed
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CloneVoiceResponse) Reset() {
	*x = CloneVoiceResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CloneVoiceResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CloneVoiceResponse) ProtoMessage() {}

func (x *CloneVoiceResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CloneVoiceResponse.ProtoReflect.Descriptor instead.
func (*CloneVoiceResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{22}
}

func (x *CloneVoiceResponse) GetVoiceId() string {
	if x != nil {
		return x.VoiceId
	}
	return ""
}

func (x *CloneVoiceResponse) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CloneVoiceResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type ListClonedVoicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	UserId        string                 `protobuf:"bytes,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClonedVoicesRequest) Reset() {
	*x = ListClonedVoicesRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClonedVoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClonedVoicesRequest) ProtoMessage() {}

func (x *ListClonedVoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClonedVoicesRequest.ProtoReflect.Descriptor instead.
func (*ListClonedVoicesRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{23}
}

func (x *ListClonedVoicesRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *ListClonedVoicesRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type ListClonedVoicesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Voices        []*ClonedVoice         `protobuf:"bytes,1,rep,name=voices,proto3" json:"voices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListClonedVoicesResponse) Reset() {
	*x = ListClonedVoicesResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListClonedVoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListClonedVoicesResponse) ProtoMessage() {}

func (x *ListClonedVoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListClonedVoicesResponse.ProtoReflect.Descriptor instead.
func (*ListClonedVoicesResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{24}
}

func (x *ListClonedVoicesResponse) GetVoices() []*ClonedVoice {
	if x != nil {
		return x.Voices
	}
	return nil
}

type ClonedVoice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VoiceId       string                 `protobuf:"bytes,1,opt,name=voice_id,json=voiceId,proto3" json:"voice_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	Status        string                 `protobuf:"bytes,4,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ClonedVoice) Reset() {
	*x = ClonedVoice{}
	mi := &file_voice_v1_voice_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ClonedVoice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ClonedVoice) ProtoMessage() {}

func (x *ClonedVoice) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ClonedVoice.ProtoReflect.Descriptor instead.
func (*ClonedVoice) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{25}
}

func (x *ClonedVoice) GetVoiceId() string {
	if x != nil {
		return x.VoiceId
	}
	return ""
}

func (x *ClonedVoice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ClonedVoice) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *ClonedVoice) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

type DiarizeRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to AudioSource:
	//
	//	*DiarizeRequest_AudioUrl
	//	*DiarizeRequest_AudioData
	AudioSource   isDiarizeRequest_AudioSource `protobuf_oneof:"audio_source"`
	NumSpeakers   int32                        `protobuf:"varint,3,opt,name=num_speakers,json=numSpeakers,proto3" json:"num_speakers,omitempty"` // 说话人数量（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiarizeRequest) Reset() {
	*x = DiarizeRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiarizeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiarizeRequest) ProtoMessage() {}

func (x *DiarizeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiarizeRequest.ProtoReflect.Descriptor instead.
func (*DiarizeRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{26}
}

func (x *DiarizeRequest) GetAudioSource() isDiarizeRequest_AudioSource {
	if x != nil {
		return x.AudioSource
	}
	return nil
}

func (x *DiarizeRequest) GetAudioUrl() string {
	if x != nil {
		if x, ok := x.AudioSource.(*DiarizeRequest_AudioUrl); ok {
			return x.AudioUrl
		}
	}
	return ""
}

func (x *DiarizeRequest) GetAudioData() []byte {
	if x != nil {
		if x, ok := x.AudioSource.(*DiarizeRequest_AudioData); ok {
			return x.AudioData
		}
	}
	return nil
}

func (x *DiarizeRequest) GetNumSpeakers() int32 {
	if x != nil {
		return x.NumSpeakers
	}
	return 0
}

type isDiarizeRequest_AudioSource interface {
	isDiarizeRequest_AudioSource()
}

type DiarizeRequest_AudioUrl struct {
	AudioUrl string `protobuf:"bytes,1,opt,name=audio_url,json=audioUrl,proto3,oneof"`
}

type DiarizeRequest_AudioData struct {
	AudioData []byte `protobuf:"bytes,2,opt,name=audio_data,json=audioData,proto3,oneof"`
}

func (*DiarizeRequest_AudioUrl) isDiarizeRequest_AudioSource() {}

func (*DiarizeRequest_AudioData) isDiarizeRequest_AudioSource() {}

type DiarizeResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Segments      []*SpeakerSegment      `protobuf:"bytes,1,rep,name=segments,proto3" json:"segments,omitempty"`
	NumSpeakers   int32                  `protobuf:"varint,2,opt,name=num_speakers,json=numSpeakers,proto3" json:"num_speakers,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DiarizeResponse) Reset() {
	*x = DiarizeResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DiarizeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DiarizeResponse) ProtoMessage() {}

func (x *DiarizeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DiarizeResponse.ProtoReflect.Descriptor instead.
func (*DiarizeResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{27}
}

func (x *DiarizeResponse) GetSegments() []*SpeakerSegment {
	if x != nil {
		return x.Segments
	}
	return nil
}

func (x *DiarizeResponse) GetNumSpeakers() int32 {
	if x != nil {
		return x.NumSpeakers
	}
	return 0
}

type SpeakerSegment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Speaker       string                 `protobuf:"bytes,1,opt,name=speaker,proto3" json:"speaker,omitempty"` // 说话人ID
	Start         float32                `protobuf:"fixed32,2,opt,name=start,proto3" json:"start,omitempty"`
	End           float32                `protobuf:"fixed32,3,opt,name=end,proto3" json:"end,omitempty"`
	Text          string                 `protobuf:"bytes,4,opt,name=text,proto3" json:"text,omitempty"` // 该片段的文本
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *SpeakerSegment) Reset() {
	*x = SpeakerSegment{}
	mi := &file_voice_v1_voice_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *SpeakerSegment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SpeakerSegment) ProtoMessage() {}

func (x *SpeakerSegment) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SpeakerSegment.ProtoReflect.Descriptor instead.
func (*SpeakerSegment) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{28}
}

func (x *SpeakerSegment) GetSpeaker() string {
	if x != nil {
		return x.Speaker
	}
	return ""
}

func (x *SpeakerSegment) GetStart() float32 {
	if x != nil {
		return x.Start
	}
	return 0
}

func (x *SpeakerSegment) GetEnd() float32 {
	if x != nil {
		return x.End
	}
	return 0
}

func (x *SpeakerSegment) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

type EmotionRequest struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// Types that are valid to be assigned to AudioSource:
	//
	//	*EmotionRequest_AudioUrl
	//	*EmotionRequest_AudioData
	AudioSource   isEmotionRequest_AudioSource `protobuf_oneof:"audio_source"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmotionRequest) Reset() {
	*x = EmotionRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmotionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmotionRequest) ProtoMessage() {}

func (x *EmotionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmotionRequest.ProtoReflect.Descriptor instead.
func (*EmotionRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{29}
}

func (x *EmotionRequest) GetAudioSource() isEmotionRequest_AudioSource {
	if x != nil {
		return x.AudioSource
	}
	return nil
}

func (x *EmotionRequest) GetAudioUrl() string {
	if x != nil {
		if x, ok := x.AudioSource.(*EmotionRequest_AudioUrl); ok {
			return x.AudioUrl
		}
	}
	return ""
}

func (x *EmotionRequest) GetAudioData() []byte {
	if x != nil {
		if x, ok := x.AudioSource.(*EmotionRequest_AudioData); ok {
			return x.AudioData
		}
	}
	return nil
}

type isEmotionRequest_AudioSource interface {
	isEmotionRequest_AudioSource()
}

type EmotionRequest_AudioUrl struct {
	AudioUrl string `protobuf:"bytes,1,opt,name=audio_url,json=audioUrl,proto3,oneof"`
}

type EmotionRequest_AudioData struct {
	AudioData []byte `protobuf:"bytes,2,opt,name=audio_data,json=audioData,proto3,oneof"`
}

func (*EmotionRequest_AudioUrl) isEmotionRequest_AudioSource() {}

func (*EmotionRequest_AudioData) isEmotionRequest_AudioSource() {}

type EmotionResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PrimaryEmotion string                 `protobuf:"bytes,1,opt,name=primary_emotion,json=primaryEmotion,proto3" json:"primary_emotion,omitempty"`                                           // 主要情感
	Emotions       map[string]float32     `protobuf:"bytes,2,rep,name=emotions,proto3" json:"emotions,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"fixed32,2,opt,name=value"` // 情感分数
	Confidence     float32                `protobuf:"fixed32,3,opt,name=confidence,proto3" json:"confidence,omitempty"`
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *EmotionResponse) Reset() {
	*x = EmotionResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmotionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmotionResponse) ProtoMessage() {}

func (x *EmotionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmotionResponse.ProtoReflect.Descriptor instead.
func (*EmotionResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{30}
}

func (x *EmotionResponse) GetPrimaryEmotion() string {
	if x != nil {
		return x.PrimaryEmotion
	}
	return ""
}

func (x *EmotionResponse) GetEmotions() map[string]float32 {
	if x != nil {
		return x.Emotions
	}
	return nil
}

func (x *EmotionResponse) GetConfidence() float32 {
	if x != nil {
		return x.Confidence
	}
	return 0
}

type ListVoicesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Language      string                 `protobuf:"bytes,1,opt,name=language,proto3" json:"language,omitempty"` // 按语言过滤
	Provider      string                 `protobuf:"bytes,2,opt,name=provider,proto3" json:"provider,omitempty"` // 按提供商过滤
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVoicesRequest) Reset() {
	*x = ListVoicesRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVoicesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVoicesRequest) ProtoMessage() {}

func (x *ListVoicesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVoicesRequest.ProtoReflect.Descriptor instead.
func (*ListVoicesRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{31}
}

func (x *ListVoicesRequest) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *ListVoicesRequest) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type ListVoicesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Voices        []*Voice               `protobuf:"bytes,1,rep,name=voices,proto3" json:"voices,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListVoicesResponse) Reset() {
	*x = ListVoicesResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListVoicesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListVoicesResponse) ProtoMessage() {}

func (x *ListVoicesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListVoicesResponse.ProtoReflect.Descriptor instead.
func (*ListVoicesResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{32}
}

func (x *ListVoicesResponse) GetVoices() []*Voice {
	if x != nil {
		return x.Voices
	}
	return nil
}

type Voice struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	VoiceId       string                 `protobuf:"bytes,1,opt,name=voice_id,json=voiceId,proto3" json:"voice_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Language      string                 `protobuf:"bytes,3,opt,name=language,proto3" json:"language,omitempty"`
	Gender        string                 `protobuf:"bytes,4,opt,name=gender,proto3" json:"gender,omitempty"` // male, female, neutral
	Provider      string                 `protobuf:"bytes,5,opt,name=provider,proto3" json:"provider,omitempty"`
	Styles        []string               `protobuf:"bytes,6,rep,name=styles,proto3" json:"styles,omitempty"` // 可用风格
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Voice) Reset() {
	*x = Voice{}
	mi := &file_voice_v1_voice_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Voice) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Voice) ProtoMessage() {}

func (x *Voice) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Voice.ProtoReflect.Descriptor instead.
func (*Voice) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{33}
}

func (x *Voice) GetVoiceId() string {
	if x != nil {
		return x.VoiceId
	}
	return ""
}

func (x *Voice) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Voice) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *Voice) GetGender() string {
	if x != nil {
		return x.Gender
	}
	return ""
}

func (x *Voice) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

func (x *Voice) GetStyles() []string {
	if x != nil {
		return x.Styles
	}
	return nil
}

type ListLanguagesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLanguagesRequest) Reset() {
	*x = ListLanguagesRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLanguagesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLanguagesRequest) ProtoMessage() {}

func (x *ListLanguagesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLanguagesRequest.ProtoReflect.Descriptor instead.
func (*ListLanguagesRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{34}
}

type ListLanguagesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Languages     []*Language            `protobuf:"bytes,1,rep,name=languages,proto3" json:"languages,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListLanguagesResponse) Reset() {
	*x = ListLanguagesResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListLanguagesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListLanguagesResponse) ProtoMessage() {}

func (x *ListLanguagesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListLanguagesResponse.ProtoReflect.Descriptor instead.
func (*ListLanguagesResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{35}
}

func (x *ListLanguagesResponse) GetLanguages() []*Language {
	if x != nil {
		return x.Languages
	}
	return nil
}

type Language struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Code          string                 `protobuf:"bytes,1,opt,name=code,proto3" json:"code,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	AsrSupported  bool                   `protobuf:"varint,3,opt,name=asr_supported,json=asrSupported,proto3" json:"asr_supported,omitempty"`
	TtsSupported  bool                   `protobuf:"varint,4,opt,name=tts_supported,json=ttsSupported,proto3" json:"tts_supported,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Language) Reset() {
	*x = Language{}
	mi := &file_voice_v1_voice_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Language) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Language) ProtoMessage() {}

func (x *Language) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Language.ProtoReflect.Descriptor instead.
func (*Language) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{36}
}

func (x *Language) GetCode() string {
	if x != nil {
		return x.Code
	}
	return ""
}

func (x *Language) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Language) GetAsrSupported() bool {
	if x != nil {
		return x.AsrSupported
	}
	return false
}

func (x *Language) GetTtsSupported() bool {
	if x != nil {
		return x.TtsSupported
	}
	return false
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_voice_v1_voice_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{37}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_voice_v1_voice_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_voice_v1_voice_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_voice_v1_voice_proto_rawDescGZIP(), []int{38}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

var File_voice_v1_voice_proto protoreflect.FileDescriptor

const file_voice_v1_voice_proto_rawDesc = "" +
	"\n" +
	"\x14voice/v1/voice.proto\x12\bvoice.v1\"\x9f\x02\n" +
	"\x10RecognizeRequest\x12\x1d\n" +
	"\taudio_url\x18\x01 \x01(\tH\x00R\baudioUrl\x12\x1f\n" +
	"\n" +
	"audio_data\x18\x02 \x01(\fH\x00R\taudioData\x12#\n" +
	"\faudio_base64\x18\x03 \x01(\tH\x00R\vaudioBase64\x12\x1a\n" +
	"\blanguage\x18\x04 \x01(\tR\blanguage\x12\x1d\n" +
	"\n" +
	"enable_vad\x18\x05 \x01(\bR\tenableVad\x12\x12\n" +
	"\x04task\x18\x06 \x01(\tR\x04task\x12\x14\n" +
	"\x05model\x18\a \x01(\tR\x05model\x121\n" +
	"\x06config\x18\b \x01(\v2\x19.voice.v1.RecognizeConfigR\x06configB\x0e\n" +
	"\faudio_source\"\x98\x01\n" +
	"\x0fRecognizeConfig\x124\n" +
	"\x16enable_word_timestamps\x18\x01 \x01(\bR\x14enableWordTimestamps\x12-\n" +
	"\x12enable_punctuation\x18\x02 \x01(\bR\x11enablePunctuation\x12 \n" +
	"\vtemperature\x18\x03 \x01(\x02R\vtemperature\"\xff\x01\n" +
	"\x11RecognizeResponse\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x1a\n" +
	"\blanguage\x18\x02 \x01(\tR\blanguage\x12\x1e\n" +
	"\n" +
	"confidence\x18\x03 \x01(\x02R\n" +
	"confidence\x12@\n" +
	"\x0fword_timestamps\x18\x04 \x03(\v2\x17.voice.v1.WordTimestampR\x0ewordTimestamps\x12\x1f\n" +
	"\vduration_ms\x18\x05 \x01(\x03R\n" +
	"durationMs\x127\n" +
	"\bmetadata\x18\x06 \x01(\v2\x1b.voice.v1.RecognizeMetadataR\bmetadata\"k\n" +
	"\rWordTimestamp\x12\x12\n" +
	"\x04word\x18\x01 \x01(\tR\x04word\x12\x14\n" +
	"\x05start\x18\x02 \x01(\x02R\x05start\x12\x10\n" +
	"\x03end\x18\x03 \x01(\x02R\x03end\x12\x1e\n" +
	"\n" +
	"confidence\x18\x04 \x01(\x02R\n" +
	"confidence\"\x85\x01\n" +
	"\x11RecognizeMetadata\x12\x14\n" +
	"\x05model\x18\x01 \x01(\tR\x05model\x12\x1f\n" +
	"\vtokens_used\x18\x02 \x01(\x05R\n" +
	"tokensUsed\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x03 \x01(\x03R\tlatencyMs\x12\x1a\n" +
	"\bprovider\x18\x04 \x01(\tR\bprovider\"{\n" +
	"\x16RecognizeStreamRequest\x123\n" +
	"\x06config\x18\x01 \x01(\v2\x19.voice.v1.RecognizeConfigH\x00R\x06config\x12!\n" +
	"\vaudio_chunk\x18\x02 \x01(\fH\x00R\n" +
	"audioChunkB\t\n" +
	"\apayload\"\xaa\x01\n" +
	"\x17RecognizeStreamResponse\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x19\n" +
	"\bis_final\x18\x02 \x01(\bR\aisFinal\x12\x1e\n" +
	"\n" +
	"confidence\x18\x03 \x01(\x02R\n" +
	"confidence\x12@\n" +
	"\x0fword_timestamps\x18\x04 \x03(\v2\x17.voice.v1.WordTimestampR\x0ewordTimestamps\"\xec\x01\n" +
	"\x11SynthesizeRequest\x12\x12\n" +
	"\x04text\x18\x01 \x01(\tR\x04text\x12\x14\n" +
	"\x05voice\x18\x02 \x01(\tR\x05voice\x12\x1a\n" +
	"\blanguage\x18\x03 \x01(\tR\blanguage\x12\x12\n" +
	"\x04rate\x18\x04 \x01(\tR\x04rate\x12\x14\n" +
	"\x05pitch\x18\x05 \x01(\tR\x05pitch\x12\x16\n" +
	"\x06format\x18\x06 \x01(\tR\x06format\x122\n" +
	"\x06config\x18\a \x01(\v2\x1a.voice.v1.SynthesizeConfigR\x06config\x12\x1b\n" +
	"\tcache_key\x18\b \x01(\tR\bcacheKey\"a\n" +
	"\x10SynthesizeConfig\x12\x16\n" +
	"\x06volume\x18\x01 \x01(\x02R\x06volume\x12\x14\n" +
	"\x05model\x18\x02 \x01(\tR\x05model\x12\x1f\n" +
	"\venable_ssml\x18\x03 \x01(\bR\n" +
	"enableSsml\"\xfc\x01\n" +
	"\x12SynthesizeResponse\x12\x1f\n" +
	"\n" +
	"audio_data\x18\x01 \x01(\fH\x00R\taudioData\x12\x1d\n" +
	"\taudio_url\x18\x02 \x01(\tH\x00R\baudioUrl\x12#\n" +
	"\faudio_base64\x18\x03 \x01(\tH\x00R\vaudioBase64\x12\x1f\n" +
	"\vduration_ms\x18\x04 \x01(\x03R\n" +
	"durationMs\x12\x16\n" +
	"\x06cached\x18\x05 \x01(\bR\x06cached\x128\n" +
	"\bmetadata\x18\x06 \x01(\v2\x1c.voice.v1.SynthesizeMetadataR\bmetadataB\x0e\n" +
	"\faudio_output\"\x85\x01\n" +
	"\x12SynthesizeMetadata\x12\x14\n" +
	"\x05model\x18\x01 \x01(\tR\x05model\x12\x1e\n" +
	"\n" +
	"characters\x18\x02 \x01(\x05R\n" +
	"characters\x12\x1d\n" +
	"\n" +
	"latency_ms\x18\x03 \x01(\x03R\tlatencyMs\x12\x1a\n" +
	"\bprovider\x18\x04 \x01(\tR\bprovider\"V\n" +
	"\x18SynthesizeStreamResponse\x12\x1f\n" +
	"\vaudio_chunk\x18\x01 \x01(\fR\n" +
	"audioChunk\x12\x19\n" +
	"\bis_final\x18\x02 \x01(\bR\aisFinal\"\xae\x01\n" +
	"\n" +
	"VADRequest\x12\x1d\n" +
	"\taudio_url\x18\x01 \x01(\tH\x00R\baudioUrl\x12\x1f\n" +
	"\n" +
	"audio_data\x18\x02 \x01(\fH\x00R\taudioData\x12#\n" +
	"\faudio_base64\x18\x03 \x01(\tH\x00R\vaudioBase64\x12+\n" +
	"\x06config\x18\x04 \x01(\v2\x13.voice.v1.VADConfigR\x06configB\x0e\n" +
	"\faudio_source\"\x95\x01\n" +
	"\tVADConfig\x12\x1c\n" +
	"\tthreshold\x18\x01 \x01(\x02R\tthreshold\x123\n" +
	"\x16min_speech_duration_ms\x18\x02 \x01(\x05R\x13minSpeechDurationMs\x125\n" +
	"\x17min_silence_duration_ms\x18\x03 \x01(\x05R\x14minSilenceDurationMs\"\x8e\x01\n" +
	"\vVADResponse\x120\n" +
	"\bsegments\x18\x01 \x03(\v2\x14.voice.v1.VADSegmentR\bsegments\x12!\n" +
	"\fspeech_ratio\x18\x02 \x01(\x02R\vspeechRatio\x12*\n" +
	"\x11total_duration_ms\x18\x03 \x01(\x03R\x0ftotalDurationMs\"T\n" +
	"\n" +
	"VADSegment\x12\x14\n" +
	"\x05start\x18\x01 \x01(\x02R\x05start\x12\x10\n" +
	"\x03end\x18\x02 \x01(\x02R\x03end\x12\x1e\n" +
	"\n" +
	"confidence\x18\x03 \x01(\x02R\n" +
	"confidence\"o\n" +
	"\x10VADStreamRequest\x12-\n" +
	"\x06config\x18\x01 \x01(\v2\x13.voice.v1.VADConfigH\x00R\x06config\x12!\n" +
	"\vaudio_chunk\x18\x02 \x01(\fH\x00R\n" +
	"audioChunkB\t\n" +
	"\apayload\"\x80\x01\n" +
	"\x11VADStreamResponse\x12\x1b\n" +
	"\tis_speech\x18\x01 \x01(\bR\bisSpeech\x12\x1e\n" +
	"\n" +
	"confidence\x18\x02 \x01(\x02R\n" +
	"confidence\x12.\n" +
	"\asegment\x18\x03 \x01(\v2\x14.voice.v1.VADSegmentR\asegment\"w\n" +
	"\x11FullDuplexRequest\x124\n" +
	"\x06config\x18\x01 \x01(\v2\x1a.voice.v1.FullDuplexConfigH\x00R\x06config\x12!\n" +
	"\vaudio_chunk\x18\x02 \x01(\fH\x00R\n" +
	"audioChunkB\t\n" +
	"\apayload\"\x8e\x01\n" +
	"\x10FullDuplexConfig\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\x14\n" +
	"\x05voice\x18\x02 \x01(\tR\x05voice\x12\x1d\n" +
	"\n" +
	"enable_vad\x18\x03 \x01(\bR\tenableVad\x12)\n" +
	"\x10enable_interrupt\x18\x04 \x01(\bR\x0fenableInterrupt\"\x82\x02\n" +
	"\x12FullDuplexResponse\x12B\n" +
	"\n" +
	"asr_result\x18\x01 \x01(\v2!.voice.v1.RecognizeStreamResponseH\x00R\tasrResult\x12C\n" +
	"\n" +
	"tts_result\x18\x02 \x01(\v2\".voice.v1.SynthesizeStreamResponseH\x00R\tttsResult\x12<\n" +
	"\n" +
	"vad_result\x18\x03 \x01(\v2\x1b.voice.v1.VADStreamResponseH\x00R\tvadResult\x12\x1a\n" +
	"\bsequence\x18\x04 \x01(\x03R\bsequenceB\t\n" +
	"\apayload\"\xcf\x01\n" +
	"\x11CloneVoiceRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x1d\n" +
	"\taudio_url\x18\x03 \x01(\tH\x00R\baudioUrl\x12\x1f\n" +
	"\n" +
	"audio_data\x18\x04 \x01(\fH\x00R\taudioData\x12\x17\n" +
	"\auser_id\x18\x05 \x01(\tR\x06userId\x12\x1b\n" +
	"\ttenant_id\x18\x06 \x01(\tR\btenantIdB\x0e\n" +
	"\faudio_source\"[\n" +
	"\x12CloneVoiceResponse\x12\x19\n" +
	"\bvoice_id\x18\x01 \x01(\tR\avoiceId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x16\n" +
	"\x06status\x18\x03 \x01(\tR\x06status\"O\n" +
	"\x17ListClonedVoicesRequest\x12\x17\n" +
	"\auser_id\x18\x01 \x01(\tR\x06userId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\"I\n" +
	"\x18ListClonedVoicesResponse\x12-\n" +
	"\x06voices\x18\x01 \x03(\v2\x15.voice.v1.ClonedVoiceR\x06voices\"v\n" +
	"\vClonedVoice\x12\x19\n" +
	"\bvoice_id\x18\x01 \x01(\tR\avoiceId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x16\n" +
	"\x06status\x18\x04 \x01(\tR\x06status\"\x83\x01\n" +
	"\x0eDiarizeRequest\x12\x1d\n" +
	"\taudio_url\x18\x01 \x01(\tH\x00R\baudioUrl\x12\x1f\n" +
	"\n" +
	"audio_data\x18\x02 \x01(\fH\x00R\taudioData\x12!\n" +
	"\fnum_speakers\x18\x03 \x01(\x05R\vnumSpeakersB\x0e\n" +
	"\faudio_source\"j\n" +
	"\x0fDiarizeResponse\x124\n" +
	"\bsegments\x18\x01 \x03(\v2\x18.voice.v1.SpeakerSegmentR\bsegments\x12!\n" +
	"\fnum_speakers\x18\x02 \x01(\x05R\vnumSpeakers\"f\n" +
	"\x0eSpeakerSegment\x12\x18\n" +
	"\aspeaker\x18\x01 \x01(\tR\aspeaker\x12\x14\n" +
	"\x05start\x18\x02 \x01(\x02R\x05start\x12\x10\n" +
	"\x03end\x18\x03 \x01(\x02R\x03end\x12\x12\n" +
	"\x04text\x18\x04 \x01(\tR\x04text\"`\n" +
	"\x0eEmotionRequest\x12\x1d\n" +
	"\taudio_url\x18\x01 \x01(\tH\x00R\baudioUrl\x12\x1f\n" +
	"\n" +
	"audio_data\x18\x02 \x01(\fH\x00R\taudioDataB\x0e\n" +
	"\faudio_source\"\xdc\x01\n" +
	"\x0fEmotionResponse\x12'\n" +
	"\x0fprimary_emotion\x18\x01 \x01(\tR\x0eprimaryEmotion\x12C\n" +
	"\bemotions\x18\x02 \x03(\v2'.voice.v1.EmotionResponse.EmotionsEntryR\bemotions\x12\x1e\n" +
	"\n" +
	"confidence\x18\x03 \x01(\x02R\n" +
	"confidence\x1a;\n" +
	"\rEmotionsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x02R\x05value:\x028\x01\"K\n" +
	"\x11ListVoicesRequest\x12\x1a\n" +
	"\blanguage\x18\x01 \x01(\tR\blanguage\x12\x1a\n" +
	"\bprovider\x18\x02 \x01(\tR\bprovider\"=\n" +
	"\x12ListVoicesResponse\x12'\n" +
	"\x06voices\x18\x01 \x03(\v2\x0f.voice.v1.VoiceR\x06voices\"\x9e\x01\n" +
	"\x05Voice\x12\x19\n" +
	"\bvoice_id\x18\x01 \x01(\tR\avoiceId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\blanguage\x18\x03 \x01(\tR\blanguage\x12\x16\n" +
	"\x06gender\x18\x04 \x01(\tR\x06gender\x12\x1a\n" +
	"\bprovider\x18\x05 \x01(\tR\bprovider\x12\x16\n" +
	"\x06styles\x18\x06 \x03(\tR\x06styles\"\x16\n" +
	"\x14ListLanguagesRequest\"I\n" +
	"\x15ListLanguagesResponse\x120\n" +
	"\tlanguages\x18\x01 \x03(\v2\x12.voice.v1.LanguageR\tlanguages\"|\n" +
	"\bLanguage\x12\x12\n" +
	"\x04code\x18\x01 \x01(\tR\x04code\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12#\n" +
	"\rasr_supported\x18\x03 \x01(\bR\fasrSupported\x12#\n" +
	"\rtts_supported\x18\x04 \x01(\bR\fttsSupported\"\x14\n" +
	"\x12HealthCheckRequest\"-\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status2\xf9\b\n" +
	"\fVoiceService\x12J\n" +
	"\x0fRecognizeSpeech\x12\x1a.voice.v1.RecognizeRequest\x1a\x1b.voice.v1.RecognizeResponse\x12`\n" +
	"\x15RecognizeSpeechStream\x12 .voice.v1.RecognizeStreamRequest\x1a!.voice.v1.RecognizeStreamResponse(\x010\x01\x12M\n" +
	"\x10SynthesizeSpeech\x12\x1b.voice.v1.SynthesizeRequest\x1a\x1c.voice.v1.SynthesizeResponse\x12[\n" +
	"\x16SynthesizeSpeechStream\x12\x1b.voice.v1.SynthesizeRequest\x1a\".voice.v1.SynthesizeStreamResponse0\x01\x12B\n" +
	"\x13DetectVoiceActivity\x12\x14.voice.v1.VADRequest\x1a\x15.voice.v1.VADResponse\x12X\n" +
	"\x19DetectVoiceActivityStream\x12\x1a.voice.v1.VADStreamRequest\x1a\x1b.voice.v1.VADStreamResponse(\x010\x01\x12W\n" +
	"\x16FullDuplexConversation\x12\x1b.voice.v1.FullDuplexRequest\x1a\x1c.voice.v1.FullDuplexResponse(\x010\x01\x12G\n" +
	"\n" +
	"CloneVoice\x12\x1b.voice.v1.CloneVoiceRequest\x1a\x1c.voice.v1.CloneVoiceResponse\x12Y\n" +
	"\x10ListClonedVoices\x12!.voice.v1.ListClonedVoicesRequest\x1a\".voice.v1.ListClonedVoicesResponse\x12F\n" +
	"\x0fDiarizeSpeakers\x12\x18.voice.v1.DiarizeRequest\x1a\x19.voice.v1.DiarizeResponse\x12E\n" +
	"\x0eAnalyzeEmotion\x12\x18.voice.v1.EmotionRequest\x1a\x19.voice.v1.EmotionResponse\x12G\n" +
	"\n" +
	"ListVoices\x12\x1b.voice.v1.ListVoicesRequest\x1a\x1c.voice.v1.ListVoicesResponse\x12P\n" +
	"\rListLanguages\x12\x1e.voice.v1.ListLanguagesRequest\x1a\x1f.voice.v1.ListLanguagesResponse\x12J\n" +
	"\vHealthCheck\x12\x1c.voice.v1.HealthCheckRequest\x1a\x1d.voice.v1.HealthCheckResponseB(Z&voicehelper/api/proto/voice/v1;voicev1b\x06proto3"

var (
	file_voice_v1_voice_proto_rawDescOnce sync.Once
	file_voice_v1_voice_proto_rawDescData []byte
)

func file_voice_v1_voice_proto_rawDescGZIP() []byte {
	file_voice_v1_voice_proto_rawDescOnce.Do(func() {
		file_voice_v1_voice_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_voice_v1_voice_proto_rawDesc), len(file_voice_v1_voice_proto_rawDesc)))
	})
	return file_voice_v1_voice_proto_rawDescData
}

var file_voice_v1_voice_proto_msgTypes = make([]protoimpl.MessageInfo, 40)
var file_voice_v1_voice_proto_goTypes = []any{
	(*RecognizeRequest)(nil),         // 0: voice.v1.RecognizeRequest
	(*RecognizeConfig)(nil),          // 1: voice.v1.RecognizeConfig
	(*RecognizeResponse)(nil),        // 2: voice.v1.RecognizeResponse
	(*WordTimestamp)(nil),            // 3: voice.v1.WordTimestamp
	(*RecognizeMetadata)(nil),        // 4: voice.v1.RecognizeMetadata
	(*RecognizeStreamRequest)(nil),   // 5: voice.v1.RecognizeStreamRequest
	(*RecognizeStreamResponse)(nil),  // 6: voice.v1.RecognizeStreamResponse
	(*SynthesizeRequest)(nil),        // 7: voice.v1.SynthesizeRequest
	(*SynthesizeConfig)(nil),         // 8: voice.v1.SynthesizeConfig
	(*SynthesizeResponse)(nil),       // 9: voice.v1.SynthesizeResponse
	(*SynthesizeMetadata)(nil),       // 10: voice.v1.SynthesizeMetadata
	(*SynthesizeStreamResponse)(nil), // 11: voice.v1.SynthesizeStreamResponse
	(*VADRequest)(nil),               // 12: voice.v1.VADRequest
	(*VADConfig)(nil),                // 13: voice.v1.VADConfig
	(*VADResponse)(nil),              // 14: voice.v1.VADResponse
	(*VADSegment)(nil),               // 15: voice.v1.VADSegment
	(*VADStreamRequest)(nil),         // 16: voice.v1.VADStreamRequest
	(*VADStreamResponse)(nil),        // 17: voice.v1.VADStreamResponse
	(*FullDuplexRequest)(nil),        // 18: voice.v1.FullDuplexRequest
	(*FullDuplexConfig)(nil),         // 19: voice.v1.FullDuplexConfig
	(*FullDuplexResponse)(nil),       // 20: voice.v1.FullDuplexResponse
	(*CloneVoiceRequest)(nil),        // 21: voice.v1.CloneVoiceRequest
	(*CloneVoiceResponse)(nil),       // 22: voice.v1.CloneVoiceResponse
	(*ListClonedVoicesRequest)(nil),  // 23: voice.v1.ListClonedVoicesRequest
	(*ListClonedVoicesResponse)(nil), // 24: voice.v1.ListClonedVoicesResponse
	(*ClonedVoice)(nil),              // 25: voice.v1.ClonedVoice
	(*DiarizeRequest)(nil),           // 26: voice.v1.DiarizeRequest
	(*DiarizeResponse)(nil),          // 27: voice.v1.DiarizeResponse
	(*SpeakerSegment)(nil),           // 28: voice.v1.SpeakerSegment
	(*EmotionRequest)(nil),           // 29: voice.v1.EmotionRequest
	(*EmotionResponse)(nil),          // 30: voice.v1.EmotionResponse
	(*ListVoicesRequest)(nil),        // 31: voice.v1.ListVoicesRequest
	(*ListVoicesResponse)(nil),       // 32: voice.v1.ListVoicesResponse
	(*Voice)(nil),                    // 33: voice.v1.Voice
	(*ListLanguagesRequest)(nil),     // 34: voice.v1.ListLanguagesRequest
	(*ListLanguagesResponse)(nil),    // 35: voice.v1.ListLanguagesResponse
	(*Language)(nil),                 // 36: voice.v1.Language
	(*HealthCheckRequest)(nil),       // 37: voice.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),      // 38: voice.v1.HealthCheckResponse
	nil,                              // 39: voice.v1.EmotionResponse.EmotionsEntry
}
var file_voice_v1_voice_proto_depIdxs = []int32{
	1,  // 0: voice.v1.RecognizeRequest.config:type_name -> voice.v1.RecognizeConfig
	3,  // 1: voice.v1.RecognizeResponse.word_timestamps:type_name -> voice.v1.WordTimestamp
	4,  // 2: voice.v1.RecognizeResponse.metadata:type_name -> voice.v1.RecognizeMetadata
	1,  // 3: voice.v1.RecognizeStreamRequest.config:type_name -> voice.v1.RecognizeConfig
	3,  // 4: voice.v1.RecognizeStreamResponse.word_timestamps:type_name -> voice.v1.WordTimestamp
	8,  // 5: voice.v1.SynthesizeRequest.config:type_name -> voice.v1.SynthesizeConfig
	10, // 6: voice.v1.SynthesizeResponse.metadata:type_name -> voice.v1.SynthesizeMetadata
	13, // 7: voice.v1.VADRequest.config:type_name -> voice.v1.VADConfig
	15, // 8: voice.v1.VADResponse.segments:type_name -> voice.v1.VADSegment
	13, // 9: voice.v1.VADStreamRequest.config:type_name -> voice.v1.VADConfig
	15, // 10: voice.v1.VADStreamResponse.segment:type_name -> voice.v1.VADSegment
	19, // 11: voice.v1.FullDuplexRequest.config:type_name -> voice.v1.FullDuplexConfig
	6,  // 12: voice.v1.FullDuplexResponse.asr_result:type_name -> voice.v1.RecognizeStreamResponse
	11, // 13: voice.v1.FullDuplexResponse.tts_result:type_name -> voice.v1.SynthesizeStreamResponse
	17, // 14: voice.v1.FullDuplexResponse.vad_result:type_name -> voice.v1.VADStreamResponse
	25, // 15: voice.v1.ListClonedVoicesResponse.voices:type_name -> voice.v1.ClonedVoice
	28, // 16: voice.v1.DiarizeResponse.segments:type_name -> voice.v1.SpeakerSegment
	39, // 17: voice.v1.EmotionResponse.emotions:type_name -> voice.v1.EmotionResponse.EmotionsEntry
	33, // 18: voice.v1.ListVoicesResponse.voices:type_name -> voice.v1.Voice
	36, // 19: voice.v1.ListLanguagesResponse.languages:type_name -> voice.v1.Language
	0,  // 20: voice.v1.VoiceService.RecognizeSpeech:input_type -> voice.v1.RecognizeRequest
	5,  // 21: voice.v1.VoiceService.RecognizeSpeechStream:input_type -> voice.v1.RecognizeStreamRequest
	7,  // 22: voice.v1.VoiceService.SynthesizeSpeech:input_type -> voice.v1.SynthesizeRequest
	7,  // 23: voice.v1.VoiceService.SynthesizeSpeechStream:input_type -> voice.v1.SynthesizeRequest
	12, // 24: voice.v1.VoiceService.DetectVoiceActivity:input_type -> voice.v1.VADRequest
	16, // 25: voice.v1.VoiceService.DetectVoiceActivityStream:input_type -> voice.v1.VADStreamRequest
	18, // 26: voice.v1.VoiceService.FullDuplexConversation:input_type -> voice.v1.FullDuplexRequest
	21, // 27: voice.v1.VoiceService.CloneVoice:input_type -> voice.v1.CloneVoiceRequest
	23, // 28: voice.v1.VoiceService.ListClonedVoices:input_type -> voice.v1.ListClonedVoicesRequest
	26, // 29: voice.v1.VoiceService.DiarizeSpeakers:input_type -> voice.v1.DiarizeRequest
	29, // 30: voice.v1.VoiceService.AnalyzeEmotion:input_type -> voice.v1.EmotionRequest
	31, // 31: voice.v1.VoiceService.ListVoices:input_type -> voice.v1.ListVoicesRequest
	34, // 32: voice.v1.VoiceService.ListLanguages:input_type -> voice.v1.ListLanguagesRequest
	37, // 33: voice.v1.VoiceService.HealthCheck:input_type -> voice.v1.HealthCheckRequest
	2,  // 34: voice.v1.VoiceService.RecognizeSpeech:output_type -> voice.v1.RecognizeResponse
	6,  // 35: voice.v1.VoiceService.RecognizeSpeechStream:output_type -> voice.v1.RecognizeStreamResponse
	9,  // 36: voice.v1.VoiceService.SynthesizeSpeech:output_type -> voice.v1.SynthesizeResponse
	11, // 37: voice.v1.VoiceService.SynthesizeSpeechStream:output_type -> voice.v1.SynthesizeStreamResponse
	14, // 38: voice.v1.VoiceService.DetectVoiceActivity:output_type -> voice.v1.VADResponse
	17, // 39: voice.v1.VoiceService.DetectVoiceActivityStream:output_type -> voice.v1.VADStreamResponse
	20, // 40: voice.v1.VoiceService.FullDuplexConversation:output_type -> voice.v1.FullDuplexResponse
	22, // 41: voice.v1.VoiceService.CloneVoice:output_type -> voice.v1.CloneVoiceResponse
	24, // 42: voice.v1.VoiceService.ListClonedVoices:output_type -> voice.v1.ListClonedVoicesResponse
	27, // 43: voice.v1.VoiceService.DiarizeSpeakers:output_type -> voice.v1.DiarizeResponse
	30, // 44: voice.v1.VoiceService.AnalyzeEmotion:output_type -> voice.v1.EmotionResponse
	32, // 45: voice.v1.VoiceService.ListVoices:output_type -> voice.v1.ListVoicesResponse
	35, // 46: voice.v1.VoiceService.ListLanguages:output_type -> voice.v1.ListLanguagesResponse
	38, // 47: voice.v1.VoiceService.HealthCheck:output_type -> voice.v1.HealthCheckResponse
	34, // [34:48] is the sub-list for method output_type
	20, // [20:34] is the sub-list for method input_type
	20, // [20:20] is the sub-list for extension type_name
	20, // [20:20] is the sub-list for extension extendee
	0,  // [0:20] is the sub-list for field type_name
}

func init() { file_voice_v1_voice_proto_init() }
func file_voice_v1_voice_proto_init() {
	if File_voice_v1_voice_proto != nil {
		return
	}
	file_voice_v1_voice_proto_msgTypes[0].OneofWrappers = []any{
		(*RecognizeRequest_AudioUrl)(nil),
		(*RecognizeRequest_AudioData)(nil),
		(*RecognizeRequest_AudioBase64)(nil),
	}
	file_voice_v1_voice_proto_msgTypes[5].OneofWrappers = []any{
		(*RecognizeStreamRequest_Config)(nil),
		(*RecognizeStreamRequest_AudioChunk)(nil),
	}
	file_voice_v1_voice_proto_msgTypes[9].OneofWrappers = []any{
		(*SynthesizeResponse_AudioData)(nil),
		(*SynthesizeResponse_AudioUrl)(nil),
		(*SynthesizeResponse_AudioBase64)(nil),
	}
	file_voice_v1_voice_proto_msgTypes[12].OneofWrappers = []any{
		(*VADRequest_AudioUrl)(nil),
		(*VADRequest_AudioData)(nil),
		(*VADRequest_AudioBase64)(nil),
	}
	file_voice_v1_voice_proto_msgTypes[16].OneofWrappers = []any{
		(*VADStreamRequest_Config)(nil),
		(*VADStreamRequest_AudioChunk)(nil),
	}
	file_voice_v1_voice_proto_msgTypes[18].OneofWrappers = []any{
		(*FullDuplexRequest_Config)(nil),
		(*FullDuplexRequest_AudioChunk)(nil),
	}
	file_voice_v1_voice_proto_msgTypes[20].OneofWrappers = []any{
		(*FullDuplexResponse_AsrResult)(nil),
		(*FullDuplexResponse_TtsResult)(nil),
		(*FullDuplexResponse_VadResult)(nil),
	}
	file_voice_v1_voice_proto_msgTypes[21].OneofWrappers = []any{
		(*CloneVoiceRequest_AudioUrl)(nil),
		(*CloneVoiceRequest_AudioData)(nil),
	}
	file_voice_v1_voice_proto_msgTypes[26].OneofWrappers = []any{
		(*DiarizeRequest_AudioUrl)(nil),
		(*DiarizeRequest_AudioData)(nil),
	}
	file_voice_v1_voice_proto_msgTypes[29].OneofWrappers = []any{
		(*EmotionRequest_AudioUrl)(nil),
		(*EmotionRequest_AudioData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_voice_v1_voice_proto_rawDesc), len(file_voice_v1_voice_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   40,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_voice_v1_voice_proto_goTypes,
		DependencyIndexes: file_voice_v1_voice_proto_depIdxs,
		MessageInfos:      file_voice_v1_voice_proto_msgTypes,
	}.Build()
	File_voice_v1_voice_proto = out.File
	file_voice_v1_voice_proto_goTypes = nil
	file_voice_v1_voice_proto_depIdxs = nil
}
