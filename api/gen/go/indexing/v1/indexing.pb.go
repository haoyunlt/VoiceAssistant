// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.33.0
// source: indexing/v1/indexing.proto

package indexingv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ProcessDocumentRequest struct {
	state        protoimpl.MessageState `protogen:"open.v1"`
	DocumentId   string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	TenantId     string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	CollectionId string                 `protobuf:"bytes,3,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	// Types that are valid to be assigned to ContentSource:
	//
	//	*ProcessDocumentRequest_FileUrl
	//	*ProcessDocumentRequest_FileData
	ContentSource isProcessDocumentRequest_ContentSource `protobuf_oneof:"content_source"`
	FileName      string                                 `protobuf:"bytes,6,opt,name=file_name,json=fileName,proto3" json:"file_name,omitempty"`
	FileType      string                                 `protobuf:"bytes,7,opt,name=file_type,json=fileType,proto3" json:"file_type,omitempty"` // pdf, docx, txt, md, html
	Config        *ProcessingConfig                      `protobuf:"bytes,8,opt,name=config,proto3" json:"config,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessDocumentRequest) Reset() {
	*x = ProcessDocumentRequest{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessDocumentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessDocumentRequest) ProtoMessage() {}

func (x *ProcessDocumentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessDocumentRequest.ProtoReflect.Descriptor instead.
func (*ProcessDocumentRequest) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{0}
}

func (x *ProcessDocumentRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *ProcessDocumentRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *ProcessDocumentRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *ProcessDocumentRequest) GetContentSource() isProcessDocumentRequest_ContentSource {
	if x != nil {
		return x.ContentSource
	}
	return nil
}

func (x *ProcessDocumentRequest) GetFileUrl() string {
	if x != nil {
		if x, ok := x.ContentSource.(*ProcessDocumentRequest_FileUrl); ok {
			return x.FileUrl
		}
	}
	return ""
}

func (x *ProcessDocumentRequest) GetFileData() []byte {
	if x != nil {
		if x, ok := x.ContentSource.(*ProcessDocumentRequest_FileData); ok {
			return x.FileData
		}
	}
	return nil
}

func (x *ProcessDocumentRequest) GetFileName() string {
	if x != nil {
		return x.FileName
	}
	return ""
}

func (x *ProcessDocumentRequest) GetFileType() string {
	if x != nil {
		return x.FileType
	}
	return ""
}

func (x *ProcessDocumentRequest) GetConfig() *ProcessingConfig {
	if x != nil {
		return x.Config
	}
	return nil
}

type isProcessDocumentRequest_ContentSource interface {
	isProcessDocumentRequest_ContentSource()
}

type ProcessDocumentRequest_FileUrl struct {
	FileUrl string `protobuf:"bytes,4,opt,name=file_url,json=fileUrl,proto3,oneof"`
}

type ProcessDocumentRequest_FileData struct {
	FileData []byte `protobuf:"bytes,5,opt,name=file_data,json=fileData,proto3,oneof"`
}

func (*ProcessDocumentRequest_FileUrl) isProcessDocumentRequest_ContentSource() {}

func (*ProcessDocumentRequest_FileData) isProcessDocumentRequest_ContentSource() {}

type ProcessingConfig struct {
	state                    protoimpl.MessageState `protogen:"open.v1"`
	Chunking                 *ChunkingConfig        `protobuf:"bytes,1,opt,name=chunking,proto3" json:"chunking,omitempty"`
	Embedding                *EmbeddingConfig       `protobuf:"bytes,2,opt,name=embedding,proto3" json:"embedding,omitempty"`
	EnableOcr                bool                   `protobuf:"varint,3,opt,name=enable_ocr,json=enableOcr,proto3" json:"enable_ocr,omitempty"`                                                // 启用OCR
	EnableMetadataExtraction bool                   `protobuf:"varint,4,opt,name=enable_metadata_extraction,json=enableMetadataExtraction,proto3" json:"enable_metadata_extraction,omitempty"` // 提取元数据
	Language                 string                 `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	unknownFields            protoimpl.UnknownFields
	sizeCache                protoimpl.SizeCache
}

func (x *ProcessingConfig) Reset() {
	*x = ProcessingConfig{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingConfig) ProtoMessage() {}

func (x *ProcessingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingConfig.ProtoReflect.Descriptor instead.
func (*ProcessingConfig) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{1}
}

func (x *ProcessingConfig) GetChunking() *ChunkingConfig {
	if x != nil {
		return x.Chunking
	}
	return nil
}

func (x *ProcessingConfig) GetEmbedding() *EmbeddingConfig {
	if x != nil {
		return x.Embedding
	}
	return nil
}

func (x *ProcessingConfig) GetEnableOcr() bool {
	if x != nil {
		return x.EnableOcr
	}
	return false
}

func (x *ProcessingConfig) GetEnableMetadataExtraction() bool {
	if x != nil {
		return x.EnableMetadataExtraction
	}
	return false
}

func (x *ProcessingConfig) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

type ChunkingConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Strategy      string                 `protobuf:"bytes,1,opt,name=strategy,proto3" json:"strategy,omitempty"` // fixed, semantic, recursive
	ChunkSize     int32                  `protobuf:"varint,2,opt,name=chunk_size,json=chunkSize,proto3" json:"chunk_size,omitempty"`
	ChunkOverlap  int32                  `protobuf:"varint,3,opt,name=chunk_overlap,json=chunkOverlap,proto3" json:"chunk_overlap,omitempty"`
	Separator     string                 `protobuf:"bytes,4,opt,name=separator,proto3" json:"separator,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ChunkingConfig) Reset() {
	*x = ChunkingConfig{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ChunkingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChunkingConfig) ProtoMessage() {}

func (x *ChunkingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChunkingConfig.ProtoReflect.Descriptor instead.
func (*ChunkingConfig) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{2}
}

func (x *ChunkingConfig) GetStrategy() string {
	if x != nil {
		return x.Strategy
	}
	return ""
}

func (x *ChunkingConfig) GetChunkSize() int32 {
	if x != nil {
		return x.ChunkSize
	}
	return 0
}

func (x *ChunkingConfig) GetChunkOverlap() int32 {
	if x != nil {
		return x.ChunkOverlap
	}
	return 0
}

func (x *ChunkingConfig) GetSeparator() string {
	if x != nil {
		return x.Separator
	}
	return ""
}

type EmbeddingConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Model         string                 `protobuf:"bytes,1,opt,name=model,proto3" json:"model,omitempty"` // text-embedding-ada-002, bge-large-zh
	BatchSize     int32                  `protobuf:"varint,2,opt,name=batch_size,json=batchSize,proto3" json:"batch_size,omitempty"`
	Provider      string                 `protobuf:"bytes,3,opt,name=provider,proto3" json:"provider,omitempty"` // openai, huggingface, local
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *EmbeddingConfig) Reset() {
	*x = EmbeddingConfig{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *EmbeddingConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EmbeddingConfig) ProtoMessage() {}

func (x *EmbeddingConfig) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EmbeddingConfig.ProtoReflect.Descriptor instead.
func (*EmbeddingConfig) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{3}
}

func (x *EmbeddingConfig) GetModel() string {
	if x != nil {
		return x.Model
	}
	return ""
}

func (x *EmbeddingConfig) GetBatchSize() int32 {
	if x != nil {
		return x.BatchSize
	}
	return 0
}

func (x *EmbeddingConfig) GetProvider() string {
	if x != nil {
		return x.Provider
	}
	return ""
}

type ProcessDocumentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"` // queued, processing, completed, failed
	Result        *ProcessingResult      `protobuf:"bytes,3,opt,name=result,proto3" json:"result,omitempty"` // 仅在completed时返回
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,4,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessDocumentResponse) Reset() {
	*x = ProcessDocumentResponse{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessDocumentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessDocumentResponse) ProtoMessage() {}

func (x *ProcessDocumentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessDocumentResponse.ProtoReflect.Descriptor instead.
func (*ProcessDocumentResponse) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{4}
}

func (x *ProcessDocumentResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ProcessDocumentResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessDocumentResponse) GetResult() *ProcessingResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ProcessDocumentResponse) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type ProcessingResult struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	DocumentId       string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	TotalChunks      int32                  `protobuf:"varint,2,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"`
	IndexedChunks    int32                  `protobuf:"varint,3,opt,name=indexed_chunks,json=indexedChunks,proto3" json:"indexed_chunks,omitempty"`
	ProcessingTimeMs int64                  `protobuf:"varint,4,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"`
	Metadata         *DocumentMetadata      `protobuf:"bytes,5,opt,name=metadata,proto3" json:"metadata,omitempty"`
	ChunkIds         []string               `protobuf:"bytes,6,rep,name=chunk_ids,json=chunkIds,proto3" json:"chunk_ids,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *ProcessingResult) Reset() {
	*x = ProcessingResult{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessingResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingResult) ProtoMessage() {}

func (x *ProcessingResult) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingResult.ProtoReflect.Descriptor instead.
func (*ProcessingResult) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{5}
}

func (x *ProcessingResult) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *ProcessingResult) GetTotalChunks() int32 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

func (x *ProcessingResult) GetIndexedChunks() int32 {
	if x != nil {
		return x.IndexedChunks
	}
	return 0
}

func (x *ProcessingResult) GetProcessingTimeMs() int64 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

func (x *ProcessingResult) GetMetadata() *DocumentMetadata {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *ProcessingResult) GetChunkIds() []string {
	if x != nil {
		return x.ChunkIds
	}
	return nil
}

type DocumentMetadata struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Title         string                 `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
	Author        string                 `protobuf:"bytes,2,opt,name=author,proto3" json:"author,omitempty"`
	PageCount     int32                  `protobuf:"varint,3,opt,name=page_count,json=pageCount,proto3" json:"page_count,omitempty"`
	WordCount     int32                  `protobuf:"varint,4,opt,name=word_count,json=wordCount,proto3" json:"word_count,omitempty"`
	Language      string                 `protobuf:"bytes,5,opt,name=language,proto3" json:"language,omitempty"`
	CreatedDate   *timestamppb.Timestamp `protobuf:"bytes,6,opt,name=created_date,json=createdDate,proto3" json:"created_date,omitempty"`
	Custom        map[string]string      `protobuf:"bytes,7,rep,name=custom,proto3" json:"custom,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentMetadata) Reset() {
	*x = DocumentMetadata{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentMetadata) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentMetadata) ProtoMessage() {}

func (x *DocumentMetadata) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentMetadata.ProtoReflect.Descriptor instead.
func (*DocumentMetadata) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{6}
}

func (x *DocumentMetadata) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *DocumentMetadata) GetAuthor() string {
	if x != nil {
		return x.Author
	}
	return ""
}

func (x *DocumentMetadata) GetPageCount() int32 {
	if x != nil {
		return x.PageCount
	}
	return 0
}

func (x *DocumentMetadata) GetWordCount() int32 {
	if x != nil {
		return x.WordCount
	}
	return 0
}

func (x *DocumentMetadata) GetLanguage() string {
	if x != nil {
		return x.Language
	}
	return ""
}

func (x *DocumentMetadata) GetCreatedDate() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedDate
	}
	return nil
}

func (x *DocumentMetadata) GetCustom() map[string]string {
	if x != nil {
		return x.Custom
	}
	return nil
}

type ProcessDocumentBatchRequest struct {
	state         protoimpl.MessageState    `protogen:"open.v1"`
	Documents     []*ProcessDocumentRequest `protobuf:"bytes,1,rep,name=documents,proto3" json:"documents,omitempty"`
	Async         bool                      `protobuf:"varint,2,opt,name=async,proto3" json:"async,omitempty"` // 是否异步处理
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessDocumentBatchRequest) Reset() {
	*x = ProcessDocumentBatchRequest{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessDocumentBatchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessDocumentBatchRequest) ProtoMessage() {}

func (x *ProcessDocumentBatchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessDocumentBatchRequest.ProtoReflect.Descriptor instead.
func (*ProcessDocumentBatchRequest) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{7}
}

func (x *ProcessDocumentBatchRequest) GetDocuments() []*ProcessDocumentRequest {
	if x != nil {
		return x.Documents
	}
	return nil
}

func (x *ProcessDocumentBatchRequest) GetAsync() bool {
	if x != nil {
		return x.Async
	}
	return false
}

type ProcessDocumentBatchResponse struct {
	state         protoimpl.MessageState     `protogen:"open.v1"`
	Results       []*ProcessDocumentResponse `protobuf:"bytes,1,rep,name=results,proto3" json:"results,omitempty"`
	Total         int32                      `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	Success       int32                      `protobuf:"varint,3,opt,name=success,proto3" json:"success,omitempty"`
	Failed        int32                      `protobuf:"varint,4,opt,name=failed,proto3" json:"failed,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessDocumentBatchResponse) Reset() {
	*x = ProcessDocumentBatchResponse{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessDocumentBatchResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessDocumentBatchResponse) ProtoMessage() {}

func (x *ProcessDocumentBatchResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessDocumentBatchResponse.ProtoReflect.Descriptor instead.
func (*ProcessDocumentBatchResponse) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{8}
}

func (x *ProcessDocumentBatchResponse) GetResults() []*ProcessDocumentResponse {
	if x != nil {
		return x.Results
	}
	return nil
}

func (x *ProcessDocumentBatchResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ProcessDocumentBatchResponse) GetSuccess() int32 {
	if x != nil {
		return x.Success
	}
	return 0
}

func (x *ProcessDocumentBatchResponse) GetFailed() int32 {
	if x != nil {
		return x.Failed
	}
	return 0
}

type IndexIncrementalRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	Changes       []*DocumentChange      `protobuf:"bytes,2,rep,name=changes,proto3" json:"changes,omitempty"`
	TenantId      string                 `protobuf:"bytes,3,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *IndexIncrementalRequest) Reset() {
	*x = IndexIncrementalRequest{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexIncrementalRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexIncrementalRequest) ProtoMessage() {}

func (x *IndexIncrementalRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexIncrementalRequest.ProtoReflect.Descriptor instead.
func (*IndexIncrementalRequest) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{9}
}

func (x *IndexIncrementalRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *IndexIncrementalRequest) GetChanges() []*DocumentChange {
	if x != nil {
		return x.Changes
	}
	return nil
}

func (x *IndexIncrementalRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type DocumentChange struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChangeType    string                 `protobuf:"bytes,1,opt,name=change_type,json=changeType,proto3" json:"change_type,omitempty"` // add, update, delete
	ChunkId       string                 `protobuf:"bytes,2,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,4,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DocumentChange) Reset() {
	*x = DocumentChange{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DocumentChange) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DocumentChange) ProtoMessage() {}

func (x *DocumentChange) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DocumentChange.ProtoReflect.Descriptor instead.
func (*DocumentChange) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{10}
}

func (x *DocumentChange) GetChangeType() string {
	if x != nil {
		return x.ChangeType
	}
	return ""
}

func (x *DocumentChange) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *DocumentChange) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *DocumentChange) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

type IndexIncrementalResponse struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	TaskId           string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	ChunksAdded      int32                  `protobuf:"varint,2,opt,name=chunks_added,json=chunksAdded,proto3" json:"chunks_added,omitempty"`
	ChunksUpdated    int32                  `protobuf:"varint,3,opt,name=chunks_updated,json=chunksUpdated,proto3" json:"chunks_updated,omitempty"`
	ChunksDeleted    int32                  `protobuf:"varint,4,opt,name=chunks_deleted,json=chunksDeleted,proto3" json:"chunks_deleted,omitempty"`
	ProcessingTimeMs int64                  `protobuf:"varint,5,opt,name=processing_time_ms,json=processingTimeMs,proto3" json:"processing_time_ms,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *IndexIncrementalResponse) Reset() {
	*x = IndexIncrementalResponse{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *IndexIncrementalResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*IndexIncrementalResponse) ProtoMessage() {}

func (x *IndexIncrementalResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use IndexIncrementalResponse.ProtoReflect.Descriptor instead.
func (*IndexIncrementalResponse) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{11}
}

func (x *IndexIncrementalResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *IndexIncrementalResponse) GetChunksAdded() int32 {
	if x != nil {
		return x.ChunksAdded
	}
	return 0
}

func (x *IndexIncrementalResponse) GetChunksUpdated() int32 {
	if x != nil {
		return x.ChunksUpdated
	}
	return 0
}

func (x *IndexIncrementalResponse) GetChunksDeleted() int32 {
	if x != nil {
		return x.ChunksDeleted
	}
	return 0
}

func (x *IndexIncrementalResponse) GetProcessingTimeMs() int64 {
	if x != nil {
		return x.ProcessingTimeMs
	}
	return 0
}

type RebuildIndexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	CollectionId  string                 `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	DocumentIds   []string               `protobuf:"bytes,3,rep,name=document_ids,json=documentIds,proto3" json:"document_ids,omitempty"` // 为空则重建全部
	Force         bool                   `protobuf:"varint,4,opt,name=force,proto3" json:"force,omitempty"`                               // 强制重建
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RebuildIndexRequest) Reset() {
	*x = RebuildIndexRequest{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebuildIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildIndexRequest) ProtoMessage() {}

func (x *RebuildIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildIndexRequest.ProtoReflect.Descriptor instead.
func (*RebuildIndexRequest) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{12}
}

func (x *RebuildIndexRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *RebuildIndexRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

func (x *RebuildIndexRequest) GetDocumentIds() []string {
	if x != nil {
		return x.DocumentIds
	}
	return nil
}

func (x *RebuildIndexRequest) GetForce() bool {
	if x != nil {
		return x.Force
	}
	return false
}

type RebuildIndexResponse struct {
	state              protoimpl.MessageState `protogen:"open.v1"`
	TaskId             string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status             string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`
	TotalDocuments     int32                  `protobuf:"varint,3,opt,name=total_documents,json=totalDocuments,proto3" json:"total_documents,omitempty"`
	ProcessedDocuments int32                  `protobuf:"varint,4,opt,name=processed_documents,json=processedDocuments,proto3" json:"processed_documents,omitempty"`
	StartedAt          *timestamppb.Timestamp `protobuf:"bytes,5,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`
	unknownFields      protoimpl.UnknownFields
	sizeCache          protoimpl.SizeCache
}

func (x *RebuildIndexResponse) Reset() {
	*x = RebuildIndexResponse{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RebuildIndexResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RebuildIndexResponse) ProtoMessage() {}

func (x *RebuildIndexResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RebuildIndexResponse.ProtoReflect.Descriptor instead.
func (*RebuildIndexResponse) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{13}
}

func (x *RebuildIndexResponse) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *RebuildIndexResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *RebuildIndexResponse) GetTotalDocuments() int32 {
	if x != nil {
		return x.TotalDocuments
	}
	return 0
}

func (x *RebuildIndexResponse) GetProcessedDocuments() int32 {
	if x != nil {
		return x.ProcessedDocuments
	}
	return 0
}

func (x *RebuildIndexResponse) GetStartedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.StartedAt
	}
	return nil
}

type GetProcessingStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetProcessingStatusRequest) Reset() {
	*x = GetProcessingStatusRequest{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetProcessingStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetProcessingStatusRequest) ProtoMessage() {}

func (x *GetProcessingStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetProcessingStatusRequest.ProtoReflect.Descriptor instead.
func (*GetProcessingStatusRequest) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{14}
}

func (x *GetProcessingStatusRequest) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

type ProcessingStatus struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TaskId        string                 `protobuf:"bytes,1,opt,name=task_id,json=taskId,proto3" json:"task_id,omitempty"`
	Status        string                 `protobuf:"bytes,2,opt,name=status,proto3" json:"status,omitempty"`      // queued, processing, completed, failed
	Progress      int32                  `protobuf:"varint,3,opt,name=progress,proto3" json:"progress,omitempty"` // 0-100
	CurrentStep   string                 `protobuf:"bytes,4,opt,name=current_step,json=currentStep,proto3" json:"current_step,omitempty"`
	Result        *ProcessingResult      `protobuf:"bytes,5,opt,name=result,proto3" json:"result,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,6,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ProcessingStatus) Reset() {
	*x = ProcessingStatus{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ProcessingStatus) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ProcessingStatus) ProtoMessage() {}

func (x *ProcessingStatus) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ProcessingStatus.ProtoReflect.Descriptor instead.
func (*ProcessingStatus) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{15}
}

func (x *ProcessingStatus) GetTaskId() string {
	if x != nil {
		return x.TaskId
	}
	return ""
}

func (x *ProcessingStatus) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ProcessingStatus) GetProgress() int32 {
	if x != nil {
		return x.Progress
	}
	return 0
}

func (x *ProcessingStatus) GetCurrentStep() string {
	if x != nil {
		return x.CurrentStep
	}
	return ""
}

func (x *ProcessingStatus) GetResult() *ProcessingResult {
	if x != nil {
		return x.Result
	}
	return nil
}

func (x *ProcessingStatus) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ProcessingStatus) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *ProcessingStatus) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

type GetDocumentChunksRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDocumentChunksRequest) Reset() {
	*x = GetDocumentChunksRequest{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDocumentChunksRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentChunksRequest) ProtoMessage() {}

func (x *GetDocumentChunksRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentChunksRequest.ProtoReflect.Descriptor instead.
func (*GetDocumentChunksRequest) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{16}
}

func (x *GetDocumentChunksRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *GetDocumentChunksRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetDocumentChunksRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type GetDocumentChunksResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Chunks        []*Chunk               `protobuf:"bytes,1,rep,name=chunks,proto3" json:"chunks,omitempty"`
	Total         int32                  `protobuf:"varint,2,opt,name=total,proto3" json:"total,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetDocumentChunksResponse) Reset() {
	*x = GetDocumentChunksResponse{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetDocumentChunksResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetDocumentChunksResponse) ProtoMessage() {}

func (x *GetDocumentChunksResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetDocumentChunksResponse.ProtoReflect.Descriptor instead.
func (*GetDocumentChunksResponse) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{17}
}

func (x *GetDocumentChunksResponse) GetChunks() []*Chunk {
	if x != nil {
		return x.Chunks
	}
	return nil
}

func (x *GetDocumentChunksResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

type Chunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ChunkId       string                 `protobuf:"bytes,1,opt,name=chunk_id,json=chunkId,proto3" json:"chunk_id,omitempty"`
	DocumentId    string                 `protobuf:"bytes,2,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`
	ChunkIndex    int32                  `protobuf:"varint,4,opt,name=chunk_index,json=chunkIndex,proto3" json:"chunk_index,omitempty"`
	Embedding     []float32              `protobuf:"fixed32,5,rep,packed,name=embedding,proto3" json:"embedding,omitempty"`
	Metadata      map[string]string      `protobuf:"bytes,6,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	CreatedAt     *timestamppb.Timestamp `protobuf:"bytes,7,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Chunk) Reset() {
	*x = Chunk{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Chunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chunk) ProtoMessage() {}

func (x *Chunk) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chunk.ProtoReflect.Descriptor instead.
func (*Chunk) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{18}
}

func (x *Chunk) GetChunkId() string {
	if x != nil {
		return x.ChunkId
	}
	return ""
}

func (x *Chunk) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *Chunk) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Chunk) GetChunkIndex() int32 {
	if x != nil {
		return x.ChunkIndex
	}
	return 0
}

func (x *Chunk) GetEmbedding() []float32 {
	if x != nil {
		return x.Embedding
	}
	return nil
}

func (x *Chunk) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *Chunk) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

type DeleteDocumentIndexRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	DocumentId    string                 `protobuf:"bytes,1,opt,name=document_id,json=documentId,proto3" json:"document_id,omitempty"`
	TenantId      string                 `protobuf:"bytes,2,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteDocumentIndexRequest) Reset() {
	*x = DeleteDocumentIndexRequest{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteDocumentIndexRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteDocumentIndexRequest) ProtoMessage() {}

func (x *DeleteDocumentIndexRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteDocumentIndexRequest.ProtoReflect.Descriptor instead.
func (*DeleteDocumentIndexRequest) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{19}
}

func (x *DeleteDocumentIndexRequest) GetDocumentId() string {
	if x != nil {
		return x.DocumentId
	}
	return ""
}

func (x *DeleteDocumentIndexRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

type GetStatsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	TenantId      string                 `protobuf:"bytes,1,opt,name=tenant_id,json=tenantId,proto3" json:"tenant_id,omitempty"`
	CollectionId  string                 `protobuf:"bytes,2,opt,name=collection_id,json=collectionId,proto3" json:"collection_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetStatsRequest) Reset() {
	*x = GetStatsRequest{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetStatsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetStatsRequest) ProtoMessage() {}

func (x *GetStatsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetStatsRequest.ProtoReflect.Descriptor instead.
func (*GetStatsRequest) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{20}
}

func (x *GetStatsRequest) GetTenantId() string {
	if x != nil {
		return x.TenantId
	}
	return ""
}

func (x *GetStatsRequest) GetCollectionId() string {
	if x != nil {
		return x.CollectionId
	}
	return ""
}

type StatsResponse struct {
	state               protoimpl.MessageState `protogen:"open.v1"`
	TotalDocuments      int64                  `protobuf:"varint,1,opt,name=total_documents,json=totalDocuments,proto3" json:"total_documents,omitempty"`
	TotalChunks         int64                  `protobuf:"varint,2,opt,name=total_chunks,json=totalChunks,proto3" json:"total_chunks,omitempty"`
	TotalSizeBytes      int64                  `protobuf:"varint,3,opt,name=total_size_bytes,json=totalSizeBytes,proto3" json:"total_size_bytes,omitempty"`
	IndexedDocuments    int64                  `protobuf:"varint,4,opt,name=indexed_documents,json=indexedDocuments,proto3" json:"indexed_documents,omitempty"`
	ProcessingDocuments int64                  `protobuf:"varint,5,opt,name=processing_documents,json=processingDocuments,proto3" json:"processing_documents,omitempty"`
	FailedDocuments     int64                  `protobuf:"varint,6,opt,name=failed_documents,json=failedDocuments,proto3" json:"failed_documents,omitempty"`
	ByFileType          map[string]int64       `protobuf:"bytes,7,rep,name=by_file_type,json=byFileType,proto3" json:"by_file_type,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"varint,2,opt,name=value"`
	LastIndexedAt       *timestamppb.Timestamp `protobuf:"bytes,8,opt,name=last_indexed_at,json=lastIndexedAt,proto3" json:"last_indexed_at,omitempty"`
	unknownFields       protoimpl.UnknownFields
	sizeCache           protoimpl.SizeCache
}

func (x *StatsResponse) Reset() {
	*x = StatsResponse{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StatsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StatsResponse) ProtoMessage() {}

func (x *StatsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StatsResponse.ProtoReflect.Descriptor instead.
func (*StatsResponse) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{21}
}

func (x *StatsResponse) GetTotalDocuments() int64 {
	if x != nil {
		return x.TotalDocuments
	}
	return 0
}

func (x *StatsResponse) GetTotalChunks() int64 {
	if x != nil {
		return x.TotalChunks
	}
	return 0
}

func (x *StatsResponse) GetTotalSizeBytes() int64 {
	if x != nil {
		return x.TotalSizeBytes
	}
	return 0
}

func (x *StatsResponse) GetIndexedDocuments() int64 {
	if x != nil {
		return x.IndexedDocuments
	}
	return 0
}

func (x *StatsResponse) GetProcessingDocuments() int64 {
	if x != nil {
		return x.ProcessingDocuments
	}
	return 0
}

func (x *StatsResponse) GetFailedDocuments() int64 {
	if x != nil {
		return x.FailedDocuments
	}
	return 0
}

func (x *StatsResponse) GetByFileType() map[string]int64 {
	if x != nil {
		return x.ByFileType
	}
	return nil
}

func (x *StatsResponse) GetLastIndexedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.LastIndexedAt
	}
	return nil
}

type HealthCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckRequest) Reset() {
	*x = HealthCheckRequest{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckRequest) ProtoMessage() {}

func (x *HealthCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckRequest.ProtoReflect.Descriptor instead.
func (*HealthCheckRequest) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{22}
}

type HealthCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HealthCheckResponse) Reset() {
	*x = HealthCheckResponse{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HealthCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HealthCheckResponse) ProtoMessage() {}

func (x *HealthCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HealthCheckResponse.ProtoReflect.Descriptor instead.
func (*HealthCheckResponse) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{23}
}

func (x *HealthCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *HealthCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

type ReadinessCheckRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadinessCheckRequest) Reset() {
	*x = ReadinessCheckRequest{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadinessCheckRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessCheckRequest) ProtoMessage() {}

func (x *ReadinessCheckRequest) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessCheckRequest.ProtoReflect.Descriptor instead.
func (*ReadinessCheckRequest) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{24}
}

type ReadinessCheckResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        string                 `protobuf:"bytes,1,opt,name=status,proto3" json:"status,omitempty"`
	Components    map[string]string      `protobuf:"bytes,2,rep,name=components,proto3" json:"components,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 各组件状态
	Timestamp     *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReadinessCheckResponse) Reset() {
	*x = ReadinessCheckResponse{}
	mi := &file_indexing_v1_indexing_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReadinessCheckResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReadinessCheckResponse) ProtoMessage() {}

func (x *ReadinessCheckResponse) ProtoReflect() protoreflect.Message {
	mi := &file_indexing_v1_indexing_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReadinessCheckResponse.ProtoReflect.Descriptor instead.
func (*ReadinessCheckResponse) Descriptor() ([]byte, []int) {
	return file_indexing_v1_indexing_proto_rawDescGZIP(), []int{25}
}

func (x *ReadinessCheckResponse) GetStatus() string {
	if x != nil {
		return x.Status
	}
	return ""
}

func (x *ReadinessCheckResponse) GetComponents() map[string]string {
	if x != nil {
		return x.Components
	}
	return nil
}

func (x *ReadinessCheckResponse) GetTimestamp() *timestamppb.Timestamp {
	if x != nil {
		return x.Timestamp
	}
	return nil
}

var File_indexing_v1_indexing_proto protoreflect.FileDescriptor

const file_indexing_v1_indexing_proto_rawDesc = "" +
	"\n" +
	"\x1aindexing/v1/indexing.proto\x12\vindexing.v1\x1a\x1fgoogle/protobuf/timestamp.proto\x1a\x1bgoogle/protobuf/empty.proto\"\xba\x02\n" +
	"\x16ProcessDocumentRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\x12#\n" +
	"\rcollection_id\x18\x03 \x01(\tR\fcollectionId\x12\x1b\n" +
	"\bfile_url\x18\x04 \x01(\tH\x00R\afileUrl\x12\x1d\n" +
	"\tfile_data\x18\x05 \x01(\fH\x00R\bfileData\x12\x1b\n" +
	"\tfile_name\x18\x06 \x01(\tR\bfileName\x12\x1b\n" +
	"\tfile_type\x18\a \x01(\tR\bfileType\x125\n" +
	"\x06config\x18\b \x01(\v2\x1d.indexing.v1.ProcessingConfigR\x06configB\x10\n" +
	"\x0econtent_source\"\x80\x02\n" +
	"\x10ProcessingConfig\x127\n" +
	"\bchunking\x18\x01 \x01(\v2\x1b.indexing.v1.ChunkingConfigR\bchunking\x12:\n" +
	"\tembedding\x18\x02 \x01(\v2\x1c.indexing.v1.EmbeddingConfigR\tembedding\x12\x1d\n" +
	"\n" +
	"enable_ocr\x18\x03 \x01(\bR\tenableOcr\x12<\n" +
	"\x1aenable_metadata_extraction\x18\x04 \x01(\bR\x18enableMetadataExtraction\x12\x1a\n" +
	"\blanguage\x18\x05 \x01(\tR\blanguage\"\x8e\x01\n" +
	"\x0eChunkingConfig\x12\x1a\n" +
	"\bstrategy\x18\x01 \x01(\tR\bstrategy\x12\x1d\n" +
	"\n" +
	"chunk_size\x18\x02 \x01(\x05R\tchunkSize\x12#\n" +
	"\rchunk_overlap\x18\x03 \x01(\x05R\fchunkOverlap\x12\x1c\n" +
	"\tseparator\x18\x04 \x01(\tR\tseparator\"b\n" +
	"\x0fEmbeddingConfig\x12\x14\n" +
	"\x05model\x18\x01 \x01(\tR\x05model\x12\x1d\n" +
	"\n" +
	"batch_size\x18\x02 \x01(\x05R\tbatchSize\x12\x1a\n" +
	"\bprovider\x18\x03 \x01(\tR\bprovider\"\xbc\x01\n" +
	"\x17ProcessDocumentResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x125\n" +
	"\x06result\x18\x03 \x01(\v2\x1d.indexing.v1.ProcessingResultR\x06result\x129\n" +
	"\n" +
	"created_at\x18\x04 \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\"\x83\x02\n" +
	"\x10ProcessingResult\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12!\n" +
	"\ftotal_chunks\x18\x02 \x01(\x05R\vtotalChunks\x12%\n" +
	"\x0eindexed_chunks\x18\x03 \x01(\x05R\rindexedChunks\x12,\n" +
	"\x12processing_time_ms\x18\x04 \x01(\x03R\x10processingTimeMs\x129\n" +
	"\bmetadata\x18\x05 \x01(\v2\x1d.indexing.v1.DocumentMetadataR\bmetadata\x12\x1b\n" +
	"\tchunk_ids\x18\x06 \x03(\tR\bchunkIds\"\xd7\x02\n" +
	"\x10DocumentMetadata\x12\x14\n" +
	"\x05title\x18\x01 \x01(\tR\x05title\x12\x16\n" +
	"\x06author\x18\x02 \x01(\tR\x06author\x12\x1d\n" +
	"\n" +
	"page_count\x18\x03 \x01(\x05R\tpageCount\x12\x1d\n" +
	"\n" +
	"word_count\x18\x04 \x01(\x05R\twordCount\x12\x1a\n" +
	"\blanguage\x18\x05 \x01(\tR\blanguage\x12=\n" +
	"\fcreated_date\x18\x06 \x01(\v2\x1a.google.protobuf.TimestampR\vcreatedDate\x12A\n" +
	"\x06custom\x18\a \x03(\v2).indexing.v1.DocumentMetadata.CustomEntryR\x06custom\x1a9\n" +
	"\vCustomEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"v\n" +
	"\x1bProcessDocumentBatchRequest\x12A\n" +
	"\tdocuments\x18\x01 \x03(\v2#.indexing.v1.ProcessDocumentRequestR\tdocuments\x12\x14\n" +
	"\x05async\x18\x02 \x01(\bR\x05async\"\xa6\x01\n" +
	"\x1cProcessDocumentBatchResponse\x12>\n" +
	"\aresults\x18\x01 \x03(\v2$.indexing.v1.ProcessDocumentResponseR\aresults\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\x12\x18\n" +
	"\asuccess\x18\x03 \x01(\x05R\asuccess\x12\x16\n" +
	"\x06failed\x18\x04 \x01(\x05R\x06failed\"\x8e\x01\n" +
	"\x17IndexIncrementalRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x125\n" +
	"\achanges\x18\x02 \x03(\v2\x1b.indexing.v1.DocumentChangeR\achanges\x12\x1b\n" +
	"\ttenant_id\x18\x03 \x01(\tR\btenantId\"\xea\x01\n" +
	"\x0eDocumentChange\x12\x1f\n" +
	"\vchange_type\x18\x01 \x01(\tR\n" +
	"changeType\x12\x19\n" +
	"\bchunk_id\x18\x02 \x01(\tR\achunkId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12E\n" +
	"\bmetadata\x18\x04 \x03(\v2).indexing.v1.DocumentChange.MetadataEntryR\bmetadata\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xd2\x01\n" +
	"\x18IndexIncrementalResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12!\n" +
	"\fchunks_added\x18\x02 \x01(\x05R\vchunksAdded\x12%\n" +
	"\x0echunks_updated\x18\x03 \x01(\x05R\rchunksUpdated\x12%\n" +
	"\x0echunks_deleted\x18\x04 \x01(\x05R\rchunksDeleted\x12,\n" +
	"\x12processing_time_ms\x18\x05 \x01(\x03R\x10processingTimeMs\"\x90\x01\n" +
	"\x13RebuildIndexRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12#\n" +
	"\rcollection_id\x18\x02 \x01(\tR\fcollectionId\x12!\n" +
	"\fdocument_ids\x18\x03 \x03(\tR\vdocumentIds\x12\x14\n" +
	"\x05force\x18\x04 \x01(\bR\x05force\"\xdc\x01\n" +
	"\x14RebuildIndexResponse\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12'\n" +
	"\x0ftotal_documents\x18\x03 \x01(\x05R\x0etotalDocuments\x12/\n" +
	"\x13processed_documents\x18\x04 \x01(\x05R\x12processedDocuments\x129\n" +
	"\n" +
	"started_at\x18\x05 \x01(\v2\x1a.google.protobuf.TimestampR\tstartedAt\"5\n" +
	"\x1aGetProcessingStatusRequest\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\"\xd4\x02\n" +
	"\x10ProcessingStatus\x12\x17\n" +
	"\atask_id\x18\x01 \x01(\tR\x06taskId\x12\x16\n" +
	"\x06status\x18\x02 \x01(\tR\x06status\x12\x1a\n" +
	"\bprogress\x18\x03 \x01(\x05R\bprogress\x12!\n" +
	"\fcurrent_step\x18\x04 \x01(\tR\vcurrentStep\x125\n" +
	"\x06result\x18\x05 \x01(\v2\x1d.indexing.v1.ProcessingResultR\x06result\x12#\n" +
	"\rerror_message\x18\x06 \x01(\tR\ferrorMessage\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x129\n" +
	"\n" +
	"updated_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\tupdatedAt\"l\n" +
	"\x18GetDocumentChunksRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\"]\n" +
	"\x19GetDocumentChunksResponse\x12*\n" +
	"\x06chunks\x18\x01 \x03(\v2\x12.indexing.v1.ChunkR\x06chunks\x12\x14\n" +
	"\x05total\x18\x02 \x01(\x05R\x05total\"\xd2\x02\n" +
	"\x05Chunk\x12\x19\n" +
	"\bchunk_id\x18\x01 \x01(\tR\achunkId\x12\x1f\n" +
	"\vdocument_id\x18\x02 \x01(\tR\n" +
	"documentId\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1f\n" +
	"\vchunk_index\x18\x04 \x01(\x05R\n" +
	"chunkIndex\x12\x1c\n" +
	"\tembedding\x18\x05 \x03(\x02R\tembedding\x12<\n" +
	"\bmetadata\x18\x06 \x03(\v2 .indexing.v1.Chunk.MetadataEntryR\bmetadata\x129\n" +
	"\n" +
	"created_at\x18\a \x01(\v2\x1a.google.protobuf.TimestampR\tcreatedAt\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"Z\n" +
	"\x1aDeleteDocumentIndexRequest\x12\x1f\n" +
	"\vdocument_id\x18\x01 \x01(\tR\n" +
	"documentId\x12\x1b\n" +
	"\ttenant_id\x18\x02 \x01(\tR\btenantId\"S\n" +
	"\x0fGetStatsRequest\x12\x1b\n" +
	"\ttenant_id\x18\x01 \x01(\tR\btenantId\x12#\n" +
	"\rcollection_id\x18\x02 \x01(\tR\fcollectionId\"\xe1\x03\n" +
	"\rStatsResponse\x12'\n" +
	"\x0ftotal_documents\x18\x01 \x01(\x03R\x0etotalDocuments\x12!\n" +
	"\ftotal_chunks\x18\x02 \x01(\x03R\vtotalChunks\x12(\n" +
	"\x10total_size_bytes\x18\x03 \x01(\x03R\x0etotalSizeBytes\x12+\n" +
	"\x11indexed_documents\x18\x04 \x01(\x03R\x10indexedDocuments\x121\n" +
	"\x14processing_documents\x18\x05 \x01(\x03R\x13processingDocuments\x12)\n" +
	"\x10failed_documents\x18\x06 \x01(\x03R\x0ffailedDocuments\x12L\n" +
	"\fby_file_type\x18\a \x03(\v2*.indexing.v1.StatsResponse.ByFileTypeEntryR\n" +
	"byFileType\x12B\n" +
	"\x0flast_indexed_at\x18\b \x01(\v2\x1a.google.protobuf.TimestampR\rlastIndexedAt\x1a=\n" +
	"\x0fByFileTypeEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\x03R\x05value:\x028\x01\"\x14\n" +
	"\x12HealthCheckRequest\"g\n" +
	"\x13HealthCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x128\n" +
	"\ttimestamp\x18\x02 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\"\x17\n" +
	"\x15ReadinessCheckRequest\"\xfe\x01\n" +
	"\x16ReadinessCheckResponse\x12\x16\n" +
	"\x06status\x18\x01 \x01(\tR\x06status\x12S\n" +
	"\n" +
	"components\x18\x02 \x03(\v23.indexing.v1.ReadinessCheckResponse.ComponentsEntryR\n" +
	"components\x128\n" +
	"\ttimestamp\x18\x03 \x01(\v2\x1a.google.protobuf.TimestampR\ttimestamp\x1a=\n" +
	"\x0fComponentsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x012\xa0\a\n" +
	"\x0fIndexingService\x12\\\n" +
	"\x0fProcessDocument\x12#.indexing.v1.ProcessDocumentRequest\x1a$.indexing.v1.ProcessDocumentResponse\x12k\n" +
	"\x14ProcessDocumentBatch\x12(.indexing.v1.ProcessDocumentBatchRequest\x1a).indexing.v1.ProcessDocumentBatchResponse\x12_\n" +
	"\x10IndexIncremental\x12$.indexing.v1.IndexIncrementalRequest\x1a%.indexing.v1.IndexIncrementalResponse\x12S\n" +
	"\fRebuildIndex\x12 .indexing.v1.RebuildIndexRequest\x1a!.indexing.v1.RebuildIndexResponse\x12]\n" +
	"\x13GetProcessingStatus\x12'.indexing.v1.GetProcessingStatusRequest\x1a\x1d.indexing.v1.ProcessingStatus\x12b\n" +
	"\x11GetDocumentChunks\x12%.indexing.v1.GetDocumentChunksRequest\x1a&.indexing.v1.GetDocumentChunksResponse\x12V\n" +
	"\x13DeleteDocumentIndex\x12'.indexing.v1.DeleteDocumentIndexRequest\x1a\x16.google.protobuf.Empty\x12D\n" +
	"\bGetStats\x12\x1c.indexing.v1.GetStatsRequest\x1a\x1a.indexing.v1.StatsResponse\x12P\n" +
	"\vHealthCheck\x12\x1f.indexing.v1.HealthCheckRequest\x1a .indexing.v1.HealthCheckResponse\x12Y\n" +
	"\x0eReadinessCheck\x12\".indexing.v1.ReadinessCheckRequest\x1a#.indexing.v1.ReadinessCheckResponseB.Z,voicehelper/api/proto/indexing/v1;indexingv1b\x06proto3"

var (
	file_indexing_v1_indexing_proto_rawDescOnce sync.Once
	file_indexing_v1_indexing_proto_rawDescData []byte
)

func file_indexing_v1_indexing_proto_rawDescGZIP() []byte {
	file_indexing_v1_indexing_proto_rawDescOnce.Do(func() {
		file_indexing_v1_indexing_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_indexing_v1_indexing_proto_rawDesc), len(file_indexing_v1_indexing_proto_rawDesc)))
	})
	return file_indexing_v1_indexing_proto_rawDescData
}

var file_indexing_v1_indexing_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_indexing_v1_indexing_proto_goTypes = []any{
	(*ProcessDocumentRequest)(nil),       // 0: indexing.v1.ProcessDocumentRequest
	(*ProcessingConfig)(nil),             // 1: indexing.v1.ProcessingConfig
	(*ChunkingConfig)(nil),               // 2: indexing.v1.ChunkingConfig
	(*EmbeddingConfig)(nil),              // 3: indexing.v1.EmbeddingConfig
	(*ProcessDocumentResponse)(nil),      // 4: indexing.v1.ProcessDocumentResponse
	(*ProcessingResult)(nil),             // 5: indexing.v1.ProcessingResult
	(*DocumentMetadata)(nil),             // 6: indexing.v1.DocumentMetadata
	(*ProcessDocumentBatchRequest)(nil),  // 7: indexing.v1.ProcessDocumentBatchRequest
	(*ProcessDocumentBatchResponse)(nil), // 8: indexing.v1.ProcessDocumentBatchResponse
	(*IndexIncrementalRequest)(nil),      // 9: indexing.v1.IndexIncrementalRequest
	(*DocumentChange)(nil),               // 10: indexing.v1.DocumentChange
	(*IndexIncrementalResponse)(nil),     // 11: indexing.v1.IndexIncrementalResponse
	(*RebuildIndexRequest)(nil),          // 12: indexing.v1.RebuildIndexRequest
	(*RebuildIndexResponse)(nil),         // 13: indexing.v1.RebuildIndexResponse
	(*GetProcessingStatusRequest)(nil),   // 14: indexing.v1.GetProcessingStatusRequest
	(*ProcessingStatus)(nil),             // 15: indexing.v1.ProcessingStatus
	(*GetDocumentChunksRequest)(nil),     // 16: indexing.v1.GetDocumentChunksRequest
	(*GetDocumentChunksResponse)(nil),    // 17: indexing.v1.GetDocumentChunksResponse
	(*Chunk)(nil),                        // 18: indexing.v1.Chunk
	(*DeleteDocumentIndexRequest)(nil),   // 19: indexing.v1.DeleteDocumentIndexRequest
	(*GetStatsRequest)(nil),              // 20: indexing.v1.GetStatsRequest
	(*StatsResponse)(nil),                // 21: indexing.v1.StatsResponse
	(*HealthCheckRequest)(nil),           // 22: indexing.v1.HealthCheckRequest
	(*HealthCheckResponse)(nil),          // 23: indexing.v1.HealthCheckResponse
	(*ReadinessCheckRequest)(nil),        // 24: indexing.v1.ReadinessCheckRequest
	(*ReadinessCheckResponse)(nil),       // 25: indexing.v1.ReadinessCheckResponse
	nil,                                  // 26: indexing.v1.DocumentMetadata.CustomEntry
	nil,                                  // 27: indexing.v1.DocumentChange.MetadataEntry
	nil,                                  // 28: indexing.v1.Chunk.MetadataEntry
	nil,                                  // 29: indexing.v1.StatsResponse.ByFileTypeEntry
	nil,                                  // 30: indexing.v1.ReadinessCheckResponse.ComponentsEntry
	(*timestamppb.Timestamp)(nil),        // 31: google.protobuf.Timestamp
	(*emptypb.Empty)(nil),                // 32: google.protobuf.Empty
}
var file_indexing_v1_indexing_proto_depIdxs = []int32{
	1,  // 0: indexing.v1.ProcessDocumentRequest.config:type_name -> indexing.v1.ProcessingConfig
	2,  // 1: indexing.v1.ProcessingConfig.chunking:type_name -> indexing.v1.ChunkingConfig
	3,  // 2: indexing.v1.ProcessingConfig.embedding:type_name -> indexing.v1.EmbeddingConfig
	5,  // 3: indexing.v1.ProcessDocumentResponse.result:type_name -> indexing.v1.ProcessingResult
	31, // 4: indexing.v1.ProcessDocumentResponse.created_at:type_name -> google.protobuf.Timestamp
	6,  // 5: indexing.v1.ProcessingResult.metadata:type_name -> indexing.v1.DocumentMetadata
	31, // 6: indexing.v1.DocumentMetadata.created_date:type_name -> google.protobuf.Timestamp
	26, // 7: indexing.v1.DocumentMetadata.custom:type_name -> indexing.v1.DocumentMetadata.CustomEntry
	0,  // 8: indexing.v1.ProcessDocumentBatchRequest.documents:type_name -> indexing.v1.ProcessDocumentRequest
	4,  // 9: indexing.v1.ProcessDocumentBatchResponse.results:type_name -> indexing.v1.ProcessDocumentResponse
	10, // 10: indexing.v1.IndexIncrementalRequest.changes:type_name -> indexing.v1.DocumentChange
	27, // 11: indexing.v1.DocumentChange.metadata:type_name -> indexing.v1.DocumentChange.MetadataEntry
	31, // 12: indexing.v1.RebuildIndexResponse.started_at:type_name -> google.protobuf.Timestamp
	5,  // 13: indexing.v1.ProcessingStatus.result:type_name -> indexing.v1.ProcessingResult
	31, // 14: indexing.v1.ProcessingStatus.created_at:type_name -> google.protobuf.Timestamp
	31, // 15: indexing.v1.ProcessingStatus.updated_at:type_name -> google.protobuf.Timestamp
	18, // 16: indexing.v1.GetDocumentChunksResponse.chunks:type_name -> indexing.v1.Chunk
	28, // 17: indexing.v1.Chunk.metadata:type_name -> indexing.v1.Chunk.MetadataEntry
	31, // 18: indexing.v1.Chunk.created_at:type_name -> google.protobuf.Timestamp
	29, // 19: indexing.v1.StatsResponse.by_file_type:type_name -> indexing.v1.StatsResponse.ByFileTypeEntry
	31, // 20: indexing.v1.StatsResponse.last_indexed_at:type_name -> google.protobuf.Timestamp
	31, // 21: indexing.v1.HealthCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	30, // 22: indexing.v1.ReadinessCheckResponse.components:type_name -> indexing.v1.ReadinessCheckResponse.ComponentsEntry
	31, // 23: indexing.v1.ReadinessCheckResponse.timestamp:type_name -> google.protobuf.Timestamp
	0,  // 24: indexing.v1.IndexingService.ProcessDocument:input_type -> indexing.v1.ProcessDocumentRequest
	7,  // 25: indexing.v1.IndexingService.ProcessDocumentBatch:input_type -> indexing.v1.ProcessDocumentBatchRequest
	9,  // 26: indexing.v1.IndexingService.IndexIncremental:input_type -> indexing.v1.IndexIncrementalRequest
	12, // 27: indexing.v1.IndexingService.RebuildIndex:input_type -> indexing.v1.RebuildIndexRequest
	14, // 28: indexing.v1.IndexingService.GetProcessingStatus:input_type -> indexing.v1.GetProcessingStatusRequest
	16, // 29: indexing.v1.IndexingService.GetDocumentChunks:input_type -> indexing.v1.GetDocumentChunksRequest
	19, // 30: indexing.v1.IndexingService.DeleteDocumentIndex:input_type -> indexing.v1.DeleteDocumentIndexRequest
	20, // 31: indexing.v1.IndexingService.GetStats:input_type -> indexing.v1.GetStatsRequest
	22, // 32: indexing.v1.IndexingService.HealthCheck:input_type -> indexing.v1.HealthCheckRequest
	24, // 33: indexing.v1.IndexingService.ReadinessCheck:input_type -> indexing.v1.ReadinessCheckRequest
	4,  // 34: indexing.v1.IndexingService.ProcessDocument:output_type -> indexing.v1.ProcessDocumentResponse
	8,  // 35: indexing.v1.IndexingService.ProcessDocumentBatch:output_type -> indexing.v1.ProcessDocumentBatchResponse
	11, // 36: indexing.v1.IndexingService.IndexIncremental:output_type -> indexing.v1.IndexIncrementalResponse
	13, // 37: indexing.v1.IndexingService.RebuildIndex:output_type -> indexing.v1.RebuildIndexResponse
	15, // 38: indexing.v1.IndexingService.GetProcessingStatus:output_type -> indexing.v1.ProcessingStatus
	17, // 39: indexing.v1.IndexingService.GetDocumentChunks:output_type -> indexing.v1.GetDocumentChunksResponse
	32, // 40: indexing.v1.IndexingService.DeleteDocumentIndex:output_type -> google.protobuf.Empty
	21, // 41: indexing.v1.IndexingService.GetStats:output_type -> indexing.v1.StatsResponse
	23, // 42: indexing.v1.IndexingService.HealthCheck:output_type -> indexing.v1.HealthCheckResponse
	25, // 43: indexing.v1.IndexingService.ReadinessCheck:output_type -> indexing.v1.ReadinessCheckResponse
	34, // [34:44] is the sub-list for method output_type
	24, // [24:34] is the sub-list for method input_type
	24, // [24:24] is the sub-list for extension type_name
	24, // [24:24] is the sub-list for extension extendee
	0,  // [0:24] is the sub-list for field type_name
}

func init() { file_indexing_v1_indexing_proto_init() }
func file_indexing_v1_indexing_proto_init() {
	if File_indexing_v1_indexing_proto != nil {
		return
	}
	file_indexing_v1_indexing_proto_msgTypes[0].OneofWrappers = []any{
		(*ProcessDocumentRequest_FileUrl)(nil),
		(*ProcessDocumentRequest_FileData)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_indexing_v1_indexing_proto_rawDesc), len(file_indexing_v1_indexing_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_indexing_v1_indexing_proto_goTypes,
		DependencyIndexes: file_indexing_v1_indexing_proto_depIdxs,
		MessageInfos:      file_indexing_v1_indexing_proto_msgTypes,
	}.Build()
	File_indexing_v1_indexing_proto = out.File
	file_indexing_v1_indexing_proto_goTypes = nil
	file_indexing_v1_indexing_proto_depIdxs = nil
}
