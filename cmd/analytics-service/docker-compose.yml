version: '3.8'

services:
  analytics-service:
    build:
      context: ../..
      dockerfile: cmd/analytics-service/Dockerfile
    image: voiceassistant/analytics-service:latest
    container_name: analytics-service
    ports:
      - "9006:9006"  # HTTP port
      - "8006:8006"  # Metrics port
    environment:
      - ENVIRONMENT=development
      - LOG_LEVEL=info
      - DB_PASSWORD=
      - CLICKHOUSE_PASSWORD=
      - REDIS_PASSWORD=
      - JWT_SECRET=dev-secret-change-in-production
      - OTEL_ENDPOINT=
      - SERVICE_VERSION=v1.0.0
    depends_on:
      - postgres
      - clickhouse
      - redis
    networks:
      - voiceassistant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:8006/metrics"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  clickhouse:
    image: clickhouse/clickhouse-server:latest
    container_name: analytics-clickhouse
    ports:
      - "8123:8123"  # HTTP interface
      - "9000:9000"  # Native interface
    environment:
      - CLICKHOUSE_DB=voiceassistant
      - CLICKHOUSE_USER=default
      - CLICKHOUSE_DEFAULT_ACCESS_MANAGEMENT=1
    volumes:
      - clickhouse-data:/var/lib/clickhouse
      - ../../migrations/clickhouse:/docker-entrypoint-initdb.d
    networks:
      - voiceassistant-network
    restart: unless-stopped
    ulimits:
      nofile:
        soft: 262144
        hard: 262144

  postgres:
    image: postgres:15-alpine
    container_name: analytics-postgres
    ports:
      - "5438:5432"
    environment:
      - POSTGRES_DB=analytics
      - POSTGRES_USER=analytics_user
      - POSTGRES_PASSWORD=analytics_pass
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ../../migrations/postgres:/docker-entrypoint-initdb.d
    networks:
      - voiceassistant-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U analytics_user -d analytics"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: analytics-redis
    ports:
      - "6385:6379"
    volumes:
      - redis-data:/data
    networks:
      - voiceassistant-network
    restart: unless-stopped
    command: redis-server --appendonly yes

volumes:
  postgres-data:
  clickhouse-data:
  redis-data:

networks:
  voiceassistant-network:
    driver: bridge
