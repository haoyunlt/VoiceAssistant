// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"gorm.io/gorm"
	"voicehelper/cmd/conversation-service/internal/biz"
	"voicehelper/cmd/conversation-service/internal/data"
	"voicehelper/cmd/conversation-service/internal/server"
	"voicehelper/cmd/conversation-service/internal/service"
)

// Injectors from wire.go:

// initApp 初始化应用
func initApp(dbConfig *data.DBConfig) (*AppComponents, error) {
	db, err := data.NewDB(dbConfig)
	if err != nil {
		return nil, err
	}
	conversationRepository := data.NewConversationRepository(db)
	messageRepository := data.NewMessageRepository(db)
	conversationUsecase := biz.NewConversationUsecase(conversationRepository, messageRepository)
	messageUsecase := biz.NewMessageUsecase(conversationRepository, messageRepository)
	conversationService := service.NewConversationService(conversationUsecase, messageUsecase)
	httpServer := server.NewHTTPServer(conversationService)
	appComponents := &AppComponents{
		Server: httpServer,
		DB:     db,
	}
	return appComponents, nil
}

// wire.go:

// AppComponents 包含应用组件和资源
type AppComponents struct {
	Server *server.HTTPServer
	DB     *gorm.DB
}
